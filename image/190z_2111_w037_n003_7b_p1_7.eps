%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 24.2
%%For:  
%%CreationDate: 10/29/2021
%%BoundingBox: 0 0 8000 2667
%%HiResBoundingBox: 0 0 8000 2666.6668
%%CropBox: 0 0 8000 2666.6668
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.2.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.2.0 x490 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 44 8%%BeginData: 12967 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45858585848585858485858584858585848585858485858584858585
%848585858485858584858585848585858485858584858585848585858485
%858584858585848585858485858584858585848585858485858584858585
%848585858485858584858585848585858485858584858585848585858485
%85858485858584858585847E857E857E857E857E857E857E857E857E857E
%857E857E857E857E857E857E857E857E857E857E857E857E857E857E857E
%857E857E857E857E857E857E857E857E857E857E857E857E857E857E857E
%857E857E857E857E857E857E857E85858584858585618585856185858560
%8584857E8584855A857E857E857E857E857E858584858585848585858485
%858584858585848585858485858584858585848585858485858584858585
%848585858485858584858585848585858485858584858585848585858485
%858584858585848585858485858584858585848585857EA27D7E77A2A1A2
%A1A2A1A2A1C3A1A1A1C4A1C3A1C4A1A87E858585848585858485857E855A
%857E855A857E855A857E855A857E855A857E855A857E855A857E855A857E
%855A857E855A857E855A857E855A857E845A857E855A857E855A8584857E
%8584855A857E857E857E855A857E855A857E855A857E855A857E855A8577
%707094707093BCB5BC93BC937676BCB5BC93BC93BC93BC937E5A857E855A
%857E855A8585848585858485858584858585848585858485858584858585
%848585858485858584858585848585858485858584858585537785858485
%858584858584999999A17E85847653854C7EFD0485848585858485858584
%85858584857E9B709B709B709BBCBC9ABCBC5913142F9AFD04BC9ABC9ABC
%7D858585848585858485857E857E857E857E857E857E857E857E857E857E
%857E857E857E857E857E857E857E857E857E857E857E857E857E857E8585
%774C8584857E857E857E846F936F996E9A84844B535A4B53857E857E857E
%857E857E857E857E857E857E9BFD07709A939A93760D130D130C76939A93
%9A939A93A161857E857E857E857EFD048584858585848585858485858584
%858585848585858485858584858585848585858485858584858585848585
%85848B5353FD0485848585857E9A99C39AC3A1857E76537E4B7D85858485
%8585848585858485858584858585769B707070777094939A937613603513
%0C0D52BC939A939A93BB7D858485858584858585845A857E855A857E855A
%857E855A857E855A857E855A857E855A857E855A857E855A857E855A857E
%855A857E855A8584857E77707E7E8585855A855AA89AC3A1A8A1A8857E4B
%775A4B52857E855A857E855A857E855A857E855A857E7770704C704C7070
%9A6F9A6F76A1A87D520576939A6F9A939A76857E855A857E855A857EFD04
%858485858584858585848585858485858584858585848585858485858584
%858585848585858485858584857EA19A9A93BC93BC94A18485858584CACA
%CAC3A884857E5253844B7D8585848585858485858584858585848585859B
%9B707170777E858485848584CACAFFA1A1A8858485848584858585848585
%8584858585847E857E857E857E857E857E85848584857E857E857E857E85
%7E857E857E857E857E857E857E857E857E857E8561A19393939A939A9393
%687D61857E85A1CACAC9A28584360C13594B528584857E857E857E857E85
%7E857E857E8584A1B5BC6F70768584857E8560A9C3CACACAC3A985857E85
%84857E857E857E857E857E857E858584858585848585858485857E7E8585
%858485858584858585848585858485858584858585848585858485858577
%BC9ABC93BC939A9393778585A977C4C3CFCAA98485132F0C354B7DFD0485
%848585858485858584FD05859BBC999A93A1FD0685A9FFCACACAA8FD0885
%84858585848585858485857E855A857E855A857E855A77709B77857E855A
%857E855A857E855A857E855A857E855A857E855A857E855A8561A193BC9A
%BC93BC9A9A8C7D85FFA877FD04A87E855A130C132F4C53855A857E855A85
%7E855A857E855A85537D539ABC9A6F99707D537D537D537DA8CAA17D847E
%537D537D537E7E855A857E855A857E855A85858485858584858585847770
%9B77A17DFD05858485858584858585848585858485858584858585848585
%85A2FD07BC9AB59BAFAFFF7DAFAFFF77A285A95A2E2F844B7DFD04858485
%85858485858584858576454C9ABC9A9A939A4B4C4B4B454B766084845AFF
%A97D454B4B4B52FD0585848585858485857E857E857E857E85857E457070
%77707077857E857E857E857E857E857E857E857E857E857E857E857E857E
%8584A29ABC9ABC9ABC9ABC92A1AFFFAFA9848584777E857E844B535A4B53
%857E857E857E857E857E857E857E857E7D539BBC9A6F93767E537E537D7D
%85358B1384AFAF847E537E538584857E857E857E857E857EFD0485848585
%8584857EA14B777DA8528585858485858584858585848585858485858584
%858585848585858485A1BC9ABCBCBC9ABC9AB577FFAFFFA9AF84A876AF85
%857E4C527E4B7D8585848585858485858584858585848585859ABC9AC39A
%A185857E85A9AF5A13350D84FFAFAFFD08858485858584858585845A857E
%855A857E855AA9C376A1CAA1845A857E855A857E855A857E855A857E855A
%857E855A857E855A857E855AA2BCBC93BC9ABC93BC93A1A9FFA9AF84AF7D
%7784857E7E4B535A4B52857E855A857E855A857E855A857E8552524C9A9A
%CACACFA1A27D7DA1FF8435060C0CAFA9AF84524B524B537E857E855A857E
%855A857EFD048584858585848585A8CAA876A17E85858584858585848585
%858485858584A9FD0685848585858485A2FD07BC9AB570A9FFFF84A27D9B
%7DAF85857E7653844B7D8585848585858485858584FD04857E4C52709BA2
%CA77A1C9CAC3FFCA850C0D0C35AFFFAFAF4C524C52538585858485858584
%858585847E857E857E857E857E8560A1F8274B5284857E8584AFA9AF85AF
%85AFA9AF85AF7D7E7D7D84AF7E857E857E855AA8BCBC93BC9ABC9ABC9370
%7DAF84A97770708484AF857E4B777E4B528584857E857E857E857E857E85
%7E857E857E7770764C704CA8C3C3C3CA5A0C0C0C2FAF84AF84857E857E85
%7E857E857E857E857E857E858584858585848585350D3660C3C9CA5A8584
%8585FD05FFAFAFFFFFAFFFA84C214B2152FD048584858585A1BCBCC3FD04
%BC999A709B84AFAFFF777785AFA8FF77764C774C764C7E85858485858584
%85858584FD0485A24C702E534C7053A9A8A884600C130C35CACBA8A98585
%8485858584858585848585858485857E855A857E857E35060C0D60608459
%1335855A8585AFA8AFA9AF84AFA9AF85A92827274C528B7E857E855A857E
%A193A160A193BC9ABC4B71708484AFA8CAA1A984C3C3A14B4C454CA17653
%857E855A857E855A857E855A857E8570944C8460776A705A855A852E2E06
%2F7DCACACA7E857E855A857E855A857E855A857E855A858584FD0485610C
%0D0C13133C3C3C13135AA985FFAFFFAFAFAFFFAFFFAFFFAFAFA9AFA9FFA9
%85858584858585A1BCA1849ABCBCBC9A77709B77AFAFFFCAFFCAFFCACAC9
%9B4C7D7ECFA17E8585848585858485858584FD04857770A1FFFFFFA87785
%85855A3553CACAFFCACFA88585858485858584858585848585858485857E
%857E8584850D0D0C0D0D1313360D130C135AA9FFFFAFFFFFFFAFFFFFFFAF
%FD06FFAF7E857E857E857EA193BCBCBC93BC9A9A4C9B707077A9A1CACAFF
%CACAC3CA84A8A8FF845253857E857E857E857E857E857E857E857E70A8AF
%7DFFC9CF84A9A884A8FFFD04CAA1595A857E857E857E857E857E857E857E
%857EFD048584855A0D0C0D0C130D3535130D0D0C3685FFCAFFA8FFAFFFAF
%FFAFFFAFFFAFAFA9FFAF858485858584859BBCA1AFCAC39ABC9A70709B70
%9B7070709BA1CAC9CAA1FFCACA9A766F7DFD048584858585848585858485
%8585769B5384A8CACAFFCAFFFD04CA7D7D6F4C0D85848585858485858584
%85858584858585845A857E857E5AFD050C130D360D13060C0D5A7070A1CA
%A8AFA9A87D7D7DAFA9AFA9AFA8AF7E855A857E855A9BA1AF368BA2BC93BC
%6F7070777070454C70A07CA7C3CAA17D274B456F53855A857E855A857E85
%5A857E855A8584A16F949A947085A8CACACA592F0C130C2E0C135A855A85
%7E855A857E855A857E855A857EFD04858485350D0C350C0D0D3C35130D0D
%0C134C954C9BCAFFA8774B4C4B4C4CA8AFFFAFFFAF8584FD05859ACA8560
%84A9BCBCBC94709B709B70704C7676A7A1A85227276F4B9A6F7DFD048584
%85858584858585848585859BBCBC9A939A85A9A8FFCA5906FD0413140DFD
%0585848585858485858584858585847E857E855A130C0C0C130C0C35130D
%360C0C0C704C704677844C214B214B274B217EAFAFA9AF84857E857E857E
%C39A8560857DBC9ABC6F70709B70704B704C7676855A706F9A4B70936F53
%857E857E857E857E857E857E857E8584A193BC93937685848535350C0C0C
%130D130D137E857E857E857E857E857E857E857E857E8585848585600C35
%2F0D0C0D0C350D3585840C5370704C707076214B2727214B274B27AFAFAF
%A9858585848585859ABCA1A8A1BCBCBC939A709B709B77704C704C707E85
%4B6FBC766F4B277D85858485858584858585848585858485A1BC939A939A
%84858535060D0C0D0D1313130D8585858485858584858585848585858485
%857E855A853635A1CA7D0C0C350C133585853628704C704C714B27212721
%272127212152FFA9AF7E857E855A857E9B93BC93BC93BC9ABC93FD04707D
%534C457045777E4C4B94939A212753857E855A857E855A857E855A857E85
%7EC3939A6F999A857E60FD040C2F130C130D0D5A857E855A857E855A857E
%855A857E855A858584858585A2CACAFF764C4C2E2EFD04857E7070707770
%70214B274B214B274B2152AFFFAFA98585848585859AFD07BC93BC6FFD04
%708577704C70718552706F9A704C4B7E8585848585858485858584858585
%8485A1BC9A9A939A84A936130C130C85351313130D858585848585858485
%8585848585858485857E857E85857D9ACACACA4C4C4B4C5985848577704C
%704C774B27212721272127212727AFAFAF7E857E857E857E9A93BC9ABC93
%BC9A93937070704577857E457070777E7E4B52524C527E7E857E857E857E
%857E857E857E857E857EC3BCBC939A9A857E360D0D0C0D5A360D130D357E
%857E857E857E857E857E857E857E857EFD04858485534CA1FFFFA24B764B
%765985857EFD06702727214B2727214B2153AFFFAF858485858584857E9A
%93B593BC93B593944C9B70707E8B7E704C7070857E4C5385277D85858485
%8585848585858485858584858585A1BC9A9A939A858536130C0D0C5A3613
%1313358584858585848585858485858584858585845A857E85847E4B4C76
%CACA76214C4B4B59857D704C704C70212721272127212721217DAFA8AF7E
%855A857E855A857E7E779A6F9A76A14C70707170855A7E4B7045707E844B
%5335130C607E855A857E855A857E855A857E855A8584C393BC939370857E
%840D0D0C0C2F360D130C357E855A857E855A857E855A857E855A857EFD04
%85848584524CA8A8CAA176214C4C767E8570717070777E214B214B274B21
%2752FFAFFFAF858485858584FD04858B5353858B8577709B70A285857E70
%4C7070857E7652130C1335A984858585848585858485858584858585A1BC
%9A9A939B8585853C0C0D0C353513131335FD058584858585848585858485
%8585847E857E857E77274C77A8C3CAA17D7DA9524C597D707070A8AF7E27
%272027212752AFAFAFA9FF84857E857E857E857E85857D4C857E854C7070
%957785847E4C704B707E844B5313130C5A85857E857E857E857E857E857E
%857E8584C393BC93937685848536130C0C0C350D130C357E857E857E857E
%857E857E857E857E857E8585848585774B4C4B4C4BCACAFFA9FFA852274C
%7DA270A2AFFFA95A2F532E533085AFFFAFAFAFA985858485858584858585
%534C4C524C704C7070764C524C704C7070774C4B53842859FD0485848585
%8584858585848585858485A1BC9A9A939A848585850D0D0C0D0C1313130D
%8585858485858584858585848585858485857E855A85704C274C4B4C4B7D
%774C53AF524B214C7EAFA9AFA9AF7E5A305A307EA9AF84AFA8AF84857E85
%5A857E855A85857D27534C4C45704C704C524C4C4C7070704C535285594B
%53855A857E855A857E855A857E855A857E857EC393BC6F999A855A857E36
%0C0D0C130D130D0D5A857E855A857E855A857E855A857E855A8585848585
%774C764B4C4C764C76FD044C4B4C4B77AFFFAFFFAFFF5A3036AFAFFFA9AF
%A9AFA9A9858584858585848585855377858B7D707070778585857E777070
%4C7E858B85844B7DFD04858485858584858585848585858485A1BC9A9A93
%9A848585A95A130D2F0D1413130C85858584858585848585858485858584
%85857E857E8570704C7D4C4B4B764C4C4B4B214B214B52AFA9FFAFAFA985
%5A85A9FFAFAFA8AFA9FF84857E857E857E857E85857D5285857D214C4B7D
%848584854C4B274B217759847E7D5A857E857E857E857E857E857E857E85
%7E8584C3B5BC939A9A857E85857E282E274C2E2F28597E857E857E857E85
%7E857E857E857E857EFD0485847E70707E85534C4B764B77537D537753A9
%A9AF85AFA9AF8485A9AF85AFA9AF85AFA985848585858485858584858585
%84857E4C214C4B778485857D4B524C4C4B7052FD05858485858584858585
%84858585848585859BBC9A9A939A85857E7E4C4B4B4C4C764C707D858485
%8585848585858485858584858585845A857E855A7E77857E855A7D537E7E
%85848585855A855A855A855A855A855A855A855A855A857E855A857E855A
%857E855A857E855A8559535377527E7E857E855A857E7E5A847E855A857E
%855A857E855A857E855A857E855A85849AFD0593857E77274C4B4C4C764B
%4C4B7D85855A857E855A857E855A857E855A857EFD04858485858584FD04
%858B85858485858584858585848585858485858584858585848585858485
%8585848585858485858584FD0485AFFD0E85848585858485858584858585
%84858585848585857EA27DA17DA885857E85848584857E847E8484858485
%8585848585858485858584858585845A857E855A857E855A857E855A857E
%855A857E855A857E855A857E855A857E855A857E855A857E855A857E855A
%857E855A857E855A857E855A857E855A857E855A857E855A857E855A857E
%855A857E855A857E855A857E855A857E85618561855A857E855A857E855A
%8584855A857E855A857E855A857E855A857E855A857E85A984AF85A984AF
%85A984AF85A984AF85A984AF85A984AF85A984AF85A984AF85A984AF85A9
%84AF85A984AF85A984AF85A984AF85A984AF85A984AF85A984AF85A984AF
%85A984AF85A984AF85A984AF85A984AF85A984AF85A984AF85A984AF85A9
%84AF85A984AF85A984AF85A984AF85A984AF85A984AF85A984AF85A984AF
%85FD7FFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164460, 2020/05/12-16:04:17        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.2 (Windows)"
   xmp:CreateDate="2021-10-29T23:53:39+03:00"
   xmp:ModifyDate="2021-10-29T23:53:40+03:00"
   xmp:MetadataDate="2021-10-29T23:53:40+03:00"
   xmpMM:OriginalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
   xmpMM:DocumentID="xmp.did:9017935d-cc8e-9a48-8755-f770ce3b8568"
   xmpMM:InstanceID="xmp.iid:9017935d-cc8e-9a48-8755-f770ce3b8568"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Basic RGB"
   illustrator:CreatorSubTool="Adobe Illustrator"
   pdf:Producer="Adobe PDF library 15.00"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:HasVisibleOverprint="False">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">2110_w037_n003_1A_p1_1111</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="88"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAWAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6ZnQujdirsVdirsVdirs&#xA;VdirsVdirsVdirXNOfDkOZFQtd6DatMCabwodiriyggEip6DBYTRdhQ6uKuxV2KuxV2KuxVIr/zp&#xA;olnOYeTzuuzmEBgD4VYqPuyiWoiC7fB2JnyR4to+/wDsKna+eNJuZDGkU4YCvxKn8HOUZtfDGLIP&#xA;4+Ll4vZrUTNCUPmf+JRf+JrD/fcv3L/zVmN/LOLul9n62/8A0Jar+dj+cv8AiVh816dz4BXL/wAp&#xA;4g/dyyR7WhV8Mq937WqPs1k4/DOXFx/zeLf5VaqvmPTyKkOp8CB/A5X/AC1D+aXI/wBCOf8AnR+1&#xA;cvmDTSd3Zfcqf4Vx/lnH3FB9ks/86KMtby3u4zJbvzQEqTQjcdRuBmy0+ojljxRdBrtDPTZPDnzV&#xA;svcN2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsSvZlT8yLORnCwjTnR5CaKG9VjxJ6V9sw55YjLuR&#xA;ydri0+SWlNRJ9Xce4MtVlYAqQQehG4zLBt1ZiQaLiHIISnM7LXpXtgmaBLLHG5AebCR5P8w6rcSX&#xA;VxcIJnmSCKSpo7sK7UA4qg67Zw84ZcsjKRsvpUM2DTwEIio/j7WQ6XZahYWE8F1ex3hi5LFNCXIH&#xA;GoI5OqE0I7bZ0nZXieEeI3XJ4/ts4jmHBHhsWfwC8uiu7kfl/rKCRuLXkAIr2cKWH08RXJRJ8I+9&#xA;vyxH5mP9V6n5Ydn8u6azGp+rx7n2UDNhh+ge50eqFZZe8pnljjuxV2Kpd5iuJbfRLyWI8XEZCt3H&#xA;L4aj78qzGolz+zMYnqIA8r+7d4/dTSI4VTTapzXveyKtpd3crc1V9+J7D29sw9f/AHfxcjSSPH8E&#xA;1a+1P4VjqzswUfCO5pXYZrdPihKVTPCF7W1uow4TLBDxMl8ug8z5DyUta8qeZbKCW6aEyoLf669z&#xA;GHAWJq0kPJVI6Vp1HfOnhqsXDQOz4xm7H1oy+JIEyMuKwevPyUdH1XU5rFGkJYglQ5APIDvXOf7Q&#xA;xQjk9HIh9X9l9dnzaW818UZGIJ5kDv8AMGxfl32izdXp/aYfKuYNPRcbOfJkU6aQWmUgyys6lupU&#xA;hRX8M6fsmBji36n9T537T5Yz1WxvhiAffZT3Nm867FXYq7FVK7vLWzgae6lWGFeruaDft88BIHNs&#xA;xYpZJcMRZQGm+ZdL1Gcw2zPyqQrMhCtQE7H5CtDlcc0ZGg5mp7LzYY8UgK96aZa692KuxV2KuxV2&#xA;KuxViHnNNRlvYYomYWpiBK8iEL8mrt3NKZzvbGSQmI3tX6S957KYIHDKdDj46vrVRY22mXQ6BW+R&#xA;/rTNPb1fAW9Km1Wx8x2CRu8UU8kccyA1VlZ+J5Dcd8ytFmlHLEA8yHW9r6SGTTTMogmMZEeRAt6r&#xA;rVteaV5el1uWLnBF6f7kE+oRI6opAoe751E9REGnzbSaM5piN8Np3DCYdNm+vsIPq/KaWegYKiqQ&#xA;zA/s0XvmiOGVkVT0kdZilwkHiNfG/cw3zTqBsdEu7u0FQfsMACAJWpzNKA/arnQYoCMAHjO09TMc&#xA;UwPVfy3/AEPH5LuVfLupWSxcYXeGdm60dZFRd/8AKU/hlGeIjA0KbOxNblzaipy4/Tzqvg9g8rf8&#xA;o5pv/MPH/wARy/D9A9zfq/72XvTTLXHdirsVSfU9Z0aaznt4762kmZSohWWNmJ8OINcwddkj4MqO&#xA;9O57GwTGqxkxNcXc891jTrUzrxXhVa/D8z2zncetyR830fNpYE9zOfL2q6DZaLaWzX1rDIkY9SNp&#xA;Y0YMdzyBI3zpNLmicYJIFvm3aunyHUzoSIvuKbW3mPy8tzETqdpQOpP7+LpX/Wy3JkiYnccnCxaf&#xA;IJgmMufcWT30OmWOlzpdyRvbyRSQozbERzAAxjxX4RnO78udvVkQ2kajGIryr3sZuLrR9IEdlNcQ&#xA;2QjWkcMzRwtxBI+x8Py6ZvdMBjhwmQJea1ZOfIZwgRH3KcevaHLIscWo2zyOaIizRliT2ABzJGSJ&#xA;6hxTp8gFmMvkUdk2l2KuxV2KuxVhP5oaRqlzpX6RtXWSOwjkkFkeQaRxQmjKr/s+IzX6zMIkB6Ls&#xA;WQjjnKt/x+P7HR+TvMtjps8cd3JFeQ6hEkVsvqeiUopa5deKgURjxqP6ZiY81zADs9RrImBlKFjl&#xA;+lmNotyttGt06yXAUCV0FAT4gZuhdbvHZTEyJiKj0VcLW7FXYq7FXYq7FUh8zCqxE9VYgfIgHOZ7&#xA;Y/vR7n0L2TFYD/W/UkOal6tCKK+YtMHWs0Ow6/3oy7S/3sP6w+9xO0f8Vy/8Ln/uS+hNWs7S90ia&#xA;1lANvKgA8BuCh+hqZvRzfLo5DHcMF886pcr5WurIOWm1ForOGu5JlkHIV/4xhsuLLssXmBPKNyPw&#xA;W6pbJDHNAV+ARU4sOoKd6+OZ2M+h15PFKz1eIW+/kLWSdz9ftxX2AG345gCROM33u9GCGPUREIiO&#xA;x5CnrXlb/lHNN/5h4/8AiOZ+H6B7nT6v+9l700y1x3Yq7FXnEml/l4uoNcaffN9d5loLZHYxc/BR&#xA;xpx+nNRrI4vDlR3eq7JnqfHxiQ9Npy/5f+Z9RjW5gtlWPh8KyuqM3fZTuPppmgjikQ9jm7QxRlVo&#xA;Sb8sdFVFl1OO+W8cVuFg5yor9CAYkkX8c3umGHwwJH1PG6/LqTmkYRuF7fi0xk/K/wAn+X7Btcvo&#xA;551tkMyWlw/wEinASLRa1Yj4T9Phl0Y45Goun1uvz4YHjobJb5K81W+va35f8vR23pH69Lf39waU&#xA;meJGmRVAHwovpgBemw8MyZxAs/B5vT5ZTMYy/nGUvM/sel/mpo/l3UPLLTa5+6gtZEZLpdpI+bBa&#xA;KwDGjVAIzGAiT6uT0OnyZIy9HMvI9P0X8q4r6CRNSeWRJFMccsjcC1fh5fAu1ffLIxw3zczJk1Ri&#xA;bj+Pm9LzPdK7FXYq7FVK7u7aztpbq5kEUEKl5HPQAYsZSERZYvoX5lQanqQtbS3NuG5BJpWB3Ckq&#xA;SgoO382Y2pxDJAjq06Xto4Mw29J579EJ+gfMOj2VxrOoeftTv74XSXEkf1eJIPRkPpyQei7S/CQ5&#xA;pxYKvZa75q9PgkcgsVT0Gt7UxQ05IycV9Ou+3LoziykgujBIj84JipDr3Vu4zeHk6aMhIWOTLofL&#xA;eiNGrF5SWHSuYMtRMFyY44kXa3/D2i+v6fM8fHlv0r0w+POrY8EeKravNB0eGNnjDvRSwQtRiQOn&#xA;04xzzKZwiC+e5vzu1VJXUaRapxYjgzTcloejfENx8sh+am7X+TMfeXqmmXo1HQNL1Q2zWct7D6kt&#xA;uxJ4tWlRyAPFh8Q9jmXhmZDd1GeAjMgG6Vcuakk8xo8ptYoxyd5JAFHc8Y6frzmu1gTmAHOn0D2X&#xA;nGGmlKW0QeaSXdpJbSBHZH5KGV4nWRGU9wyEqc1mXFLGakKL0ej1mLUw48R4osc8yGssEY6yih/1&#xA;Qat/TL9Fi4p30C6zJwwr+d+C9t8pa4+s+WbBOYPBAt1ITuGjoGqB033H0ZvK6vl3aGE480odLv4M&#xA;MPkzXbLz1ar9Zub/AMtoxu45ZassUy8gsbU+HkrHZqdD88EJAmrdtlz3ppS4QJkVy6HmynzI5XTL&#xA;mdI2muoImPpA7uBUkdPtUJp49Ml+cjA8JdXpezMmWImPp/HR4Et1DFoF9o7B+d1cJOZaAcDHQceN&#xA;d6061yqOT0V3u7yaU+IJk8tqen+VNUuEMWgXdlLaXVlbKxMtPjVSEqB8/fM3S5xMUOjpe0tHwEzu&#xA;7P37skzMdU7FXYqwbzrpPlzTIHvbfT0/S9yzNE6Eqajd2pXj3p075hanHCuW5eg7Flmnku/TAf2B&#xA;K4W8+xeV0urRbyDQA0hLW9UVpSAG5yIeXEceO/w198x/CHPa+5zpdrY/zPhmEufDxUOHi7u/n6bq&#xA;rZV+W/miS/0k2d3y+uWFELE1Yxn7FT4inE/LKTofE3iaLdq9edPIccfRLu5g9yz84fMTyeXksy6o&#xA;93KBQnjVIxVtv9YrmXp8HhD1EWXke2cp1IAxQkQDv1PyHmxn8kNK1FvOUOoR2zvZwRTK92AfSVmQ&#xA;qBypQk16ZLU5oxjztwuzNBlll9UZRG+5Bexeb47fUdNk0nUUW4t5ijSREkV4tzG68ehAyrSkZCdu&#xA;TuNRgnpyJA87phcHkPyjBMk0WmRCSNgyEl2AI3BozEZmjBAdGiWtykUZJ9lziuxV2KuxV55+bWsN&#xA;HBa6UjUE4aaYDuFICfRXlkSXW6+ZsRHvYHo03psShpMpDj5D+3GLptSDYPRkWp6ncvpdqhkISVJG&#xA;kjH2aCU8dvbhhA3LUT6QAmn5ZecPSuU069kCwlg0TuaKj1r1PQN+v54CbDudBkMJjH/DLl7+74vd&#xA;tH87eT9ZnuINLKXD2xAlHp8NmrRl5AEg0zSTySjzt7g9lyiNwAmst3pkMJnlhijiUcmkfiqgeJJG&#xA;Wi+91xiAa4d0FZ+aPKd/OYLK6sLucVBihmhkfbr8K1OIvvTKFbmP2Jh6ln/yyR/cv9MPq72Hp/mh&#xA;jnm8Rc7R441j5K9VUADYjwpmXpL3tozgbUKY7mY0JXLpl5q2tx2doyxSRAzvO5IWNAF+IkeBGc32&#xA;hCUtRUedB7vsfU48HZ5nk3iSRXf5ITWdFnWyj1VL1L+CSiyMPheM9KMpJ2rtt3zF1mmyQPFI35uf&#xA;2H2vp848PHHw63A+9gfmE0v7TwKOv0mh/wCNcs7OO8h7nZ64fSff+hH+WfOd55ZllmRfWtXFZbct&#xA;x+Jfsspo1DX23+6m1dB2hoIaiIs1IdWb+Vvzmh1OZbSXSpo+OxljYSKoptyJCGpp0AzX5oiAuUgB&#xA;+Pe1TwCI2+TLptQgveEsULIDseSlJK9OhocoJuiQfu+9lgrhPCRt9nvYdqt5+UflW5e9uVtbvUZ3&#xA;Mv1b1FkdnZj9mpdIhyBqeg6daDMrxTH6Rt9rg+DLKfXP1H4D9f2pLoPnOfzP5xkuXSGO3S2uEtEh&#xA;cTFVe4EvF5AqA0rsO2ZXZxHEaBH7S4naunOPCLkJbjl5CujMs3DzrsVdiqQ+dtGGp6FOEJW6twZL&#xA;eQGhqB8S1/yl/GmY2qIECT0dt2NkkM4iP49ky0H807C0htLH6nLpuj6TplGglX1Lie5DIipEQQrf&#xA;tFmYgtWtAATmr8XH/ODtdR2PqTMGrs/i080TS/LOoRNf6ekUUt23q3Mlshh9XsC8bfZYGv2Rx/iN&#xA;PnzYsdyqV8pfrDRqsEcubglxRMB9N38j+Cg/NOm+RdNlgvPMREsaBvq0NwwMZY7t+7AHM7dDX5ZY&#xA;dVmy+mI+TiZdDpMJGXLKuHlf6ANylGpfnJoOn2vpaRZPcJGoEEcKCOOnYDlw4j/YZA6HLVn9bLF7&#xA;QaKU+ASPLmfTH7d/sQXlXzpf+aJr+e8gFsYDF6cAPIqrqftNRamq+AzZaTD4cfMur1WvGoyy4SDC&#xA;Owr7WQZltDsVdirsVdirzDzB5U80eavM98dNtWnitWEIkkKxqvEV4qWIB3P4++Y+bPCH1F1+PRZ9&#xA;TkmYAkRNXyHu3/Qwu50vU7HVBYyQtBfwuIXialeZPQ/f2rtkhMEWHBy4JRJhMEMs0SxXzFrKRLFw&#xA;sITxkRagLEldq/a+M9/E1y2PJow6bjzV/CPuSfVPLlxoOuTW03xwohmtpf54+in5jv75j5zQer9n&#xA;tFesuXKETL9A+/7FPQte1XR9RW80+4aGaoL0OzgHlxYdwaZhyiDze/lES2KD/Mv8y9Y8y63cJI7R&#xA;6dbSslpY8v3aBDxqQKcnPdj9G2UkukhiGMkc5dSxCHVJUkV6cSpBVkJBBHQjA2cT6P8AyH/Mq+1+&#xA;KfQNWmNxfWcQntLpzV5YOQVg5PVkLDfqfoyyJdXrMAj6hyLP/NZJ+q+wkH/EczdL1dXm6MfzLaUm&#xA;uNVfTtbkfcxTRLHMq9StQ361zn9XqPC1XEdxT2vZ/Zx1fZogDUhMkIXU9Xs5LL6nYxGOJmLvUBRU&#xA;tzNAPFjU5Tru0I5Y8MQ5PYXs7PS5fEyEbXQHn1YP5l+3G3eIK/0BjX8K5haOfDkHns9Pq4XiPlug&#xA;ltheFbYOE9dljEh6DkaA5vgLLpMsuGBPcEmH1zSNSeKeEetAxSa3lqUJXswUjkK7jehyOSFiuTjQ&#xA;mJxEonYvQ9Q8wR3/AOWeoX68opuKpfrA7I7UlUMvMlmoyMeteuI02OOImI9fedy6LIZ49UIEnwug&#xA;G21cvmwKx8v6ZJFazWcESiSWL63FcD12SJ4zIeLNRegP7OaeWWVmz7q2eqx6THUTADcjiv1bVbI/&#xA;yt1VNS8xyPFb/VoYLeRI4U+wsfNeNFpsd9/fNt2djMZGzbzfbmpGXEKHDRqunV6xm5eVdirsVUNQ&#xA;XlYXI/4qc/cpOYfaH9xL3O17E/xzH/Webat/fJ/q/wATnIB9Tmz7yvdNa6BazrIYxHGzM4NKAEk5&#xA;1mhgJYIgi/7Xy/tvKYazJIGv7A8o83/mDrvmOH6letG9pDOZYWEarJtyCBmHUKrke/euWw08ISMo&#xA;iidnk8/aGXPARmbF380HBDNDbxLMhRiiuAdqq45KfpUg5lDk6PPGplnH5XD99qze1ute23qH/jbH&#xA;q7nsgeks9xdu7FXYq7FXYqx688+t5Y83wWtxHXSrq2WSR1X4kl9RkZ9vtLxC8h16EeB1Gvx3IEc6&#xA;ei7IP7oj+l+gLfzb8tafrmkw+b9I4zNEoF28W5eLoslV7xnY+3yzDxTo07GUAdjuHnnkbzjZaFfT&#xA;JdKWtLjjGZVHORWB6jqxXfcZscOoMT6uTqdT2XjPqxxEZeW1s3/MT07ny9DcQlZIy9UkXcFXRiCD&#xA;4GmZOo3iCnsHbNKJ58P6Q8uthW4j/wBYZil6mPNheo1/SF1U1PqvU/7I5jF0+X6j70Pi1vVP+ccb&#xA;C7ufzCS5jqILC1nknbelJAI1X6Wav0ZKHNxdZKoU+ivNf93Z/OX9SZnaXmfh+l0ubkGO5mNDGfMW&#xA;nas14bq2iF1AygGNSFdSNu/2hmg7S0OSc+OIsPb+zvbOnxYfCyHgkCd+hv7mNy39zFcC2ktJIpyv&#xA;MRMDzK1pULRTT3zTSwzBoxPyevhq8ExcZxI/rBKvMK3/AKHry2zwJMwgiLqQCTXxArtXMrS6WZmJ&#xA;SBADjajX4jEwhKMpHuNofRtAW91rT7aJaReqHn3P2E+JvpoubzHG5AOh7QyDFhlIdB9p5Jr+bVvD&#xA;Hq1lOEUNLEfVIFGbg1ByPfY0y3Ujd1HYUycZB6FFeQEtNU0nWrSaOkDJEpjB7AOailO+OGIIIKe2&#xA;8hjLHIdOL9DFbK25+X7y5jnaO6juUhhgDcUdCnxEjrUKadcxMelExdbtet7a/KSAnIiB99vRPy98&#xA;vaDZadHqFgpN3NH6Vy5Yni2xZAuwG4GbDDhEN+ro83aI1A9J9F7MuzIcZ2KuxVbN6foS+r/d8G51&#xA;/l4muYev/uZOz7Gv81CudvMtW/vY/wDVP685APqs2YWNvLc+S/Qi/vZbaREHiTyAH0513Z39xH8d&#xA;Xyj2lgZajKBzP/Eh4rflluWWgAFKCnXMqXN4nAPTbL/M91De3drfRAKt3aQy8F6KePEr/sStMsDH&#xA;tAg5Ae8BkP5WCttqkhBVmnRSD4Km368i7TssAQZzhdm7FXYq7FXYq8S86+Z77UNZUycBb2UzrboV&#xA;FQCaHkab/ZHXNVnyGRetw6SGEDh5kC3oHkr8y9L1BprDW1tNLkI5JLFH6UcrHZvWUVUMRT4uh+7M&#xA;LNC9w3YB4diyR5omy8iflDdazf8A1Gea91KKCSVNGjnVIZWKhgYJOHblUUkIHfaoy2AJAcLPmnA8&#xA;qjfN51p/mSSzvrvy3qSNBpckpjCPItw9q4aoPOMKr8T9riBXsMvhkIHCeTbGPrjlj9Q+0fjkzjyX&#xA;+Uepya9bX1/6f6HhYTxyxyJKs4HxJ6fEklW23IG3vhtv1faeMQIgfUfLkhPzn/J6xN62vaODam7Z&#xA;nvlCloVlJBLmm6cy1du/z2txacZNgal97z8dfLHVi4vMrD8sNVuJo1adHWQqqi2V5SWY0C7qlCct&#xA;HZ0h9RADOXa8f4Ym/P8ABfTf5deRdG8l6EtnaKfrlyEl1CeUq0jycfsllAHFKkKP4knMUxAO3Jpy&#xA;ZpZN5Jh5po0Fo6moDSD7wn9MydLzLj5eQY7mY0OxV5/5r1h9I/MCzvVtZLumnFPSiry+KV99g3TM&#xA;PLPhyA1ezttLh8TTkE16v0BIfOHnCfWJLJRYSWn1YvIY5uXJuVACAVXYUyvJl4ulO47J0gxXIHit&#xA;3lvzH+jbxrwafPdEIY+Ean4S1DXYN2GRxz4TdW5Ha0RkxiF8O/3KHnXXZ9fntZRYTWhgVlKSA1PI&#xA;g1FVXDkycXSmnsrTeHGVHisr/KGuS6FDeD6jNdtdgLxjDBl4g7kBW2+LHHk4b2tPaum44xs8NFDH&#xA;QruDylLql3FJAv1ukMLgqzxyqqFqGhHxJtksXogSXnO1tKdVliMchxR+T0nyHpgstAik583vaXDd&#xA;aKGUBVG/YDrmZCVi3V4dIdPcCbN7siybc7FXYqo33+8Nz/xhk/4gcw+0P7iXudr2J/jmP+s821f+&#xA;8j+R/XnIB9Tmzzyz/wAcGz/1D/xI513Z/wDcR/HV8t7d/wAcye8fcHk35gaSbDzBMEWkUtZY6DYK&#xA;xr+BJH0ZlyeLyQ8PJKPxHxQdlcyzWcKOaiAGOP8A1eRf9bnJR5OBqT6vgzz8rXPLV46mgeBqdviV&#xA;h/xrg6u47KPoP472eYXauxV2KuxV2KvJn8j3lz5qNjqFvI1pcPJI9zHULxILclehFQT0I65geDcq&#xA;L1ubXYjp+OJ9Qrbr7kPrH5da5pko+rxHUrUbRTRL+9X2ePc/StfoyrJppR5buNp+0ccx6vSUPZ+Q&#xA;fMmq8o1gNlxFfVug8QNduIHEsag+GRhp5npTPNr8URz4vcrL+TvmlWWl1ZgE7lZJdh4/3Yyz8pLy&#xA;cf8AlXH3S/Hxe6+U7ux0Ly5p+kO0s72cQSSbioDNUliPi6VO2WDTS8nWZdQJyMu9X17VNN1TR7qw&#xA;ZJaXCcfsr1BBH7XtlmLDKEgdmmc4kUlnk6DRvL1q4RZ3uJ+ImYheJ4VAKjlty60rluoE8h6MMfDH&#xA;vT1/MGmu3IpMD8l/5qzH/Ly8m3xIoHV9TtbuCGKBXHpszMXAH2gB2J8Mtw4jEm2E5gjZKsyGp2Kp&#xA;XLoSSeZIdbMxDw2zWwgpseTcuXKvudqZWcfr4vJvGesXh11thX5raDrl3fWV7p1vJdRiJopUhQyM&#xA;pDcgSAD15eHbMbVQkSCHZ9l6oY4mJNbq/wCXOpX1k7aRf6W9q0h5JcLBIjVO4WWqjx2bHTzI9JC9&#xA;pR8T1iQNdL+5MPzI8saprVraPpcSSXUDsH5FVYow6Bm2pXtlmoxykBTR2bqxiJs0CxHRvK/5kaFe&#xA;xXlpbLyPwzJyhYFa1KuA3Tbscxo48sTYDsc+swZo8M5be4/qZ5HZ6h5k0aew8w2TWB5IVkhdasVP&#xA;LkgPqcaEd69cygDONTFOplKGGYlilxJ9Y2cVlZQWkNTFbxrGhbdiFFKmlN8ujGhTiZJmUjI8yrZJ&#xA;g7FXYqoagyrYXTMQAIZKk/6pzC7Q/uJe52vYn+OY/wCs801OWOSRODBqAg0+eciH1OZZxot7bWfl&#xA;i3urh+EESEu1Cf2yOgqTvnWaCQGCJP43fMO2sZlrZxHMkf7kPLvP/m+21nUYTp8Ja3gj4GSVCCzc&#xA;idh4D3xyas36eTj/AMhY8nqyE8Xkf2JTZPNHCVuDxdjVVA+yP1ZXHVSDPN7M6bJX1RodD99gvTPy&#xA;ttYhp19ehmaWecRNWlOMShloAB/v01zMwZDMWXAzdnY9LLhgTRF7/FmuXtTsVdirsVT3/Bmt/wAs&#xA;f/BjMT85Byfys3f4M1v+WP8A4MY/nIL+Vm7/AAZrf8sf/BjH85Bfys3f4M1v+WP/AIMY/nIL+Vm7&#xA;/Bmt/wAsf/BjH85Bfys3f4M1v+WP/gxj+cgv5Wbv8Ga3/LH/AMGMfzkF/Kzd/gzW/wCWP/gxj+cg&#xA;v5Wbv8Ga3/LH/wAGMfzkF/Kzd/gzW/5Y/wDgxj+cgv5Wbv8ABmt/yx/8GMfzkF/Kzd/gzW/5Y/8A&#xA;gxj+cgv5Wbv8Ga3/ACx/8GMfzkF/Kzd/gzW/5Y/+DGP5yC/lZu/wZrf8sf8AwYx/OQX8rN3+DNb/&#xA;AJY/+DGP5yC/lZu/wZrf8sf/AAYx/OQX8rN3+DNb/lj/AODGP5yC/lZu/wAGa3/LH/wYx/OQX8rN&#xA;3+DNb/lj/wCDGP5yC/lZu/wZrf8ALH/wYx/OQX8rN3+DNb/lj/4MY/nIL+Vm0/knWXUq8cTKwoVL&#xA;AgjAdXjIosoafJE2Nj70N/yra4rX6jaV8aJ/TKuPT/zR/pQ5Xj6z/VJ/6c/rRKeSNZRQiRxKi7Ko&#xA;YAAewGWjV4wKDiz0+SRuW5Pm3/gzW/5Y/wDgxh/OQY/lZqJ/L/UGNTbW5J7nj/TB+ax/gMvAy9/2&#xA;qkfkfV414xxRIv8AKrAD8BhGrxoOmyHmu/wZrf8ALH/wYx/OQR+Vm7/Bmt/yx/8ABjH85Bfys3f4&#xA;M1v+WP8A4MY/nIL+Vm7/AAZrf8sf/BjH85Bfys3/2Q=="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:3d75bde8-8f23-f143-a0ab-8f2ac8514b90"
    stRef:documentID="xmp.did:3d75bde8-8f23-f143-a0ab-8f2ac8514b90"
    stRef:originalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:c8012df2-030e-454e-b538-09c89e3ecc49"
      stEvt:when="2021-10-25T11:54:47+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:3d75bde8-8f23-f143-a0ab-8f2ac8514b90"
      stEvt:when="2021-10-29T23:53:37+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:9017935d-cc8e-9a48-8755-f770ce3b8568"
      stEvt:when="2021-10-29T23:53:40+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="8000.000000"
    stDim:h="2666.666700"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                 
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -2666.67 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2666.67 li
8000 2666.67 li
8000 0 li
cp
clp
8000 2666.67 mo
0 2666.67 li
0 0 li
8000 0 li
8000 2666.67 li
443.001 2307 mo
443.001 2307 643 2439 667.001 2443 cv
685.579 2446.1 771.304 2458.79 823.928 2458.79 cv
828.237 2458.79 832.33 2458.7 836.14 2458.52 cv
845.879 2458.05 853.81 2456.95 858.999 2455 cv
891 2443 926.999 2395 926.999 2395 cv
926.999 2395 li
926.999 2395 li
926.999 2395 1125.64 2407.2 1174.87 2407.2 cv
1178.38 2407.2 1181.14 2407.13 1183 2407 cv
1197.9 2405.94 1220.15 2399.21 1238.92 2391.95 cv
1270.13 2400.9 1512.73 2404.02 1766.28 2404.02 cv
2059.39 2404.02 2367.14 2399.85 2379.67 2395.67 cv
2403.67 2387.67 2358.33 1278.33 2358.33 1278.33 cv
2358.33 1278.33 2361 1267.67 2363.67 1257 cv
2363.67 1257 li
2364.05 1255.47 2364.21 1251.01 2364.2 1244.44 cv
2364.18 1237.57 2363.97 1228.39 2363.6 1217.89 cv
2362.91 1197.98 2361.67 1173.33 2360.19 1150.58 cv
2360.19 1150.53 2360.18 1150.49 2360.18 1150.45 cv
2360.17 1150.34 2360.17 1150.24 2360.16 1150.12 cv
2358.02 1117.22 2355.37 1088.41 2353.16 1083.95 cv
2353.16 1083.95 2353.16 1083.94 2353.16 1083.94 cv
2353.14 1083.92 2353.13 1083.89 2353.11 1083.86 cv
2353.11 1083.86 2353.11 1083.85 2353.11 1083.85 cv
2353.1 1083.84 2353.1 1083.84 2353.1 1083.83 cv
2353.09 1083.83 2353.09 1083.82 2353.09 1083.82 cv
2353.09 1083.81 2353.08 1083.81 2353.08 1083.8 cv
2353.07 1083.79 2353.07 1083.78 2353.07 1083.78 cv
2353.06 1083.77 2353.06 1083.77 2353.06 1083.76 cv
2353.05 1083.75 2353.05 1083.75 2353.04 1083.74 cv
2353.04 1083.74 2353.04 1083.73 2353.04 1083.73 cv
2353.03 1083.72 2353.03 1083.71 2353.02 1083.71 cv
2353.02 1083.7 2353.02 1083.7 2353.02 1083.7 cv
2353.01 1083.69 2353.01 1083.68 2353 1083.67 cv
2351.09 1080.8 2219.63 1079.3 2046.87 1079.3 cv
1738.5 1079.3 1298.7 1084.08 1230.33 1094.33 cv
1230.33 1094.33 1230.33 1094.45 1230.33 1094.7 cv
1230.33 1094.72 1230.33 1094.74 1230.33 1094.76 cv
1230.33 1094.77 1230.33 1094.79 1230.33 1094.8 cv
1230.33 1094.82 1230.33 1094.85 1230.33 1094.87 cv
1230.33 1094.89 1230.33 1094.91 1230.33 1094.93 cv
1230.33 1094.97 1230.33 1095.01 1230.33 1095.05 cv
1230.33 1095.06 1230.33 1095.07 1230.33 1095.08 cv
1230.33 1095.09 1230.33 1095.11 1230.33 1095.13 cv
1230.33 1095.14 1230.33 1095.15 1230.33 1095.16 cv
1230.33 1095.17 1230.33 1095.18 1230.33 1095.2 cv
1230.33 1095.21 1230.33 1095.23 1230.33 1095.24 cv
1230.33 1095.25 1230.33 1095.26 1230.33 1095.26 cv
1230.33 1095.29 1230.33 1095.31 1230.33 1095.33 cv
1230.33 1095.37 1230.33 1095.41 1230.33 1095.45 cv
1230.33 1095.47 1230.33 1095.48 1230.33 1095.49 cv
1230.33 1095.65 1230.33 1095.82 1230.33 1096 cv
1230.33 1096.07 1230.33 1096.13 1230.33 1096.2 cv
1230.33 1096.27 1230.33 1096.33 1230.33 1096.41 cv
1230.33 1096.47 1230.33 1096.54 1230.33 1096.61 cv
1230.33 1096.67 1230.33 1096.74 1230.33 1096.81 cv
1230.33 1096.87 1230.33 1096.94 1230.33 1097.01 cv
1230.33 1097.25 1230.33 1097.5 1230.33 1097.77 cv
1230.33 1097.8 1230.33 1097.83 1230.33 1097.87 cv
1230.33 1097.89 1230.33 1097.91 1230.33 1097.93 cv
1230.33 1097.96 1230.33 1097.99 1230.33 1098.02 cv
1230.33 1098.03 1230.33 1098.05 1230.33 1098.07 cv
1230.33 1098.11 1230.33 1098.14 1230.33 1098.17 cv
1230.33 1098.97 1230.33 1099.88 1230.33 1100.91 cv
1230.34 1100.92 1230.34 1100.94 1230.34 1100.95 cv
1230.35 1113.59 1230.4 1142.71 1230.61 1173.82 cv
1230.61 1173.82 li
1230.91 1218.52 1231.54 1267.33 1232.84 1277.31 cv
1232.84 1277.32 1232.84 1277.32 1232.84 1277.32 cv
1232.85 1277.39 1232.86 1277.45 1232.87 1277.51 cv
1232.87 1277.52 1232.87 1277.53 1232.87 1277.54 cv
1232.87 1277.56 1232.87 1277.57 1232.88 1277.59 cv
1232.88 1277.59 li
1232.88 1277.6 1232.88 1277.62 1232.88 1277.63 cv
1232.88 1277.64 1232.88 1277.64 1232.89 1277.65 cv
1232.89 1277.66 1232.89 1277.67 1232.89 1277.69 cv
1232.89 1277.69 1232.89 1277.69 1232.89 1277.7 cv
1232.89 1277.71 1232.9 1277.73 1232.9 1277.74 cv
1232.9 1277.74 1232.9 1277.75 1232.9 1277.75 cv
1232.9 1277.76 1232.9 1277.78 1232.91 1277.79 cv
1232.91 1277.8 1232.91 1277.8 1232.91 1277.8 cv
1232.91 1277.81 1232.91 1277.83 1232.91 1277.84 cv
1232.91 1277.84 1232.92 1277.85 1232.92 1277.85 cv
1232.92 1277.86 1232.92 1277.87 1232.92 1277.88 cv
1232.92 1277.89 1232.92 1277.9 1232.92 1277.9 cv
1232.93 1277.91 1232.93 1277.92 1232.93 1277.93 cv
1232.93 1277.94 1232.93 1277.95 1232.93 1277.96 cv
1232.93 1277.96 1232.94 1277.97 1232.94 1277.98 cv
1232.94 1277.99 1232.94 1277.99 1232.94 1278 cv
1232.94 1278.01 1232.94 1278.02 1232.94 1278.03 cv
1232.95 1278.03 1232.95 1278.04 1232.95 1278.05 cv
1232.95 1278.06 1232.95 1278.07 1232.95 1278.07 cv
1232.95 1278.08 1232.95 1278.09 1232.96 1278.09 cv
1232.96 1278.1 1232.96 1278.11 1232.96 1278.12 cv
1232.96 1278.12 1232.96 1278.13 1232.96 1278.14 cv
1232.97 1278.15 1232.97 1278.15 1232.97 1278.16 cv
1232.97 1278.17 1232.97 1278.17 1232.97 1278.18 cv
1232.97 1278.19 1232.97 1278.2 1232.98 1278.21 cv
1232.98 1278.21 1232.98 1278.22 1232.98 1278.22 cv
1232.98 1278.23 1232.98 1278.24 1232.98 1278.25 cv
1232.99 1278.25 1232.99 1278.26 1232.99 1278.26 cv
1232.99 1278.27 1232.99 1278.28 1232.99 1278.29 cv
1232.99 1278.3 1233 1278.32 1233 1278.33 cv
1233 1278.33 li
1235.49 1290.76 1242.6 1293.92 1243.56 1294.29 cv
1243.67 1294.33 li
1243.67 1294.33 1232.29 1867.62 1231.34 2185.07 cv
1159.23 2109.68 1048.76 2002.84 999.049 1956.82 cv
988.869 1947.4 981.231 1940.53 976.999 1937 cv
971.72 1932.6 965.97 1927.86 960 1922.97 cv
925.241 1894.5 883 1861 883 1861 cv
883 1861 895 1853 883 1835 cv
870.999 1817 854.331 1801 854.331 1801 cv
864.999 1798.33 873 1777 873 1777 cv
873 1777 891.669 1769 897.001 1745 cv
900.859 1727.62 876.759 1717.23 863.165 1712.82 cv
869.774 1714.44 879.204 1716.26 888.311 1716.26 cv
898.327 1716.26 907.954 1714.06 913 1707 cv
926.33 1688.34 982.33 1545 982.33 1545 cv
982.33 1545 1069 1666.33 1082.33 1685 cv
1095.67 1703.67 1111.67 1703.67 1111.67 1703.67 cv
1111.67 1703.67 1106.33 1733 1117 1741 cv
1125.97 1747.73 1144.37 1758.22 1162.68 1758.22 cv
1166.14 1758.22 1169.61 1757.85 1173 1757 cv
1194.33 1751.67 1218.33 1738.33 1218.33 1738.33 cv
1218.33 1738.33 1186.33 1722.33 1183.67 1682.33 cv
1181 1642.33 1218.33 1557 1218.33 1557 cv
1218.33 1557 1228.47 1526.59 1228.57 1510.15 cv
1228.6 1505.93 1227.96 1502.63 1226.33 1501 cv
1218.33 1493 1203 1475 1203 1475 cv
1203 1475 1142.33 1371.67 1131.67 1355.67 cv
1121 1339.67 1083.67 1299.67 1075.67 1289 cv
1067.67 1278.33 1001 1174.33 976.999 1161 cv
953.001 1147.67 910.331 1139.67 910.331 1139.67 cv
734.33 1112.33 li
734.33 1112.33 555.67 1137 537 1145 cv
518.331 1153 432.999 1257 406.329 1307.67 cv
379.669 1358.33 336.999 1537 336.999 1537 cv
336.999 1537 307.669 1566.33 302.33 1582.33 cv
297.001 1598.33 310.331 1651.67 310.331 1651.67 cv
310.331 1651.67 291.67 1670.33 289 1691.67 cv
286.33 1713 299.67 1761 315.67 1774.33 cv
331.67 1787.67 353.001 1793 353.001 1793 cv
353.001 1793 358.33 1721 443.67 1702.33 cv
460.737 1698.6 474.489 1697.11 485.583 1697.11 cv
486.585 1697.11 487.563 1697.12 488.522 1697.14 cv
441 1751 li
392.1 1771.78 li
361 1785 li
361 1785 353.001 1911 359.001 1957 cv
364.999 2003 432.999 2103 432.999 2103 cv
409.001 2089 li
409.001 2089 410.999 2081 401 2077 cv
396.858 2075.34 392.03 2074.37 386.942 2074.37 cv
379.746 2074.37 372.029 2076.31 364.999 2081 cv
353.001 2089 336.999 2155 336.999 2189 cv
336.999 2223 364.999 2271 379 2285 cv
392.999 2299 429 2317 435 2317 cv
441 2317 443.001 2307 443.001 2307 cv
3094.33 1970.44 mo
3094.33 2338.33 li
3094.33 2356.74 3109.26 2371.67 3127.67 2371.67 cv
3131.79 2371.67 3135.73 2370.92 3139.37 2369.56 cv
3139.37 2369.56 li
3152.01 2364.82 3161 2352.62 3161 2338.33 cv
3161 2225 li
3865.72 2225 li
3866.08 2229.61 3866.41 2233.49 3866.65 2236.15 cv
3866.87 2238.59 3867 2240 3867 2240 cv
3867 2240 3861 2246 3861 2257 cv
3861 2268 3869 2277 3946 2292 cv
3970.52 2296.78 3997.88 2298.71 4024.21 2298.71 cv
4080.55 2298.71 4132.15 2289.85 4141 2281 cv
4157.38 2264.62 4140.63 2252.38 4137.49 2242.02 cv
4137.18 2240.99 4137 2239.99 4137 2239 cv
4137 2236.59 4136.9 2231.49 4136.75 2225 cv
4290 2225 li
4320.38 2225 4345 2200.38 4345 2170 cv
4345 2135 li
4343.77 2135 li
4343.77 1840.48 li
4356.41 1841.66 4369.95 1842.66 4384.44 1843.44 cv
4396.26 1844.07 4408.21 1844.37 4420.21 1844.37 cv
4425.46 1844.37 4430.71 1844.31 4435.97 1844.2 cv
4435.97 2281.63 li
4435.97 2281.63 li
4435.97 2314.39 4457.9 2341 4484.9 2341 cv
4498.43 2341 4510.63 2334.37 4519.43 2323.61 cv
4522.3 2320.13 4524.77 2316.25 4526.77 2312.05 cv
4526.77 2312.05 li
4526.77 2312.05 li
4531.23 2303.15 4533.77 2292.8 4533.77 2281.63 cv
4533.77 1836.13 li
4596.75 1826.99 4645.23 1811.73 4651.54 1797.87 cv
4659.57 1780.22 4658.92 1439.65 4652.69 1259.44 cv
4650.48 1195.61 4647.58 1151.9 4644.11 1149.77 cv
4632.04 1142.38 4606.62 1143.7 4533.77 1139.35 cv
4533.77 313.521 li
4533.77 297.83 4528.7 283.515 4520.43 272.918 cv
4511.57 261.433 4498.97 254.233 4484.9 254.233 cv
4471.37 254.233 4459.17 260.866 4450.3 271.624 cv
4441.43 282.301 4435.97 297.183 4435.97 313.521 cv
4435.97 1136.4 li
4407 1136.65 4375.07 1137.55 4343.77 1138.86 cv
4343.77 304.171 li
4343.77 304.171 li
4343.77 288.75 4338.3 274.711 4329.43 264.641 cv
4328.57 263.66 4327.68 262.71 4326.76 261.799 cv
4318.19 253.34 4307.06 248.231 4294.83 248.231 cv
4280.77 248.231 4268.17 255.03 4259.3 265.861 cv
4251.03 275.86 4245.97 289.36 4245.97 304.171 cv
4245.97 1144.45 li
4226.08 1145.96 4209.03 1147.54 4196.57 1149.1 cv
4184.29 1150.64 4176.45 1152.14 4174.73 1153.5 cv
4172.01 1155.63 4170.04 1163.17 4168.68 1175 cv
4168.65 1175 4168.62 1174.99 4168.59 1174.98 cv
4161.79 1173.22 4153.39 1171.84 4143.76 1171.84 cv
4127.22 1171.84 4107.04 1175.89 4085 1189 cv
4080.43 1191.72 4076.05 1194.51 4072.08 1197.59 cv
4061.84 1205.54 4057.37 1219.73 4057.35 1234.99 cv
4057.33 1247.24 4060.19 1260.18 4065.23 1271.15 cv
4065.23 1271.15 li
4068.68 1278.67 4073.15 1285.25 4078.43 1290.05 cv
4134.64 1341.16 li
4134.64 1341.16 li
4147.41 1353.87 4159.73 1366 4170.33 1376.23 cv
4170.34 1376.45 4170.35 1376.64 4170.36 1376.86 cv
4092.38 1404.15 4016.05 1431.25 3964.41 1450.36 cv
3927.1 1370.05 3887 1282 3887 1282 cv
3887 1282 3919.3 1170.08 3947.67 1073 cv
3995 911 4016 742 4016 742 cv
4016 742 4012 740.999 4001 735.001 cv
3990 729.001 3973 721.671 3973 721.671 cv
3964 880.67 3905 1038.33 3905 1038.33 cv
3905 1038.33 3846 1028 3809 1025 cv
3772 1022 3686.33 995.67 3686.33 995.67 cv
3683 1191 li
3683 1191 3691 1549 3695 1561 cv
3695.79 1563.36 3701.92 1573.48 3711.36 1588.21 cv
3711.36 1588.21 li
3749.83 1648.33 3843.17 1785.39 3852 1787 cv
3852.38 1787.07 3852.77 1787.1 3853.16 1787.1 cv
3863.98 1787.1 3879.51 1761.81 3879.99 1761.02 cv
3879.5 1761.93 3864 1791.16 3864 1801 cv
3864 1801 li
3864 1801 li
3864 1811 3876 1827 3876 1827 cv
3876 1827 3875.86 1826.98 3875.61 1826.98 cv
3873.97 1826.98 3867.73 1827.73 3866 1839 cv
3865.85 1840 3865.77 1842.71 3865.77 1846.86 cv
3865.78 1888.74 3873.05 2077.08 3875.33 2135 cv
3161 2135 li
3161 1975.76 li
3176.09 1976.48 3191.24 1976.9 3206.33 1977 cv
3208.06 1977.01 3209.78 1977.02 3211.49 1977.02 cv
3407.2 1977.02 3457.05 1902.15 3462.33 1881 cv
3464.22 1873.43 3465.11 1710.11 3465.11 1501.68 cv
3465.1 1233.7 3463.63 891.143 3460.95 709.14 cv
3459.83 633.709 3458.51 585.861 3457 582.33 cv
3457 582.33 li
3456.99 582.31 3456.98 582.289 3456.97 582.27 cv
3456.97 582.263 3456.97 582.257 3456.97 582.25 cv
3456.96 582.237 3456.95 582.224 3456.95 582.212 cv
3456.95 582.203 3456.94 582.193 3456.94 582.184 cv
3456.93 582.171 3456.93 582.161 3456.92 582.149 cv
3456.92 582.142 3456.91 582.134 3456.91 582.127 cv
3456.9 582.113 3456.9 582.098 3456.89 582.084 cv
3456.89 582.077 3456.89 582.071 3456.88 582.064 cv
3456.86 582.023 3456.84 581.981 3456.82 581.939 cv
3456.82 581.936 3456.82 581.932 3456.82 581.928 cv
3456.81 581.912 3456.8 581.893 3456.79 581.877 cv
3456.79 581.87 3456.79 581.863 3456.78 581.857 cv
3456.78 581.843 3456.77 581.829 3456.76 581.815 cv
3456.76 581.807 3456.76 581.8 3456.75 581.792 cv
3456.74 581.777 3456.74 581.76 3456.73 581.744 cv
3456.73 581.74 3456.72 581.735 3456.72 581.73 cv
3456.69 581.664 3456.65 581.598 3456.62 581.53 cv
3456.62 581.528 3456.62 581.526 3456.61 581.524 cv
3446.3 561.894 3346.29 488.932 3190.54 488.932 cv
3187.83 488.932 3185.08 488.954 3182.33 488.999 cv
3182.33 488.999 li
3019.67 491.671 2867.67 528.999 2854.33 566.33 cv
2851.95 572.999 2849.57 618.24 2847.26 688.049 cv
2837.74 976.2 2829.52 1682.96 2827.94 1824.2 cv
2827.76 1840.25 2827.67 1849 2827.67 1849 cv
2827.67 1849 li
2827.67 1849 li
2842.35 1914.05 2959.32 1955.26 3094.33 1970.44 cv
4245.97 2135 mo
4133.08 2135 li
4131.32 2110.74 4129 2077.09 4129 2069 cv
4129 2056 4120 1888.67 4121 1879.67 cv
4122 1870.67 4122 1784 4119 1776 cv
4116.31 1768.83 4062.18 1655.3 4022.19 1572.31 cv
4049.95 1561.25 4109.88 1536.35 4177.77 1507.91 cv
4185.21 1624.3 4193.52 1724.36 4193.52 1724.36 cv
4193.52 1724.36 4198.22 1793.74 4203.46 1804.45 cv
4205.93 1809.5 4219.63 1817.02 4245.97 1824.24 cv
4245.97 2135 li
4007.37 1541.62 mo
4000.2 1526.75 3991.56 1508.48 3982.23 1488.56 cv
4035.48 1472.22 4112.3 1446.56 4172.88 1426 cv
4173.6 1439.06 4174.35 1452.14 4175.13 1465.16 cv
4122.42 1488.1 4055.21 1518 4007.37 1541.62 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.592387 .758062 .923737 rgb
f
3978 1188 mo
3978 1188 3982 1218 3991 1233 cv
4000 1248 4034 1277 4045 1284 cv
4056 1291 4069 1291 4069 1291 cv
4079 1274 li
4037 1195 li
3978 1188 li
cp
.823529 .956863 1 rgb
f
6042.2 2500.8 mo
6042.2 2502.13 6042.2 2503.4 6042.13 2504.73 cv
6001.87 2513.4 5943.13 2518.87 5877.8 2518.87 cv
5809.93 2518.87 5749.33 2513 5708.93 2503.73 cv
5708.87 2503 5708.87 2502.2 5708.87 2501.47 cv
5708.73 2449.6 li
5749.13 2440.33 5809.87 2434.47 5877.8 2434.47 cv
5943.13 2434.47 6001.8 2439.93 6042.07 2448.6 cv
6042.2 2500.8 li
cp
.937255 .384314 .384314 rgb
f
7228.87 772.2 mo
7228.87 785.733 7223.4 797.933 7214.53 806.8 cv
7205.73 815.667 7193.47 821.133 7180 821.133 cv
5557.8 821.133 li
5530.8 821.133 5508.87 799.2 5508.87 772.2 cv
5508.87 758.667 5514.33 746.466 5523.2 737.667 cv
5526.07 734.8 5529.27 732.333 5532.73 730.333 cv
5540.07 725.867 5548.6 723.333 5557.8 723.333 cv
7180 723.333 li
7192.93 723.333 7204.73 728.4 7213.47 736.667 cv
7222.93 745.533 7228.87 758.133 7228.87 772.2 cv
cp
.462745 .27451 .368627 rgb
f
7231.13 994.467 mo
7231.13 1008 7225.67 1020.2 7216.8 1029 cv
7207.93 1037.87 7195.73 1043.33 7182.2 1043.33 cv
5560 1043.33 li
5533 1043.33 5511.13 1021.47 5511.13 994.467 cv
5511.13 983.6 5514.67 973.667 5520.67 965.533 cv
5522.07 963.533 5523.73 961.6 5525.47 959.867 cv
5534.27 951 5546.53 945.533 5560 945.533 cv
7182.2 945.533 li
7196.53 945.533 7209.47 951.733 7218.4 961.6 cv
7226.33 970.267 7231.13 981.8 7231.13 994.467 cv
cp
f
7228.87 772.2 mo
7228.87 785.733 7223.4 797.933 7214.53 806.8 cv
7205.73 815.667 7193.47 821.133 7180 821.133 cv
5557.8 821.133 li
5530.8 821.133 5508.87 799.2 5508.87 772.2 cv
5508.87 758.667 5514.33 746.466 5523.2 737.667 cv
5526.07 734.8 5529.27 732.333 5532.73 730.333 cv
5525.73 749.533 5521.87 772 5535.53 783.333 cv
5562.2 805.533 5644.47 796.667 5644.47 796.667 cv
5591.13 774.467 li
5591.13 774.467 7200 778.866 7208.87 767.8 cv
7212.93 762.8 7213.73 749.6 7213.47 736.667 cv
7222.93 745.533 7228.87 758.133 7228.87 772.2 cv
cp
.356863 .196078 .286275 rgb
f
7231.13 994.467 mo
7231.13 1008 7225.67 1020.2 7216.8 1029 cv
7207.93 1037.87 7195.73 1043.33 7182.2 1043.33 cv
5560 1043.33 li
5533 1043.33 5511.13 1021.47 5511.13 994.467 cv
5511.13 983.6 5514.67 973.667 5520.67 965.533 cv
5523.73 978.866 5530.53 991.933 5544.47 998.866 cv
5580 1016.67 5648.87 1003.33 5648.87 1003.33 cv
5606.67 985.533 li
5606.67 985.533 7166.67 998.866 7197.8 992.2 cv
7214.47 988.6 7218.4 974.2 7218.4 961.6 cv
7226.33 970.267 7231.13 981.8 7231.13 994.467 cv
cp
f
7331.13 335.533 mo
7331.13 369.733 7329.73 402.067 7327.33 430.934 cv
7325 458.933 7303.4 481.667 7275.53 484.6 cv
7271.6 485 7267.67 485.267 7263.67 485.4 cv
7262.07 485.467 7260.47 485.533 7258.87 485.533 cv
6149.67 492.667 li
6146.93 492.667 li
6083.93 493.066 li
6058.6 493.267 6038.13 513.866 6038.2 539.2 cv
6038.33 603.2 li
6038.33 613.533 li
6042.07 2448.6 li
6042.2 2500.8 li
6040.87 2502.47 6039.8 2503.8 6038.4 2505.53 cv
5998.33 2513.73 5941.13 2518.87 5877.8 2518.87 cv
5814.73 2518.87 5757.93 2513.8 5717.8 2505.67 cv
5715.47 2505.13 5713.2 2504.67 5711 2504.2 cv
5710.27 2503.2 5709.67 2502.47 5708.87 2501.47 cv
5708.8 2471.93 li
5708.73 2449.6 li
5706.67 1418.53 li
5704.8 493.733 li
5704.67 436.466 li
5704.6 413.533 li
5704.33 274.933 5816.87 161.466 5955.4 160.533 cv
6037.47 160 li
6143.73 159.333 li
6491.8 157.133 li
6785.8 155.267 li
7256.73 152.2 li
7257.8 152.2 li
7262 152.2 7266.2 152.333 7270.33 152.733 cv
7270.47 152.733 7270.67 152.733 7270.8 152.8 cv
7281.47 153.533 7291.33 157.333 7299.53 163.267 cv
7300.07 163.667 7300.6 164.066 7301.13 164.533 cv
7309.47 170.934 7316 179.6 7319.87 189.6 cv
7321.53 193.933 7322.73 198.533 7323.4 203.267 cv
7328.27 240.133 7331.13 285.934 7331.13 335.533 cv
cp
.937255 .384314 .384314 rgb
f
6625.93 2431.27 mo
6574.07 2484.6 li
6574.07 2484.6 6357.13 2493 6248.87 2492.07 cv
6213.47 2491.73 6189.6 2490.47 6188.87 2487.53 cv
6185.93 2475.73 6197.8 2459.4 6237.8 2438.67 cv
6277.8 2417.93 6317.8 2420.87 6322.2 2416.47 cv
6326.67 2412 6381.47 2326.07 6381.47 2326.07 cv
6381.47 2326.07 6452.07 2281 6511.8 2256.87 cv
6541.13 2245.07 6567.87 2238.27 6582.27 2244.47 cv
6584.27 2245.27 6586.07 2246.4 6587.53 2247.8 cv
6588 2248.13 6588.47 2248.6 6588.87 2249.07 cv
6620 2284.6 6625.93 2431.27 6625.93 2431.27 cv
cp
.462745 .27451 .368627 rgb
f
6042.07 2448.6 mo
6042.2 2500.8 li
6040.87 2502.47 6039.8 2503.8 6038.4 2505.53 cv
5998.33 2513.73 5941.13 2518.87 5877.8 2518.87 cv
5811.07 2518.87 5751.4 2513.2 5711 2504.2 cv
5710.27 2503.2 5709.67 2502.47 5708.87 2501.47 cv
5708.8 2471.93 li
5866.67 2485.53 li
5766.67 2458.87 li
5864.47 2456.67 li
5864.47 2456.67 5852.93 1108.4 5855.4 564.267 cv
5858.73 565.467 5862.07 566.533 5865.47 567.667 cv
5934.53 590.267 5997.93 602.8 6038.33 603.2 cv
6038.33 613.533 li
6042.07 2448.6 li
cp
.8 .298039 .298039 rgb
f
7331.13 335.533 mo
7331.13 369.733 7329.73 402.067 7327.33 430.934 cv
7325 458.933 7303.4 481.667 7275.53 484.6 cv
7271.6 485 7267.67 485.267 7263.67 485.4 cv
7262.07 485.467 7260.47 485.533 7258.87 485.533 cv
6149.67 492.667 li
6158.73 453.667 6164.47 398.2 6164.47 336.667 cv
6164.47 331.2 6164.4 325.867 6164.33 320.533 cv
6565.87 314.8 7222.2 327.8 7222.2 327.8 cv
7008.87 303.333 li
7008.87 303.333 7297.8 298.866 7297.8 292.2 cv
7297.8 287.467 7298.93 208.4 7299.53 163.267 cv
7312.33 172.467 7321.2 186.867 7323.4 203.267 cv
7328.27 240.133 7331.13 285.934 7331.13 335.533 cv
cp
f
6625.93 2431.27 mo
6574.07 2484.6 li
6574.07 2484.6 6357.13 2493 6248.87 2492.07 cv
6250.53 2478.87 6256.8 2459.8 6277.8 2445.33 cv
6312 2421.8 6403.93 2431.2 6410.73 2431.93 cv
6344.47 2418.67 li
6393.33 2336.47 li
6511.8 2256.87 li
6555.53 2227.53 li
6582.27 2244.47 li
6587.53 2247.8 li
6588 2248.13 6588.47 2248.6 6588.87 2249.07 cv
6620 2284.6 6625.93 2431.27 6625.93 2431.27 cv
cp
.356863 .196078 .286275 rgb
f
6443.73 1060.4 mo
6443.73 1060.4 6436.07 1064.73 6423.67 1071.6 cv
6378 1096.6 6267.73 1155.2 6236.27 1155.2 cv
6202.6 1155.2 6051.67 1059.87 6004.53 1029.53 cv
5995.6 1023.8 5990.4 1020.4 5990.4 1020.4 cv
5947.4 1078.13 li
5763.73 1082.6 li
5763.73 1082.6 5757.8 1060.4 5751.87 1051.47 cv
5745.93 1042.6 5748.87 1007.07 5750.4 999.6 cv
5751.87 992.2 5825.93 944.8 5836.27 940.4 cv
5846.67 935.934 5922.2 921.133 5932.6 921.133 cv
5942.93 921.133 6000.73 940.4 6000.73 940.4 cv
6000.73 940.4 6215.53 987.8 6225.93 986.267 cv
6233.73 985.133 6299.87 942.6 6331.8 921.867 cv
6332.67 921.333 6333.47 920.8 6334.2 920.333 cv
6343.2 914.467 6348.87 910.733 6348.87 910.733 cv
6372.93 948.667 li
6429 1037.13 li
6443.73 1060.4 li
cp
1 .85098 .85098 rgb
f
6435.53 994.467 mo
6435.53 994.467 6432.93 1011.73 6429 1037.13 cv
6427.4 1047.47 6425.6 1059.13 6423.67 1071.6 cv
6378 1096.6 6267.73 1155.2 6236.27 1155.2 cv
6202.6 1155.2 6043.8 1060.33 5996.67 1030 cv
6020 968.889 li
6020 968.889 6224.47 1005.53 6224.47 998.866 cv
6224.47 992.2 6255.53 1096.67 6271.13 1101.13 cv
6286.67 1105.53 6348.87 1076.67 6346.67 1034.47 cv
6344.73 997.867 6334.47 937.333 6331.8 921.867 cv
6331.4 919.467 6331.13 918.133 6331.13 918.133 cv
6334.2 920.333 li
6372.93 948.667 li
6435.53 994.467 li
cp
.976471 .686275 .686275 rgb
f
6772.6 820.4 mo
6772.6 989.267 li
6449.6 1069.27 li
6442.67 1071.87 li
6397.8 1088.53 li
6397.8 1088.53 6384.27 1105.13 6378.53 1101.87 cv
6369.47 1096.73 6375.07 1083.73 6362.07 1016.27 cv
6360.13 1006.13 6357.73 994.667 6354.8 981.867 cv
6341.93 925.067 6331.13 918.133 6331.13 918.133 cv
6331.13 918.133 6334.07 894.467 6341.47 892.933 cv
6348.87 891.466 6353.33 900.4 6353.33 900.4 cv
6353.33 900.4 6494.07 781.867 6508.87 775.934 cv
6523.73 770 6599.47 754.467 6599.47 754.467 cv
6658.53 706.267 li
6748.87 722.2 li
6772.6 820.4 li
cp
.823529 .956863 1 rgb
f
6747.78 625.556 mo
6748.89 722.222 li
6748.89 722.222 6671.11 752.222 6667.78 752.222 cv
6664.44 752.222 6651.11 775.556 6651.11 775.556 cv
6641.11 753.333 li
6641.11 753.333 6605.56 756.667 6590 748.889 cv
6574.44 741.111 6747.78 625.556 6747.78 625.556 cv
cp
.776471 .482353 .443137 rgb
f
6416.17 440.026 mo
6416.17 440.026 6464.44 451.111 6510 443.333 cv
6555.56 435.556 6552.22 400 6552.22 400 cv
6445.56 385.556 li
6416.17 440.026 li
cp
.0117647 .4 .419608 rgb
f
6836.53 577.133 mo
6834.2 598.6 6791.93 639.133 6784.87 643.866 cv
6777.8 648.667 6737.87 634.4 6737.87 634.4 cv
6733.2 667.8 li
6676.33 688.6 li
6674.4 689.267 li
6561.6 732.2 li
6486.47 689.267 li
6486.47 689.267 6477 610.533 6477 596.2 cv
6477 588.6 6480.33 567.733 6483.33 549.667 cv
6486.2 533.667 6488.8 519.867 6488.8 519.867 cv
6488.8 519.867 6488.33 516.8 6487.8 511.466 cv
6487.67 509.867 6487.47 508.333 6487.33 506.6 cv
6486.53 499.4 6485.47 489.6 6484.4 478.4 cv
6484.27 477.067 6484.2 475.8 6484.07 474.533 cv
6483.6 469.267 6483.4 463.267 6483.4 456.933 cv
6483.4 431.133 6486.47 400.533 6486.47 400.533 cv
6707.33 376.667 li
6753.93 492.2 li
6766.07 522.2 li
6766.07 522.2 6787.2 515.067 6796.67 515.067 cv
6806 515.067 6838.93 555.6 6836.53 577.133 cv
cp
1 .85098 .85098 rgb
f
6588.47 599.133 mo
6584.47 602.8 6566 612.6 6551.53 613.8 cv
6537 615.067 6515.93 596.733 6515.93 590.6 cv
6515.93 589.867 6516.53 588 6517.53 585.333 cv
6525.13 565.533 6556.8 500.067 6556.8 500.067 cv
6565.27 493.066 6579.67 544.267 6585.93 575.733 cv
6588.4 588.533 6589.6 598.066 6588.47 599.133 cv
cp
.968627 .623529 .623529 rgb
f
6599.44 754.444 mo
6599.44 754.444 6546.67 872.222 6557.78 872.222 cv
6568.89 872.222 6648.89 874.444 6648.89 874.444 cv
6646.67 916.667 li
6495.56 921.111 li
6562.2 781.133 li
6599.44 754.444 li
cp
.67451 .854902 .898039 rgb
f
6562.2 781.133 mo
6486.67 1010 li
6442.67 1071.87 li
6397.8 1088.53 li
6397.8 1088.53 6384.27 1105.13 6378.53 1101.87 cv
6369.47 1096.73 6375.07 1083.73 6362.07 1016.27 cv
6367.8 1034.2 6372.6 1049.73 6373.33 1054.47 cv
6375.53 1067.8 6386.67 1070 6386.67 1054.47 cv
6386.67 1039.33 6363.73 938.8 6362.27 932.533 cv
6364 938.267 6387 1016.67 6395.53 1016.67 cv
6404.47 1016.67 6364.47 912.2 6364.47 912.2 cv
6364.47 912.2 6495.53 803.333 6504.47 796.667 cv
6513.33 790 6562.2 781.133 6562.2 781.133 cv
cp
f
6535.82 452.6 mo
6537.08 459.8 6524.08 468.2 6506.75 471.267 cv
6498.15 472.8 6490.15 472.733 6484.01 471.4 cv
6483.88 470.2 6483.81 469 6483.68 467.8 cv
6483.21 462.933 6483.08 457.333 6483.08 451.4 cv
6488.15 448.667 6494.68 446.333 6502.08 445 cv
6519.42 441.933 6534.48 445.333 6535.82 452.6 cv
cp
.286275 .25098 .231373 rgb
f
6651.75 463.922 mo
6650.52 471.182 6634.88 474.58 6616.83 471.512 cv
6598.78 468.443 6585.14 460.071 6586.38 452.812 cv
6587.61 445.552 6603.25 442.154 6621.3 445.222 cv
6639.35 448.29 6652.99 456.662 6651.75 463.922 cv
cp
f
6656.67 527.8 mo
6656.07 529.267 6651.6 532.467 6645.87 535.934 cv
6641.33 538.6 6636.07 541.333 6631.33 543.333 cv
6630.27 543.733 6629.27 544.2 6628.27 544.533 cv
6626.6 545.067 6625.13 545.6 6623.8 545.867 cv
6622.6 546.2 6621.53 546.333 6620.73 546.267 cv
6616.8 546.066 6609.67 541.733 6603.67 536.8 cv
6603.2 536.4 6602.8 536.066 6602.33 535.667 cv
6596.93 531 6592.8 526.133 6593.33 523.733 cv
6594.4 518.533 6609.6 497.067 6609.6 497.067 cv
6609.6 497.067 6615.2 491.867 6638.87 501.133 cv
6662.6 510.4 6658.13 524.066 6656.67 527.8 cv
cp
1 1 1 rgb
f
6533.47 524.467 mo
6534 527 6529.27 532.4 6523.4 537.4 cv
6520.73 539.467 6518 541.466 6515.33 543.133 cv
6514.53 543.667 6513.73 544.133 6512.93 544.533 cv
6511.73 545.2 6510.6 545.733 6509.53 546.133 cv
6508.2 546.733 6507 547 6506.07 547.067 cv
6503.67 547.2 6499.47 545.8 6494.67 543.667 cv
6494.07 543.4 6493.4 543.2 6492.73 542.8 cv
6482.8 536.667 6488.13 510 6488.13 510 cv
6488.13 510 6487.73 507.2 6487.2 502.2 cv
6487.4 502.067 6487.67 502 6487.93 501.867 cv
6511.6 492.6 6517.2 497.8 6517.2 497.8 cv
6517.2 497.8 6532.4 519.267 6533.47 524.467 cv
cp
f
6600.74 502.593 mo
6600.74 502.593 6611.11 495.926 6623.7 497.407 cv
6636.3 498.889 6655.56 512.222 6655.56 512.222 cv
6655.56 512.222 6631.11 487.778 6620.74 488.519 cv
6610.37 489.259 6600.74 502.593 6600.74 502.593 cv
cp
.317647 .105882 .0784314 rgb
f
6525.82 503.215 mo
6524.55 502.481 6514.68 496.748 6502.95 498.148 cv
6498.21 498.681 6492.48 500.948 6487.21 503.548 cv
6487.08 502.215 6486.88 500.748 6486.75 499.148 cv
6493.62 493.748 6501.21 488.948 6505.95 489.281 cv
6515.62 489.948 6524.75 501.748 6525.82 503.215 cv
cp
f
6840.73 2475.73 mo
6839.27 2486.07 6831.87 2497.93 6821.47 2500.87 cv
6813.87 2503.07 6650.13 2506 6559.8 2505.07 cv
6527 2504.8 6503.87 2504 6501.47 2502.4 cv
6492.6 2496.47 6495.53 2487.53 6513.33 2463.87 cv
6531.13 2440.13 6566.67 2431.27 6566.67 2431.27 cv
6566.67 2431.27 6575.53 2420.87 6584.47 2409.07 cv
6593.33 2397.2 6652.6 2317.2 6652.6 2317.2 cv
6652.6 2317.2 6781.47 2303.47 6818.07 2309.13 cv
6823.2 2309.93 6826.53 2311.13 6827.4 2312.73 cv
6834.8 2326.07 6842.2 2465.33 6840.73 2475.73 cv
cp
.517647 .317647 .427451 rgb
f
6737.87 634.4 mo
6737.87 634.4 6735.53 672.8 6732.2 677.2 cv
6728.87 681.667 6647.8 751.667 6599.47 754.467 cv
6571.27 756.066 6548.33 752.733 6531.33 746.8 cv
6519.2 742.6 6510.2 737.133 6504.47 731.133 cv
6490.53 716.667 6486.47 689.267 6486.47 689.267 cv
6630 678.333 li
6712.6 644.733 li
6737.87 634.4 li
cp
1 .85098 .85098 rgb
f
6836.53 577.133 mo
6834.2 598.6 6791.93 639.133 6784.87 643.866 cv
6777.8 648.667 6737.87 634.4 6737.87 634.4 cv
6737.87 634.4 6735.53 672.8 6732.2 677.2 cv
6728.87 681.667 6647.8 751.667 6599.47 754.467 cv
6571.27 756.066 6548.33 752.733 6531.33 746.8 cv
6578.2 749.867 6610.2 742.867 6622.2 741.133 cv
6630.73 739.867 6654.67 714 6676.33 688.6 cv
6691.47 670.8 6705.67 653.267 6712.6 644.733 cv
6713.8 643.267 6714.8 642 6715.53 641.133 cv
6726.67 627.8 6735.53 492.2 6735.53 492.2 cv
6753.93 492.2 li
6766.07 522.2 li
6766.07 522.2 6787.2 515.067 6796.67 515.067 cv
6806 515.067 6838.93 555.6 6836.53 577.133 cv
cp
.976471 .686275 .686275 rgb
f
6840.73 2475.73 mo
6839.27 2486.07 6831.87 2497.93 6821.47 2500.87 cv
6813.87 2503.07 6650.13 2506 6559.8 2505.07 cv
6548.13 2486.07 6568.87 2450.93 6584.47 2443.13 cv
6602.2 2434.2 6691.13 2436.47 6691.13 2436.47 cv
6593.33 2420.87 li
6593.33 2420.87 6593.33 2420.87 6628.87 2420.87 cv
6664.47 2420.87 6782.2 2432 6782.2 2432 cv
6795.53 2323.13 li
6818.07 2309.13 li
6823.2 2309.93 6826.53 2311.13 6827.4 2312.73 cv
6834.8 2326.07 6842.2 2465.33 6840.73 2475.73 cv
cp
.462745 .27451 .368627 rgb
f
6698.89 438.333 mo
6698.89 438.333 6713.89 487.222 6723.33 499.444 cv
6732.78 511.667 6736.67 518.333 6736.67 518.333 cv
6736.67 518.333 6737.22 552.778 6738.89 555 cv
6740.56 557.222 6766.05 522.196 6766.05 522.196 cv
6787.78 515.556 li
6810.56 477.222 li
6756.67 415.556 li
6672.22 367.778 li
6698.89 438.333 li
cp
.286275 .25098 .231373 rgb
f
6524.47 530 mo
6524.47 532.667 6524.07 535.2 6523.4 537.4 cv
6520.73 539.467 6518 541.466 6515.33 543.133 cv
6514.53 543.667 6513.73 544.133 6512.93 544.533 cv
6511.73 545.2 6510.6 545.733 6509.53 546.133 cv
6505.27 543.8 6502.2 537.467 6502.2 530 cv
6502.2 520.467 6507.2 512.8 6513.33 512.8 cv
6519.47 512.8 6524.47 520.467 6524.47 530 cv
cp
.184314 .407843 .466667 rgb
f
6647.2 527.8 mo
6647.2 530.733 6646.73 533.533 6645.87 535.934 cv
6641.33 538.6 6636.07 541.333 6631.33 543.333 cv
6627.6 540.533 6625 534.6 6625 527.8 cv
6625 518.267 6630 510.533 6636.13 510.533 cv
6642.27 510.533 6647.2 518.267 6647.2 527.8 cv
cp
f
6508.61 528.194 mo
6508.61 529.958 6505.88 531.389 6502.5 531.389 cv
6499.13 531.389 6496.39 529.958 6496.39 528.194 cv
6496.39 526.43 6499.13 525 6502.5 525 cv
6505.88 525 6508.61 526.43 6508.61 528.194 cv
cp
1 1 1 rgb
f
6748.87 722.2 mo
6735.53 1047.8 li
6700.13 1235.2 li
6693.73 1268.93 li
6693.33 1271.13 li
6559.93 1647 li
6552.2 1668.87 li
6552.2 1668.87 6552.2 1668.87 6545.53 1687.8 cv
6538.87 1706.67 6484.47 1798.87 6484.47 1798.87 cv
6484.47 1798.87 6484.47 1798.87 6488.87 1807.8 cv
6493.33 1816.67 6490 1834.47 6490 1834.47 cv
6490 1834.47 6513.33 1885.53 6521.13 1905.53 cv
6528.87 1925.53 6543.33 2032.2 6553.33 2044.47 cv
6562.27 2055.33 6618.53 2202.07 6625 2233 cv
6625.87 2236.87 6626 2239.53 6625.27 2240.67 cv
6618.6 2250.67 6529.73 2316.27 6507.47 2325.13 cv
6485.27 2334 6368.6 2344 6365.27 2336.27 cv
6361.93 2328.47 6367.47 2304 6367.47 2295.13 cv
6367.47 2286.27 6224.47 1894.47 6220 1882.2 cv
6215.53 1870 6206.67 1834.47 6211.13 1805.53 cv
6215.53 1776.67 6390 1244.47 6390 1244.47 cv
6390 1244.47 6389.47 1243.2 6388.87 1241.33 cv
6387.6 1237.6 6385.93 1231.47 6386.67 1227.8 cv
6387.8 1222.2 6396.67 1207.8 6396.67 1207.8 cv
6396.67 1207.8 6411.13 1088.87 6447.8 982.2 cv
6484.47 875.533 6550 764.467 6557.8 762.2 cv
6565.53 760 6599.47 754.467 6599.47 754.467 cv
6557.8 811.133 6536.67 893.333 6536.67 893.333 cv
6622.2 891.133 li
6622.2 891.133 6644.47 825.533 6676.67 773.333 cv
6708.87 721.133 6748.87 722.2 6748.87 722.2 cv
cp
0 .54902 .6 rgb
f
6621 2209 mo
6601.93 2218.67 6555 2269 6531 2283 cv
6514.71 2292.5 6408.33 2293 6395 2293 cv
6382.27 2293 6502.13 2200.87 6510.53 2196.93 cv
6501.8 2200.33 6403.87 2238.67 6391.13 2234.47 cv
6377.8 2230 6288.87 1856.67 6300 1843.33 cv
6311.13 1830 6466.67 1794.47 6466.67 1794.47 cv
6315.53 1801.13 li
6473.33 1774.47 li
6473.33 1774.47 6264.47 1770 6260 1761.13 cv
6255.53 1752.2 6335 1499 6335 1499 cv
6489.78 1526.89 li
6379 1481 li
6393 1451 li
6541 1501 li
6541 1501 6547 1519.67 6547 1533 cv
6547 1545.8 6559.27 1634.6 6559.93 1647 cv
6552.2 1668.87 li
6552.2 1668.87 6552.2 1668.87 6545.53 1687.8 cv
6538.87 1706.67 6484.47 1798.87 6484.47 1798.87 cv
6484.47 1798.87 6484.47 1798.87 6488.87 1807.8 cv
6493.33 1816.67 6490 1834.47 6490 1834.47 cv
6490 1834.47 6513.33 1885.53 6521.13 1905.53 cv
6528.87 1925.53 6543.33 2032.2 6553.33 2044.47 cv
6562.27 2055.33 6614.53 2178.07 6621 2209 cv
cp
.0117647 .403922 .466667 rgb
f
6401.8 1553.13 mo
6400.4 1555.87 6398.73 1558.33 6396.87 1560.67 cv
6382.33 1579.07 6356.27 1585 6334.8 1573.67 cv
6324 1567.93 6316.2 1558.73 6312 1548.13 cv
6308.6 1539.53 6307.6 1530.07 6309.33 1520.73 cv
6310.2 1515.93 6311.87 1511.2 6314.27 1506.67 cv
6321.4 1493.33 6333.67 1484.53 6347.33 1481.53 cv
6358.47 1479 6370.47 1480.33 6381.27 1486.13 cv
6405.47 1498.93 6414.6 1528.93 6401.8 1553.13 cv
cp
1 1 1 rgb
f
6631.39 527.361 mo
6631.39 529.125 6628.65 530.556 6625.28 530.556 cv
6621.9 530.556 6619.17 529.125 6619.17 527.361 cv
6619.17 525.597 6621.9 524.167 6625.28 524.167 cv
6628.65 524.167 6631.39 525.597 6631.39 527.361 cv
cp
f
6369.14 1508.97 mo
6380.69 1515.1 6385.08 1529.43 6378.95 1540.97 cv
6372.83 1552.52 6358.5 1556.92 6346.95 1550.79 cv
6335.4 1544.66 6331.01 1530.33 6337.14 1518.78 cv
6343.27 1507.24 6357.59 1502.84 6369.14 1508.97 cv
cp
1 .623529 .313726 rgb
f
6598.15 652.5 mo
6598.15 652.5 6630.65 632.5 6637.31 627.5 cv
6643.98 622.5 6656.76 610.833 6656.76 610.833 cv
6656.76 610.833 6640.09 643.611 6635.65 646.111 cv
6631.2 648.611 6598.15 652.5 6598.15 652.5 cv
cp
.968627 .623529 .623529 rgb
f
6714.91 418.335 mo
6714.91 418.335 6800.68 485.379 6803.28 491.417 cv
6805.88 497.456 6844.07 431.853 6847.02 423.965 cv
6849.98 416.078 6833.22 371.01 6810.54 334.53 cv
6787.87 298.05 6671.53 235.936 6651.81 232.978 cv
6632.09 230.02 6598.57 231.006 6589.69 232.978 cv
6580.82 234.95 6550.25 248.753 6543.35 255.655 cv
6536.45 262.556 6498 348.333 6498 348.333 cv
6498 348.333 6452.65 360.165 6428 391.715 cv
6403.35 423.265 6413.21 440.026 6416.17 440.026 cv
6419.12 440.026 6445.74 401.574 6559.13 417.349 cv
6672.51 433.124 6680.79 459.25 6688.29 456.787 cv
6695.79 454.324 6714.91 418.335 6714.91 418.335 cv
cp
0 .54902 .6 rgb
f
6131.8 1227.8 mo
6004.8 1447.8 li
5750.73 1447.8 li
5628.73 1236.47 li
5623.73 1227.8 li
5750.73 1007.8 li
6004.8 1007.8 li
6131.8 1227.8 li
cp
.662745 .282353 .490196 rgb
f
6131.8 1227.8 mo
6004.8 1447.8 li
5750.73 1447.8 li
5628.73 1236.47 li
5697.8 1310 li
5975.33 1310.8 li
5975.33 1310.8 6057.8 1241.13 6055.53 1223.33 cv
6053.4 1206.07 5974.07 1113.8 5969.13 1108.07 cv
6086.67 1216.67 li
6086.67 1216.67 5988.87 1063.33 5982.2 1050 cv
5976.6 1038.87 5827.87 1015.2 5779.53 1007.8 cv
6004.8 1007.8 li
6131.8 1227.8 li
cp
.537255 .215686 .419608 rgb
f
5922.29 1150.67 mo
5833.26 1150.67 li
5788.74 1227.78 li
5833.26 1304.88 li
5922.29 1304.88 li
5966.81 1227.78 li
5922.29 1150.67 li
cp
0 .54902 .6 rgb
f
5919.29 1382.22 mo
5919.29 1402.69 5902.69 1419.29 5882.22 1419.29 cv
5861.75 1419.29 5845.16 1402.69 5845.16 1382.22 cv
5845.16 1361.75 5861.75 1345.16 5882.22 1345.16 cv
5902.69 1345.16 5919.29 1361.75 5919.29 1382.22 cv
cp
.356863 .196078 .286275 rgb
f
5914.84 1083.13 mo
5914.84 1103.6 5898.25 1120.2 5877.78 1120.2 cv
5857.31 1120.2 5840.71 1103.6 5840.71 1083.13 cv
5840.71 1062.66 5857.31 1046.07 5877.78 1046.07 cv
5898.25 1046.07 5914.84 1062.66 5914.84 1083.13 cv
cp
f
5785.37 1310.77 mo
5785.37 1331.24 5768.78 1347.83 5748.31 1347.83 cv
5727.84 1347.83 5711.24 1331.24 5711.24 1310.77 cv
5711.24 1290.3 5727.84 1273.7 5748.31 1273.7 cv
5768.78 1273.7 5785.37 1290.3 5785.37 1310.77 cv
cp
f
5780.4 1162.71 mo
5780.4 1183.18 5763.8 1199.78 5743.33 1199.78 cv
5722.86 1199.78 5706.27 1183.18 5706.27 1162.71 cv
5706.27 1142.24 5722.86 1125.65 5743.33 1125.65 cv
5763.8 1125.65 5780.4 1142.24 5780.4 1162.71 cv
cp
f
5841.35 1385.4 mo
5871.11 1374.44 li
5867.82 1335.53 li
5897.78 1324.41 li
5882.22 1304.88 li
5845.16 1335.53 li
5841.35 1385.4 li
cp
0 .54902 .6 rgb
f
5909.03 1426.67 mo
5897.78 1395.01 li
5919.29 1382.22 li
5914.84 1347.83 li
5949.35 1340 li
5941.11 1404.44 li
5909.03 1426.67 li
cp
f
6049.43 1310.77 mo
6049.43 1331.24 6032.84 1347.83 6012.37 1347.83 cv
5991.9 1347.83 5975.3 1331.24 5975.3 1310.77 cv
5975.3 1290.3 5991.9 1273.7 6012.37 1273.7 cv
6032.84 1273.7 6049.43 1290.3 6049.43 1310.77 cv
cp
.356863 .196078 .286275 rgb
f
6870.4 2321.34 mo
6868.87 2332.21 6777.07 2343 6719.27 2343 cv
6702.87 2343 6685.47 2341.82 6668.87 2339.8 cv
6626.8 2334.92 6589.67 2325.24 6585.93 2318.28 cv
6571.13 2290.42 6591 1919.59 6588 1901 cv
6585.07 1882.41 6551.11 1536.77 6551.11 1536.77 cv
6621.47 1310.85 li
6791.67 1281.46 li
6836.27 1273.73 li
6836.27 1273.73 6865.93 1479.51 6868.87 1522.82 cv
6871.87 1566.21 6845.2 1898.86 6845.2 1931.38 cv
6845.2 1963.9 6871.87 2310.48 6870.4 2321.34 cv
cp
0 .54902 .6 rgb
f
6044.46 1162.71 mo
6044.46 1183.18 6027.87 1199.78 6007.4 1199.78 cv
5986.93 1199.78 5970.33 1183.18 5970.33 1162.71 cv
5970.33 1142.24 5986.93 1125.65 6007.4 1125.65 cv
6027.87 1125.65 6044.46 1142.24 6044.46 1162.71 cv
cp
.356863 .196078 .286275 rgb
f
6015.27 1303.6 mo
5943.2 1439.47 li
5939.47 1446.47 5932.8 1450.87 5925.47 1451.87 cv
5924.4 1452 5923.33 1452.07 5922.27 1452.07 cv
5918.53 1452.07 5914.73 1451.13 5911.2 1449.27 cv
5899.67 1443.13 5895.27 1428.8 5901.4 1417.27 cv
5933.33 1357.2 li
5939.4 1345.67 5935.07 1331.33 5923.47 1325.2 cv
5905.2 1315.53 li
5893.67 1309.4 5879.33 1313.8 5873.2 1325.33 cv
5841.33 1385.4 li
5835.2 1396.93 5820.93 1401.33 5809.4 1395.2 cv
5775.4 1377.2 li
5764 1371.13 5759.6 1357.13 5765.4 1345.67 cv
5765.47 1345.53 5765.53 1345.33 5765.6 1345.2 cv
5837.67 1209.33 li
5843.8 1197.8 5858.13 1193.4 5869.67 1199.53 cv
6005.47 1271.67 li
6017 1277.73 6021.4 1292.07 6015.27 1303.6 cv
cp
1 1 1 rgb
f
6870.4 2323.3 mo
6868.87 2334.19 6777.07 2345 6719.27 2345 cv
6702.87 2345 6685.47 2343.81 6668.87 2341.79 cv
6753.33 2337.26 6815.44 2320.42 6831.11 2307.02 cv
6855.51 2286.09 6815.53 1944.26 6811.13 1932.61 cv
6806.67 1920.96 6753.33 1944.24 6753.33 1944.24 cv
6753.33 1944.24 6802.2 1895.42 6808.87 1881.47 cv
6815.53 1867.52 6846.67 1567.52 6846.67 1541.92 cv
6846.67 1516.31 6822.2 1397.71 6811.13 1388.43 cv
6800 1379.15 6637.8 1390.73 6637.8 1390.73 cv
6791.67 1281.48 li
6836.27 1273.73 li
6836.27 1273.73 6865.93 1479.89 6868.87 1523.29 cv
6871.87 1566.75 6845.2 1900.03 6845.2 1932.61 cv
6845.2 1965.19 6871.87 2312.42 6870.4 2323.3 cv
cp
.0117647 .403922 .466667 rgb
f
6137.4 1370.07 mo
6119.8 1403.2 li
6114.2 1413.73 li
6113.27 1415.4 li
6102 1436.67 li
6052.53 1432.2 li
5970.07 1388.47 li
5949.33 1377.47 li
6005.47 1271.67 li
6107.33 1325.67 li
6137.4 1370.07 li
cp
1 1 1 rgb
f
6352.87 1484.47 mo
6325.87 1535.4 li
6317.53 1551.07 li
6312 1548.13 li
6102 1436.67 li
6113.27 1415.4 li
6114.2 1413.73 li
6119.8 1403.2 li
6137.4 1370.07 li
6347.33 1481.53 li
6352.87 1484.47 li
cp
f
6839.27 1235.2 mo
6719.27 1266.27 li
6719.27 1266.27 6710 1267.6 6693.73 1268.93 cv
6667.4 1271 6622.8 1273.13 6569.27 1269.53 cv
6566.67 1269.33 li
6548.07 1268.07 6528.47 1266.07 6508.13 1263.2 cv
6496.73 1261.6 6485.13 1259.67 6473.33 1257.4 cv
6435.27 1250.13 6408.13 1244.93 6388.87 1241.33 cv
6387.6 1237.6 6385.93 1231.47 6386.67 1227.8 cv
6387.8 1222.2 6396.67 1207.8 6396.67 1207.8 cv
6396.67 1207.8 6537.07 1235.2 6671.87 1235.2 cv
6700.13 1235.2 li
6811.33 1235.2 6839.27 1235.2 6839.27 1235.2 cv
cp
.462745 .27451 .368627 rgb
f
6396.87 1560.67 mo
6382.33 1579.07 6356.27 1585 6334.8 1573.67 cv
6324 1567.93 6316.2 1558.73 6312 1548.13 cv
6102 1436.67 li
6052.53 1432.2 li
5970.07 1388.47 li
5987.33 1356.33 li
6053.33 1364.07 li
6119.8 1403.2 li
6157.8 1425.53 li
6114.2 1413.73 li
6105.93 1411.47 li
6113.27 1415.4 li
6309.33 1520.73 li
6325.2 1529.27 li
6325.2 1529.27 6325.2 1531.67 6325.87 1535.4 cv
6327.53 1545.6 6333.87 1565.67 6357.8 1572.2 cv
6375.8 1577.13 6388.8 1568.93 6396.87 1560.67 cv
cp
.823529 .956863 1 rgb
f
6748.87 722.2 mo
6748.87 722.2 6708.89 770 6686.67 825.556 cv
6664.44 881.111 6660 898.889 6660 898.889 cv
6522.22 905.556 li
6597.78 914.444 li
6506.67 932.222 li
6506.67 932.222 6471.11 1023.33 6451.11 1094.44 cv
6431.11 1165.56 6431.11 1165.56 6431.11 1165.56 cv
6642.22 1161.11 li
6642.22 1161.11 6417.78 1194.44 6435.56 1198.89 cv
6453.33 1203.33 6693.33 1207.78 6693.33 1207.78 cv
6757.78 914.444 li
6748.87 722.2 li
cp
.0117647 .403922 .466667 rgb
f
6566.67 1257.4 mo
6566.67 1300.4 li
6495.53 1301.87 li
6507.87 1263.87 li
6508.13 1263.2 li
6514.8 1242.6 li
6566.67 1257.4 li
cp
.462745 .27451 .368627 rgb
f
6664.44 1328.52 mo
6664.44 1328.52 6660 1447.04 6665.93 1457.41 cv
6671.85 1467.78 6788.89 1461.85 6796.3 1457.41 cv
6803.7 1452.96 6793.33 1328.52 6793.33 1328.52 cv
6664.44 1328.52 li
cp
f
6099.57 1392.71 mo
6352.22 1526.11 li
6352.22 1526.11 6205.25 1465.41 6099.57 1392.71 cv
cp
1 .623529 .313726 rgb
f
6615.53 1247.07 mo
6569.27 1269.53 li
6566.67 1270.8 li
6563.73 1272.2 li
6507.87 1263.87 li
6508.13 1263.2 li
6496.73 1261.6 6485.13 1259.67 6473.33 1257.4 cv
6435.27 1250.13 6408.13 1244.93 6388.87 1241.33 cv
6483.73 1245.53 li
6415.53 1230.73 li
6615.53 1247.07 li
cp
.337255 .180392 .266667 rgb
f
6685.19 1365.56 mo
6685.19 1365.56 6674.81 1435.19 6691.11 1436.67 cv
6707.41 1438.15 6784.44 1427.78 6784.44 1427.78 cv
6716.3 1445.56 li
6790.37 1441.11 li
6787.41 1334.44 li
6685.19 1365.56 li
cp
f
5987.31 1356.36 mo
6006.55 1320.11 li
6079.39 1358.77 li
6099.57 1392.71 li
6060.15 1395.01 li
5987.31 1356.36 li
cp
1 .623529 .313726 rgb
f
6889.6 1131.47 mo
6889.6 1131.47 6888.93 1135.67 6887.6 1142.87 cv
6879.53 1185.8 6847.67 1336.33 6791.87 1356.67 cv
6726.67 1380.4 6385.93 1454.47 6385.93 1454.47 cv
6385.93 1454.47 6385.93 1454.47 6374.07 1470.73 cv
6368.87 1477.93 6354.8 1493.4 6338.73 1508.67 cv
6318.33 1528.27 6294.67 1547.6 6282.2 1549.27 cv
6260 1552.2 6255.53 1541.87 6255.53 1541.87 cv
6255.53 1541.87 6255.53 1541.87 6242.2 1541.87 cv
6228.87 1541.87 6211.13 1532.93 6211.13 1532.93 cv
6211.13 1532.93 6185.93 1537.4 6182.93 1531.47 cv
6180 1525.53 6178.53 1506.27 6178.53 1506.27 cv
6178.53 1506.27 6145.93 1513.73 6145.93 1501.87 cv
6145.93 1490 6185.93 1401.13 6185.93 1401.13 cv
6161.87 1382.2 li
6161.87 1382.2 6185.93 1356.67 6191.87 1353.73 cv
6197.8 1350.73 6251.13 1340.4 6257.07 1340.4 cv
6262.93 1340.4 6331.13 1359.6 6340 1356.67 cv
6348.87 1353.73 6671.87 1208.53 6676.27 1207.07 cv
6680.73 1205.53 6686.67 1103.33 6686.67 1103.33 cv
6705.73 1099.2 li
6754.8 1088.53 li
6881.2 1128.8 li
6889.6 1131.47 li
cp
1 .85098 .85098 rgb
f
6887.6 1142.87 mo
6879.53 1185.8 6847.67 1336.33 6791.87 1356.67 cv
6726.67 1380.4 6385.93 1454.47 6385.93 1454.47 cv
6385.93 1454.47 6385.93 1454.47 6374.07 1470.73 cv
6368.87 1477.93 6354.8 1493.4 6338.73 1508.67 cv
6352.67 1487.53 6374.07 1454.47 6375.53 1447.8 cv
6377.73 1438.07 6353.73 1374 6352.27 1370.2 cv
6353.93 1373.53 6377 1418.93 6386.67 1421.13 cv
6396.67 1423.33 6797.8 1320 6805.53 1313.33 cv
6813.33 1306.67 6853.33 1166.69 6846.67 1162.22 cv
6840 1157.82 6692.2 1112.2 6692.2 1112.2 cv
6705.73 1099.2 li
6754.8 1088.53 li
6881.2 1128.8 li
6883.27 1133.27 6885.4 1138 6887.6 1142.87 cv
cp
.976471 .686275 .686275 rgb
f
6903.33 1141.13 mo
6903.33 1141.13 6905.53 1156.67 6903.33 1164.47 cv
6901.13 1172.2 6882.2 1175.53 6882.2 1175.53 cv
6882.2 1175.53 6862.2 1137.8 6781.13 1126.67 cv
6718.07 1118 6693.93 1116.8 6686.33 1116.67 cv
6684.13 1116.6 6683.33 1116.67 6683.33 1116.67 cv
6683.33 1116.67 6673.33 1096.67 6674.47 1090 cv
6675.53 1083.33 6686.67 1075.53 6686.67 1075.53 cv
6686.67 1075.53 6677.8 856.667 6748.87 722.2 cv
6748.87 722.2 6834.47 734.467 6843.33 736.667 cv
6851.67 738.733 6900.93 787.6 6912.6 805.667 cv
6913.4 806.867 6914.07 807.933 6914.47 808.866 cv
6921.13 823.333 6931.13 933.333 6932.2 978.866 cv
6933.33 1024.47 6903.33 1141.13 6903.33 1141.13 cv
cp
.823529 .956863 1 rgb
f
6164.33 320.533 mo
5990.27 323 5864.07 329.066 5860 341.133 cv
5857.47 348.866 5856 433.267 5855.4 564.267 cv
5790.6 542.333 5736 516.2 5704.8 493.733 cv
5704.67 436.466 li
5704.6 413.533 li
5704.33 274.933 5816.87 161.466 5955.4 160.533 cv
6037.47 160 li
6143.73 159.333 li
6155.27 194.867 6163.2 253.333 6164.33 320.533 cv
cp
.662745 .282353 .490196 rgb
f
5830 997.778 mo
5830 997.778 5845.56 1005.56 5845.56 1013.33 cv
5845.56 1021.11 5815.58 1075.23 5835.56 1084.44 cv
5864.44 1097.78 5905.56 1020 5911.11 1023.33 cv
5916.67 1026.67 6021.11 1025.56 6008.89 987.778 cv
5996.67 950 5830 997.778 5830 997.778 cv
cp
1 .85098 .85098 rgb
f
6164.47 336.667 mo
6164.47 398.2 6158.73 453.667 6149.67 492.667 cv
6146.93 492.667 li
6083.93 493.066 li
6058.6 493.267 6038.13 513.866 6038.2 539.2 cv
6038.33 603.2 li
5997.93 602.8 5934.53 590.267 5865.47 567.667 cv
5862.07 566.533 5858.73 565.467 5855.4 564.267 cv
5846.67 467.778 5842.58 366.693 5860 341.133 cv
5893.33 292.222 6008.89 314.444 6164.33 320.533 cv
6164.4 325.867 6164.47 331.2 6164.47 336.667 cv
cp
.576471 .239216 .439216 rgb
f
5724.47 1945.53 mo
5720 1938.87 5717.8 1910 5717.8 1910 cv
5717.8 2505.67 li
5715.47 2505.13 5713.2 2504.67 5711 2504.2 cv
5710.27 2503.2 5709.67 2502.47 5708.87 2501.47 cv
5708.8 2471.93 li
5708.73 2449.6 li
5706.67 1418.53 li
5715.53 1854.47 li
5715.53 1854.47 5722.2 1776.67 5728.87 1818.87 cv
5735.53 1861.13 5728.87 1952.2 5724.47 1945.53 cv
cp
1 .792157 .792157 rgb
f
7319.87 189.6 mo
7312 183.066 7302.93 176.6 7293.33 172.2 cv
7280.2 166.133 7041.53 160.067 6785.8 155.267 cv
7256.73 152.2 li
7257.8 152.2 li
7262 152.2 7266.2 152.333 7270.33 152.733 cv
7270.47 152.733 7270.67 152.733 7270.8 152.8 cv
7281.47 153.533 7291.33 157.333 7299.53 163.267 cv
7300.07 163.667 7300.6 164.066 7301.13 164.533 cv
7309.47 170.934 7316 179.6 7319.87 189.6 cv
cp
f
6737.04 281.111 mo
6738.52 285.556 6705.93 387.778 6705.93 387.778 cv
6614.44 368.889 li
6722.22 412.222 li
6722.22 412.222 6796.85 482.037 6803.7 479.629 cv
6810.56 477.222 6837.78 423.333 6837.78 417.407 cv
6837.78 411.481 6802.22 332.963 6802.22 332.963 cv
6817.04 383.333 li
6817.04 383.333 6791.85 327.037 6781.48 316.667 cv
6771.11 306.296 6737.04 281.111 6737.04 281.111 cv
cp
.0117647 .403922 .466667 rgb
f
6498 348.333 mo
6574.44 356.667 li
6574.44 356.667 6527.11 337.777 6498 348.333 cv
cp
f
6754.21 593.128 mo
6755.6 593.005 6756.93 592.298 6757.8 591.079 cv
6767.05 578.108 6780.56 563.796 6786.24 563.289 cv
6793.99 562.596 6806.16 570.844 6810.19 574.079 cv
6812.32 575.785 6815.42 575.445 6817.13 573.321 cv
6818.83 571.197 6818.5 568.094 6816.38 566.387 cv
6814.58 564.941 6798.43 552.289 6785.36 553.457 cv
6772.29 554.625 6753.41 580.228 6749.76 585.347 cv
6748.18 587.566 6748.69 590.646 6750.91 592.231 cv
6751.91 592.942 6753.08 593.23 6754.21 593.128 cv
cp
.776471 .482353 .443137 rgb
f
6789.51 599.884 mo
6792.22 599.642 6794.22 597.244 6793.98 594.529 cv
6793.9 593.61 6791.77 571.937 6774.45 563.903 cv
6771.98 562.753 6769.04 563.831 6767.9 566.304 cv
6766.75 568.777 6767.83 571.71 6770.3 572.858 cv
6782.51 578.518 6784.14 595.24 6784.15 595.408 cv
6784.39 598.123 6786.79 600.127 6789.51 599.884 cv
cp
f
6588.47 599.133 mo
6584.47 602.8 6566 612.6 6551.53 613.8 cv
6537 615.067 6515.93 596.733 6515.93 590.6 cv
6515.93 589.867 6516.53 588 6517.53 585.333 cv
6526.93 590.4 6540.6 596.667 6551.13 596.667 cv
6563.6 596.667 6578.2 583.533 6585.93 575.733 cv
6588.4 588.533 6589.6 598.066 6588.47 599.133 cv
cp
.937255 .580392 .572549 rgb
f
5841.11 1006.67 mo
5841.11 1006.67 5840 978.889 5830 984.444 cv
5820 990 5790 1006.67 5790 1006.67 cv
5841.11 1006.67 li
cp
.976471 .686275 .686275 rgb
f
6185.93 1401.13 mo
6196.67 1374.44 li
6196.67 1374.44 6182.98 1383.38 6185.93 1401.13 cv
cp
f
6178.53 1506.27 mo
6190 1481.11 li
6190 1481.11 6191.51 1501.42 6178.53 1506.27 cv
cp
f
6903.33 1141.13 mo
6903.33 1141.13 6905.53 1156.67 6903.33 1164.47 cv
6901.13 1172.2 6882.2 1175.53 6882.2 1175.53 cv
6882.2 1175.53 6862.2 1137.8 6781.13 1126.67 cv
6718.07 1118 6693.93 1116.8 6686.33 1116.67 cv
6693.53 1114.87 6701.07 1113.33 6708.87 1112.2 cv
6755.53 1105.53 6817.8 1123.33 6826.67 1123.33 cv
6835.53 1123.33 6860 1123.33 6862.2 1116.67 cv
6864.47 1110 6851.13 1096.67 6817.8 1087.8 cv
6784.47 1078.87 6711.13 1074.47 6711.13 1074.47 cv
6711.13 1074.47 6755.53 1063.33 6804.47 1070 cv
6853.33 1076.67 6891.13 1105.53 6897.8 1105.53 cv
6904.47 1105.53 6920 1018.87 6920 994.467 cv
6920 976.333 6915.13 863.133 6912.6 805.667 cv
6913.4 806.867 6914.07 807.933 6914.47 808.866 cv
6921.13 823.333 6931.13 933.333 6932.2 978.866 cv
6933.33 1024.47 6903.33 1141.13 6903.33 1141.13 cv
cp
.67451 .854902 .898039 rgb
f
5993.33 1307.8 mo
5925.47 1451.87 li
5924.4 1452 5923.33 1452.07 5922.27 1452.07 cv
5918.53 1452.07 5914.73 1451.13 5911.2 1449.27 cv
5899.67 1443.13 5895.27 1428.8 5901.4 1417.27 cv
5933.33 1357.2 li
5939.4 1345.67 5935.07 1331.33 5923.47 1325.2 cv
5905.2 1315.53 li
5893.67 1309.4 5879.33 1313.8 5873.2 1325.33 cv
5841.33 1385.4 li
5835.2 1396.93 5820.93 1401.33 5809.4 1395.2 cv
5775.4 1377.2 li
5764 1371.13 5759.6 1357.13 5765.4 1345.67 cv
5779.47 1354.27 5813.47 1374.6 5822.2 1375.2 cv
5833.13 1375.93 5900.07 1253.2 5902.13 1249.33 cv
5884.47 1298.87 li
5914.8 1253.73 li
5993.33 1307.8 li
cp
.823529 .956863 1 rgb
f
4345 2135 mo
4345 2170 li
4345 2200.38 4320.38 2225 4290 2225 cv
3147 2225 li
3147 2135 li
4245.97 2135 li
4245.97 304.171 li
4245.97 289.36 4251.03 275.86 4259.3 265.861 cv
4268.17 255.03 4280.77 248.231 4294.83 248.231 cv
4307.06 248.231 4318.19 253.34 4326.76 261.799 cv
4327.68 262.71 4328.57 263.66 4329.43 264.641 cv
4338.3 274.711 4343.77 288.75 4343.77 304.171 cv
4343.77 2135 li
4345 2135 li
.462745 .27451 .368627 rgb
f
3781.96 541.256 mo
3781.96 541.256 3774.4 574.661 3777.87 583.8 cv
3781.33 592.939 3796.15 593.254 3796.15 593.254 cv
3805.6 541.886 li
3781.96 541.256 li
cp
.74902 .305882 .203922 rgb
f
4345 2135 mo
4345 2170 li
4345 2200.38 4320.38 2225 4290 2225 cv
3147 2225 li
3147 2183 li
4251 2183 li
4189 2197 li
4189 2197 4247 2203 4263 2201 cv
4279 2199 4297 2177 4305 2155 cv
4313 2133 4303 599 4303 599 cv
4321 707.001 li
4326.76 261.799 li
4327.68 262.71 4328.57 263.66 4329.43 264.641 cv
4338.3 274.711 4343.77 288.75 4343.77 304.171 cv
4343.77 2135 li
4345 2135 li
.356863 .196078 .286275 rgb
f
3161 1950.33 mo
3161 2338.33 li
3161 2352.62 3152.01 2364.82 3139.37 2369.56 cv
3135.73 2370.92 3131.79 2371.67 3127.67 2371.67 cv
3109.26 2371.67 3094.33 2356.74 3094.33 2338.33 cv
3094.33 1950.33 li
3161 1950.33 li
.462745 .27451 .368627 rgb
f
3161 271.37 mo
3161 659.37 li
3094.33 659.37 li
3094.33 271.37 li
3094.33 252.96 3109.26 238.04 3127.67 238.04 cv
3129.8 238.04 3131.88 238.24 3133.89 238.62 cv
3149.33 241.53 3161 255.09 3161 271.37 cv
cp
f
3161 271.37 mo
3161 659.37 li
3130.01 659.37 li
3133.89 238.62 li
3149.33 241.53 3161 255.09 3161 271.37 cv
cp
.356863 .196078 .286275 rgb
f
3118.13 1950.33 mo
3161 1950.33 li
3161 2338.33 li
3161 2352.62 3152.01 2364.82 3139.37 2369.56 cv
3137 2161 li
3115.67 2217 li
3118.13 1950.33 li
f
3462.33 1881 mo
3457 1902.33 3406.33 1978.33 3206.33 1977 cv
3030.16 1975.83 2846.33 1931.67 2827.67 1849 cv
2827.67 1849 2827.76 1840.25 2827.94 1824.2 cv
2829.52 1682.96 2837.74 976.2 2847.26 688.049 cv
2849.57 618.24 2851.95 572.999 2854.33 566.33 cv
2867.67 528.999 3019.67 491.671 3182.33 488.999 cv
3249.59 487.9 3306.83 500.471 3351.38 516.919 cv
3414.59 540.259 3452.31 571.391 3457 582.33 cv
3458.51 585.861 3459.83 633.709 3460.95 709.14 cv
3465.72 1032.7 3466.66 1863.7 3462.33 1881 cv
.937255 .384314 .384314 rgb
f
4484.9 254.233 mo
4471.37 254.233 4459.17 260.866 4450.3 271.624 cv
4441.43 282.301 4435.97 297.183 4435.97 313.521 cv
4435.97 2281.63 li
4435.97 2314.39 4457.9 2341 4484.9 2341 cv
4498.43 2341 4510.63 2334.37 4519.43 2323.61 cv
4522.3 2320.13 4524.77 2316.25 4526.77 2312.05 cv
4531.23 2303.15 4533.77 2292.8 4533.77 2281.63 cv
4533.77 313.521 li
4533.77 297.83 4528.7 283.515 4520.43 272.918 cv
4511.57 261.433 4498.97 254.233 4484.9 254.233 cv
.462745 .27451 .368627 rgb
f
3460.95 709.14 mo
3450.42 706.801 3433.5 703.039 3406.33 696.999 cv
3334.33 681 3078.33 673.001 3078.33 673.001 cv
3294.33 654.329 li
3294.33 654.329 3294.33 654.329 3153 649 cv
3035.55 644.57 2892.31 676.97 2847.26 688.049 cv
2849.57 618.24 2851.95 572.999 2854.33 566.33 cv
2867.67 528.999 3019.67 491.671 3182.33 488.999 cv
3345 486.33 3449 563.67 3457 582.33 cv
3458.51 585.861 3459.83 633.709 3460.95 709.14 cv
.8 .298039 .298039 rgb
f
4484.9 254.233 mo
4471.37 254.233 4459.17 260.866 4450.3 271.624 cv
4441.43 282.301 4435.97 297.183 4435.97 313.521 cv
4435.97 2281.63 li
4435.97 2314.39 4457.9 2341 4484.9 2341 cv
4498.43 2341 4510.63 2334.37 4519.43 2323.61 cv
4522.3 2320.13 4524.77 2316.25 4526.77 2312.05 cv
4507.57 2320.54 4485.1 2325.23 4473.77 2308.65 cv
4451.57 2276.29 4460.43 2176.49 4460.43 2176.49 cv
4482.63 2241.19 li
4482.63 2241.19 4478.23 289.256 4489.3 278.498 cv
4494.3 273.565 4507.5 272.594 4520.43 272.918 cv
4511.57 261.433 4498.97 254.233 4484.9 254.233 cv
.356863 .196078 .286275 rgb
f
3211.49 1977.02 mo
3209.78 1977.02 3208.06 1977.01 3206.33 1977 cv
3191.24 1976.9 3176.09 1976.48 3161 1975.76 cv
3146.55 1975.06 3132.18 1974.08 3117.92 1972.81 cv
2973.18 1959.95 2843.2 1917.81 2827.67 1849 cv
2827.67 1849 2827.76 1840.25 2827.94 1824.2 cv
2855.34 1847.66 2899.05 1872.62 2966.33 1883 cv
2988.23 1886.38 3009.95 1887.81 3030.99 1887.81 cv
3146.1 1887.81 3241.5 1845.05 3242.98 1844.38 cv
3127.67 1919 li
3127.67 1919 3271 1909 3327 1855 cv
3369.04 1814.46 3361.27 1062.12 3354.78 689.42 cv
3375.95 691.708 3393.88 694.234 3406.33 696.999 cv
3433.5 703.039 3450.42 706.801 3460.95 709.14 cv
3460.95 709.14 li
3463.63 891.143 3465.1 1233.7 3465.11 1501.68 cv
3465.11 1710.11 3464.22 1873.43 3462.33 1881 cv
3457.05 1902.15 3407.2 1977.02 3211.49 1977.02 cv
3456.97 582.27 mo
3456.97 582.263 3456.97 582.257 3456.97 582.25 cv
3456.97 582.257 3456.97 582.263 3456.97 582.27 cv
3456.95 582.212 mo
3456.95 582.203 3456.94 582.193 3456.94 582.184 cv
3456.94 582.193 3456.95 582.203 3456.95 582.212 cv
3456.92 582.149 mo
3456.92 582.142 3456.91 582.134 3456.91 582.127 cv
3456.91 582.134 3456.92 582.142 3456.92 582.149 cv
3456.89 582.084 mo
3456.89 582.077 3456.89 582.071 3456.88 582.064 cv
3456.89 582.071 3456.89 582.077 3456.89 582.084 cv
3456.82 581.939 mo
3456.82 581.936 3456.82 581.932 3456.82 581.928 cv
3456.82 581.932 3456.82 581.936 3456.82 581.939 cv
3456.79 581.877 mo
3456.79 581.87 3456.79 581.864 3456.78 581.857 cv
3456.79 581.863 3456.79 581.87 3456.79 581.877 cv
3456.76 581.815 mo
3456.76 581.807 3456.76 581.8 3456.75 581.792 cv
3456.76 581.8 3456.76 581.807 3456.76 581.815 cv
3456.73 581.744 mo
3456.73 581.739 3456.72 581.735 3456.72 581.73 cv
3456.72 581.735 3456.73 581.74 3456.73 581.744 cv
3456.62 581.53 mo
3456.62 581.528 3456.62 581.526 3456.61 581.524 cv
3456.62 581.526 3456.62 581.528 3456.62 581.53 cv
.843137 .25098 .25098 rgb
f
3460.95 709.14 mo
3450.42 706.801 3433.5 703.039 3406.33 696.999 cv
3393.88 694.234 3375.95 691.708 3354.78 689.42 cv
3353.44 612.63 3352.16 551.929 3351.38 516.919 cv
3413.1 539.71 3450.52 569.931 3456.61 581.524 cv
3456.62 581.526 3456.62 581.528 3456.62 581.53 cv
3456.65 581.597 3456.69 581.664 3456.72 581.73 cv
3456.72 581.735 3456.73 581.739 3456.73 581.744 cv
3456.74 581.76 3456.74 581.776 3456.75 581.792 cv
3456.76 581.8 3456.76 581.807 3456.76 581.815 cv
3456.77 581.829 3456.78 581.843 3456.78 581.857 cv
3456.79 581.864 3456.79 581.87 3456.79 581.877 cv
3456.8 581.894 3456.81 581.911 3456.82 581.928 cv
3456.82 581.932 3456.82 581.936 3456.82 581.939 cv
3456.84 581.981 3456.86 582.023 3456.88 582.064 cv
3456.89 582.071 3456.89 582.077 3456.89 582.084 cv
3456.9 582.098 3456.9 582.113 3456.91 582.127 cv
3456.91 582.134 3456.92 582.142 3456.92 582.149 cv
3456.93 582.161 3456.93 582.172 3456.94 582.184 cv
3456.94 582.193 3456.95 582.203 3456.95 582.212 cv
3456.95 582.225 3456.96 582.237 3456.97 582.25 cv
3456.97 582.257 3456.97 582.263 3456.97 582.27 cv
3456.98 582.29 3456.99 582.31 3457 582.33 cv
3458.51 585.861 3459.83 633.709 3460.95 709.14 cv
.721569 .196078 .196078 rgb
f
3709 2461 mo
3697 2473 3695 2473 3645 2473 cv
3595 2473 3405 2455 3391 2439 cv
3377 2423 3358.33 2373 3358.33 2353 cv
3358.33 2338.79 3365.73 2290.26 3370.02 2263.35 cv
3371.77 2252.38 3373 2245 3373 2245 cv
3373 2245 3374.43 2245.13 3377.04 2245.37 cv
3389.14 2246.51 3426.61 2250.13 3464.26 2254.94 cv
3509.02 2260.67 3554.03 2268.08 3557 2275 cv
3563 2289 3573 2341 3573 2341 cv
3573 2341 3587 2343 3601 2355 cv
3615 2367 3625 2387 3625 2387 cv
3625 2387 3625 2387 3641 2391 cv
3657 2395 3721 2449 3709 2461 cv
cp
.462745 .27451 .368627 rgb
f
3891.67 2267.67 mo
3891.67 2267.67 3889 2379.67 3891.67 2393 cv
3894.33 2406.33 3902.33 2422.33 3915.67 2427.67 cv
3929 2433 4046.33 2438.33 4054.33 2435.67 cv
4062.33 2433 4062.33 2422.33 4070.33 2422.33 cv
4078.33 2422.33 4126.33 2427.67 4147.67 2435.67 cv
4169 2443.67 4297 2446.33 4334.33 2441 cv
4371.67 2435.67 4371.67 2419.67 4371.67 2411.67 cv
4371.67 2403.67 4329 2366.33 4291.67 2355.67 cv
4254.33 2345 4233 2347.67 4233 2347.67 cv
4107.67 2257 li
3891.67 2267.67 li
cp
f
3901 2271 mo
3899 2277 3903 2387 3907 2397 cv
3911 2407 4051 2413 4051 2413 cv
4051 2413 4001 2389 4001 2383 cv
4001 2377 4083 2385 4103 2391 cv
4123 2397 4131 2419 4153 2423 cv
4175 2427 4197 2423 4197 2423 cv
4197 2423 4201 2377 4213 2369 cv
4225 2361 4225 2361 4225 2361 cv
4225 2361 4173 2317 4163 2313 cv
4153 2309 4107 2327 4101 2327 cv
4095 2327 4045 2283 4045 2283 cv
3901 2271 li
cp
.356863 .196078 .286275 rgb
f
3645 2473 mo
3595 2473 3405 2455 3391 2439 cv
3377 2423 3358.33 2373 3358.33 2353 cv
3358.33 2338.79 3365.73 2290.26 3370.02 2263.35 cv
3377.04 2245.37 li
3385 2225 li
3464.26 2254.94 li
3475 2259 li
3475 2259 3509 2347 3503 2353 cv
3497.09 2358.91 3462.12 2376.44 3461.03 2376.99 cv
3462.49 2376.75 3509.16 2368.97 3519 2367 cv
3529 2365 3571 2355 3583 2357 cv
3595 2359 3609 2383 3609 2383 cv
3645 2405 li
3645 2405 3601 2395 3581 2395 cv
3561 2395 3505 2403 3497 2407 cv
3489 2411 3501 2439 3507 2447 cv
3513 2455 3645 2473 3645 2473 cv
cp
f
3753 649 mo
3753 649 3657 651.667 3601 670.333 cv
3545 689 3502.33 854.333 3499.67 867.667 cv
3497 881 3513 910.333 3513 910.333 cv
3513 910.333 3483.67 1027.67 3470.33 1083.67 cv
3459.22 1130.36 3451.67 1209 3451.67 1209 cv
3451.67 1209 3579.67 1273 3707.67 1283.67 cv
3835.67 1294.33 3875.67 1283.67 3875.67 1283.67 cv
3875.67 1283.67 3962.67 977 3968 945 cv
3973.33 913 4026.33 781 4002.33 743.667 cv
3980.7 710.02 3851.67 683.667 3851.67 683.667 cv
3753 649 li
cp
.823529 .956863 1 rgb
f
4651.54 1797.87 mo
4640.65 1821.77 4504.39 1849.86 4384.44 1843.44 cv
4264.5 1837.01 4208.7 1815.17 4203.46 1804.45 cv
4198.22 1793.74 4193.52 1724.36 4193.52 1724.36 cv
4193.52 1724.36 4147.87 1174.59 4174.73 1153.5 cv
4176.45 1152.14 4184.29 1150.64 4196.57 1149.1 cv
4258.79 1141.33 4435.21 1132.75 4510.88 1137.89 cv
4601.5 1144.05 4630.85 1141.65 4644.11 1149.77 cv
4647.58 1151.9 4650.48 1195.61 4652.69 1259.44 cv
4658.92 1439.65 4659.57 1780.22 4651.54 1797.87 cv
.462745 .27451 .368627 rgb
f
4214.33 1217.42 mo
4078.66 1289 li
4078.66 1289 4061.69 1276.12 4038.52 1255.79 cv
4031.57 1249.7 4024.06 1242.93 4016.29 1235.65 cv
4011.4 1231.06 4006.4 1226.27 4001.37 1221.3 cv
3999.32 1219.29 3997.27 1217.24 3995.22 1215.17 cv
3989.61 1209.5 3983.98 1203.64 3978.45 1197.63 cv
3941.1 1157.02 3908.09 1109.94 3910.33 1071.97 cv
3910.39 1070.89 3910.47 1069.79 3910.57 1068.65 cv
3917.84 980.31 4014.59 738.33 4014.59 738.33 cv
4014.59 738.33 4040.97 820.3 4044.74 833 cv
4048.51 845.7 4044.74 938.05 4043.49 947.29 cv
4042.23 956.52 4097.5 1075.43 4102.53 1083.51 cv
4105.06 1087.58 4102.12 1095.78 4098.58 1102.93 cv
4103.24 1098.95 4110.72 1095.96 4122.63 1097.36 cv
4130.2 1098.25 4179.16 1140.08 4179.16 1140.08 cv
4214.33 1217.42 li
cp
.823529 .956863 1 rgb
f
4611.73 1591.21 mo
4611.71 1607.43 4611.68 1623.4 4611.64 1638.83 cv
4611.44 1722.47 4611 1790 4611 1790 cv
4611 1790 4611 1790 4558 1796 cv
4505 1802 4431 1800 4431 1800 cv
4588.63 1777.05 li
4583.79 1777.65 4532.22 1784.03 4481.03 1786.49 cv
4464.49 1787.28 4448 1787.67 4433.13 1787.32 cv
4430.01 1787.25 4426.96 1787.14 4424 1787 cv
4417.73 1786.7 4410.85 1786.16 4403.53 1785.41 cv
4389.06 1783.93 4372.88 1781.67 4356.4 1778.99 cv
4350.12 1777.98 4343.79 1776.9 4337.5 1775.78 cv
4333.24 1775.02 4329 1774.24 4324.8 1773.45 cv
4307.18 1770.15 4290.23 1766.63 4275.69 1763.35 cv
4250.69 1757.73 4232.83 1752.83 4231 1751 cv
4226 1746 4222.25 1692.94 4220 1657 cv
4219.61 1650.79 4219.06 1640.69 4218.38 1627.8 cv
4217.83 1617.09 4217.19 1604.45 4216.49 1590.52 cv
4214.26 1545.78 4211.5 1487.75 4209.13 1437.63 cv
4206.27 1377.03 4204 1328 4204 1328 cv
4204 1328 4268.49 1326.87 4345.95 1325.7 cv
4361.92 1325.47 4378.43 1325.23 4395.05 1324.99 cv
4498.07 1323.56 4604.91 1322.46 4608 1324 cv
4609.55 1324.78 4610.5 1356.37 4611.06 1402.78 cv
4611.22 1416.64 4611.35 1431.82 4611.45 1447.9 cv
4611.54 1461.62 4611.61 1475.99 4611.65 1490.75 cv
4611.67 1497.98 4611.69 1505.3 4611.71 1512.69 cv
4611.76 1538.56 4611.76 1565.18 4611.73 1591.21 cv
.337255 .192157 .270588 rgb
f
4583 1733 mo
4575.15 1740.85 4268.92 1692.87 4257.34 1691.06 cv
4269.2 1693.23 4584.51 1751.08 4559 1755 cv
4542.6 1757.52 4425.93 1768.8 4337.5 1775.78 cv
4333.24 1775.02 4329 1774.24 4324.8 1773.45 cv
4307.18 1770.15 4290.23 1766.63 4275.69 1763.35 cv
4250.69 1757.73 4232.83 1752.83 4231 1751 cv
4226 1746 4222.25 1692.94 4220 1657 cv
4219.61 1650.79 4219.06 1640.69 4218.38 1627.8 cv
4217.83 1617.09 4217.19 1604.45 4216.49 1590.52 cv
4214.26 1545.78 4211.5 1487.75 4209.13 1437.63 cv
4249 1399 li
4249 1399 4541 1383 4549 1387 cv
4557 1391 4591 1725 4583 1733 cv
.247059 .141176 .2 rgb
f
3513 932 mo
3513 932 3487 1009 3492 1020 cv
3497 1031 3541 1023 3541 1023 cv
3541 1023 3552 964 3550 957 cv
3548 950 3513 932 3513 932 cv
cp
.67451 .854902 .898039 rgb
f
4403.53 1785.41 mo
4389.06 1783.93 4372.88 1781.67 4356.4 1778.99 cv
4363.05 1760.93 4372.56 1720.07 4349 1670 cv
4346.27 1664.2 4343.02 1659.09 4339.35 1654.6 cv
4328.39 1641.17 4313.72 1633.24 4298.27 1628.78 cv
4266.56 1619.64 4231.53 1625.13 4218.38 1627.8 cv
4217.83 1617.09 4217.19 1604.45 4216.49 1590.52 cv
4236.52 1584.88 4276.98 1577.12 4325.01 1587.81 cv
4330.25 1588.98 4335.59 1590.37 4341 1592 cv
4350.5 1594.87 4359.07 1599.05 4366.77 1604.28 cv
4427.39 1645.35 4433.33 1750.69 4403.53 1785.41 cv
cp
.937255 .384314 .384314 rgb
f
3729 775 mo
3729 775 3833 797 3869 825 cv
3905 853 3927 881 3927 881 cv
3843 837 li
3843 837 3941 909 3945 923 cv
3949 937 3917 1043 3917 1043 cv
3869 1075 li
3695 1027 li
3663 879 li
3729 775 li
cp
.67451 .854902 .898039 rgb
f
4611.73 1591.21 mo
4611.71 1607.43 4611.68 1623.4 4611.64 1638.83 cv
4597.63 1627.2 4570.18 1606.9 4533.95 1592.16 cv
4521.96 1587.29 4509 1583.02 4495.25 1579.87 cv
4472.14 1574.58 4446.79 1572.48 4420 1576 cv
4397.38 1578.98 4380.04 1589.43 4366.77 1604.28 cv
4354.43 1618.09 4345.61 1635.69 4339.35 1654.6 cv
4325.36 1696.83 4324.1 1745.63 4324.8 1773.45 cv
4307.18 1770.15 4290.23 1766.63 4275.69 1763.35 cv
4274.35 1731.12 4276.21 1676.23 4298.27 1628.78 cv
4305.09 1614.11 4313.83 1600.16 4325.01 1587.81 cv
4341.12 1570 4362.28 1555.51 4390 1547 cv
4442.95 1530.74 4488.6 1534.07 4524.91 1544.51 cv
4538.1 1548.29 4550.06 1553.02 4560.68 1558.1 cv
4585.21 1569.79 4602.63 1583.29 4611.73 1591.21 cv
cp
.8 .298039 .298039 rgb
f
4611.71 1512.69 mo
4597.56 1521.96 4580.01 1536.25 4560.68 1558.1 cv
4553.66 1566.03 4546.41 1574.95 4539 1585 cv
4537.27 1587.35 4535.58 1589.74 4533.95 1592.16 cv
4485.55 1664.08 4481.38 1766.4 4481.03 1786.49 cv
4464.49 1787.28 4448 1787.67 4433.13 1787.32 cv
4434.12 1769.91 4441.57 1671.14 4487 1593 cv
4489.65 1588.44 4492.41 1584.07 4495.25 1579.87 cv
4504.45 1566.28 4514.54 1554.57 4524.91 1544.51 cv
4557.8 1512.54 4593.4 1497.1 4611.65 1490.75 cv
4611.67 1497.98 4611.69 1505.3 4611.71 1512.69 cv
cp
.937255 .384314 .384314 rgb
f
4611.45 1447.9 mo
4587.61 1459.01 4522.09 1482.78 4449 1451 cv
4380 1421 4353.89 1353.03 4345.95 1325.7 cv
4361.92 1325.47 4378.43 1325.23 4395.05 1324.99 cv
4409.29 1356.99 4438.85 1408.18 4485 1417 cv
4536.05 1426.76 4588.22 1411.16 4611.06 1402.78 cv
4611.22 1416.64 4611.35 1431.82 4611.45 1447.9 cv
.8 .298039 .298039 rgb
f
4318.67 1253.33 mo
4318.67 1280.03 4295.91 1301.67 4267.83 1301.67 cv
4239.76 1301.67 4217 1280.03 4217 1253.33 cv
4217 1226.64 4239.76 1205 4267.83 1205 cv
4295.91 1205 4318.67 1226.64 4318.67 1253.33 cv
cp
.337255 .192157 .270588 rgb
f
4184.99 1180.99 mo
4184.32 1180.71 4149.91 1166.5 4107.67 1183.67 cv
4065 1201 4061 1234.33 4057 1249 cv
4053 1263.67 4053 1263.67 4053 1263.67 cv
4053 1263.67 4046.3 1260.16 4038.52 1255.79 cv
4030.39 1251.23 4021.09 1245.74 4017 1242.33 cv
4015.6 1241.17 4015.51 1238.79 4016.29 1235.65 cv
4019.97 1221.06 4042.87 1190.07 4043.65 1189.03 cv
4042.67 1190 4011.63 1220.89 4001.37 1221.3 cv
4000.71 1221.33 4000.14 1221.24 3999.67 1221 cv
3997.77 1220.05 3996.32 1217.9 3995.22 1215.17 cv
3991.67 1206.4 3991.67 1191.67 3991.67 1191.67 cv
3981 1198.33 li
3978.45 1197.63 li
3941.1 1157.02 3908.09 1109.94 3910.33 1071.97 cv
3910.39 1070.89 3910.47 1069.79 3910.57 1068.65 cv
3946.33 1001 li
4001 777 li
4001 777 4034.33 826.33 4037 834.33 cv
4039.67 842.33 4038.33 939.67 4031.67 949 cv
4025 958.33 3946.33 1082.33 3951.67 1090.33 cv
3957 1098.33 4031.67 986.33 4042.33 1002.33 cv
4053 1018.33 4079.67 1077 4082.33 1089 cv
4085 1101 4023.67 1169 4014.33 1177 cv
4007.33 1183 4005.58 1184.5 4005.15 1184.88 cv
4008.92 1181.99 4082.55 1125.42 4091 1116 cv
4091.04 1115.95 li
4099.7 1106.32 4107.69 1103.68 4117 1109 cv
4126.33 1114.33 4157.94 1139.17 4166.33 1146.33 cv
4174.66 1153.44 4184.84 1180.57 4184.99 1180.99 cv
cp
.67451 .854902 .898039 rgb
f
4298.33 1249 mo
4298.33 1272.56 4279.23 1291.67 4255.67 1291.67 cv
4232.1 1291.67 4213 1272.56 4213 1249 cv
4213 1225.44 4232.1 1206.33 4255.67 1206.33 cv
4279.23 1206.33 4298.33 1225.44 4298.33 1249 cv
cp
.937255 .384314 .384314 rgb
f
4230 1275 mo
4278 1216.33 li
4278 1216.33 4232.67 1240.33 4230 1275 cv
cp
.662745 .282353 .490196 rgb
f
4342.33 1402.33 mo
4250.33 1446.33 li
4207.14 1407.07 li
4134.64 1341.16 li
4078.43 1290.05 li
4073.15 1285.25 4068.68 1278.67 4065.23 1271.15 cv
4053.91 1246.52 4053.61 1211.93 4072.08 1197.59 cv
4076.05 1194.51 4080.43 1191.72 4085 1189 cv
4119.89 1168.25 4150.12 1170.19 4168.59 1174.98 cv
4176.24 1176.97 4181.88 1179.44 4185 1181 cv
4195.67 1186.33 4342.33 1402.33 4342.33 1402.33 cv
1 .85098 .85098 rgb
f
4314.33 1403.67 mo
4279.67 1421 li
4279.67 1421 4227.37 1414.32 4207.14 1407.07 cv
4205.23 1406.38 4203.6 1405.69 4202.33 1405 cv
4196.24 1401.67 4166.88 1373.24 4134.64 1341.16 cv
4110.19 1316.8 4084.08 1290.35 4065.23 1271.15 cv
4053.91 1246.52 4053.61 1211.93 4072.08 1197.59 cv
4076.05 1194.51 4080.43 1191.72 4085 1189 cv
4119.89 1168.25 4150.12 1170.19 4168.59 1174.98 cv
4185 1181 li
4314.33 1403.67 li
.976471 .686275 .686275 rgb
f
3801 529 mo
3801 529 3787.67 584.829 3766.33 623.667 cv
3745 662.504 3742.33 674.641 3742.33 674.641 cv
3742.33 674.641 3803.67 713.479 3838.33 715.906 cv
3873 718.333 3873 718.333 3873 718.333 cv
3897 647.94 li
3801 529 li
cp
.909804 .603922 .603922 rgb
f
4081.48 448.806 mo
4081.46 448.892 li
4079.2 457.523 4076.74 466.504 4074.39 474.182 cv
4071.86 482.454 4069.46 489.195 4067.58 492.305 cv
4060.43 504.236 4039.75 538.943 4039.75 538.943 cv
4039.75 538.943 4005.27 651.599 4002.88 663.53 cv
4000.5 675.452 3958.63 705.961 3934.77 715.5 cv
3931.95 716.625 3928.62 717.221 3924.9 717.363 cv
3897.06 718.469 3848.04 694.446 3841.72 679.716 cv
3834.56 663.01 3815.48 639.158 3813.09 593.825 cv
3812.09 574.765 3808.32 548.492 3808.32 548.492 cv
3808.32 548.492 3784.46 558.031 3777.3 558.031 cv
3770.14 558.031 3729.59 486.453 3734.36 455.443 cv
3739.13 424.424 3782.08 393.405 3794.01 395.787 cv
3805.94 398.179 3820.25 431.581 3820.25 431.581 cv
3863.81 388.025 li
3906.14 345.689 li
4080.32 360.003 li
4084.21 382.409 li
4088.04 404.485 4087.13 427.128 4081.48 448.806 cv
cp
1 .85098 .85098 rgb
f
4141 2281 mo
4128.02 2293.98 4023 2307 3946 2292 cv
3869 2277 3861 2268 3861 2257 cv
3861 2246 3867 2240 3867 2240 cv
3867 2240 3866.87 2238.59 3866.65 2236.15 cv
3865.92 2227.9 3864.26 2207.88 3863.77 2191.07 cv
3863.43 2179.69 3863.63 2169.78 3865 2166 cv
3869 2155 3876 2152 3876 2152 cv
3876 2152 3864 1852 3866 1839 cv
3868 1826 3876 1827 3876 1827 cv
3876 1827 3864 1811 3864 1801 cv
3864 1791.16 3879.5 1761.93 3879.99 1761.02 cv
3879.49 1761.84 3862.83 1788.97 3852 1787 cv
3843.17 1785.39 3749.83 1648.33 3711.36 1588.21 cv
3701.92 1573.48 3695.79 1563.36 3695 1561 cv
3691 1549 3683 1191 3683 1191 cv
3686.33 995.67 li
3686.33 995.67 3772 1022 3809 1025 cv
3846 1028 3905 1038.33 3905 1038.33 cv
3905 1038.33 3964 880.67 3973 721.671 cv
3973 721.671 3990 729.001 4001 735.001 cv
4012 740.999 4016 742 4016 742 cv
4016 742 3995 911 3947.67 1073 cv
3919.3 1170.08 3887 1282 3887 1282 cv
3887 1282 3971.07 1466.6 4009 1545 cv
4049 1627.67 4116 1768 4119 1776 cv
4122 1784 4122 1870.67 4121 1879.67 cv
4120 1888.67 4129 2056 4129 2069 cv
4129 2082 4135 2161 4135 2161 cv
4135 2161 4137 2228 4137 2239 cv
4137 2239.99 4137.18 2240.99 4137.49 2242.02 cv
4140.63 2252.38 4157.38 2264.62 4141 2281 cv
.662745 .282353 .490196 rgb
f
3731.67 1791.67 mo
3730.61 1804.29 3708.84 1857.53 3691.84 1915.43 cv
3687.27 1930.96 3683.05 1946.82 3679.67 1962.33 cv
3663.67 2035.67 3619.67 2237 3619.67 2237 cv
3619.67 2237 3627.67 2247.67 3619.67 2259.67 cv
3611.67 2271.67 3534.33 2305 3478.33 2301 cv
3422.33 2297 3366.33 2273 3358.33 2262.33 cv
3357.34 2261.01 3356.61 2259.59 3356.11 2258.11 cv
3352.5 2247.64 3359.67 2234.33 3359.67 2234.33 cv
3359.67 2234.33 3345 2190.33 3353 2171.67 cv
3361 2153 3394.33 2079.67 3394.33 2079.67 cv
3394.33 2079.67 3393 2039.67 3406.33 1978.33 cv
3419.67 1917 3483.67 1785 3483.67 1785 cv
3483.67 1785 3483.67 1785 3474.33 1773 cv
3465 1761 3478.33 1750.33 3478.33 1750.33 cv
3478.33 1750.33 3415.67 1525 3402.33 1475.67 cv
3389 1426.33 3373 1302.33 3378.33 1269 cv
3383.67 1235.67 3479 1010 3482 1005 cv
3485 1000 3490 1001 3490 1001 cv
3501.6 1010.15 3520.17 1012.58 3536.08 1012.66 cv
3552.64 1012.76 3566.33 1010.33 3566.33 1010.33 cv
3566.33 1010.33 3690.33 1254.33 3691.67 1259.67 cv
3693 1265 3695.67 1433 3695.67 1433 cv
3695.67 1433 3721.68 1671.75 3729.5 1759.98 cv
3731.05 1777.46 3731.89 1789.03 3731.67 1791.67 cv
cp
f
3753 649 mo
3753 649 3770.33 687.667 3814.33 702.333 cv
3858.33 717 3878.33 706.333 3878.33 706.333 cv
3890.33 738.333 li
3762.33 762.333 li
3711.67 698.333 li
3729 659.667 li
3753 649 li
cp
.823529 .956863 1 rgb
f
3753 649 mo
3735 757 li
3729.03 812.202 3718.57 866.826 3703.71 920.325 cv
3683.67 1011.67 li
3643.67 793 li
3643.67 793 3659.67 739.667 3667.67 702.333 cv
3675.67 665 3676 652 3676 652 cv
3676 652 3742.33 638.333 3753 649 cv
cp
.662745 .282353 .490196 rgb
f
3715 1053 mo
3715 1053 3929 1067 3923 1071 cv
3917 1075 3797 1085 3797 1085 cv
3797 1085 3919 1095 3917 1105 cv
3915 1115 3891 1233 3891 1233 cv
3891 1233 3727 1211 3721 1207 cv
3715 1203 3715 1053 3715 1053 cv
cp
.498039 .196078 .376471 rgb
f
3517 1775 mo
3525 1779 3621 1815 3609 1815 cv
3597 1815 3517 1797 3509 1807 cv
3501 1817 3437 2055 3431 2083 cv
3425 2111 3531 2179 3559 2173 cv
3587 2167 3637 2129 3631 2149 cv
3625 2169 3613 2211 3593 2221 cv
3573 2231 3491 2235 3461 2229 cv
3431 2223 3361 2171 3367 2181 cv
3373 2191 3403 2231 3419 2239 cv
3435 2247 3481 2257 3513 2257 cv
3545 2257 3601 2239 3601 2239 cv
3601 2239 3613 2275 3519 2287 cv
3441.72 2296.86 3387.43 2278.35 3356.11 2258.11 cv
3352.5 2247.64 3359.67 2234.33 3359.67 2234.33 cv
3359.67 2234.33 3345 2190.33 3353 2171.67 cv
3361 2153 3394.33 2079.67 3394.33 2079.67 cv
3394.33 2079.67 3393 2039.67 3406.33 1978.33 cv
3419.67 1917 3483.67 1785 3483.67 1785 cv
3483.67 1785 3483.67 1785 3474.33 1773 cv
3465 1761 3478.33 1750.33 3478.33 1750.33 cv
3478.33 1750.33 3415.67 1525 3402.33 1475.67 cv
3389 1426.33 3373 1302.33 3378.33 1269 cv
3383.67 1235.67 3479 1010 3482 1005 cv
3485 1000 3490 1001 3490 1001 cv
3501.6 1010.15 3520.17 1012.58 3536.08 1012.66 cv
3529 1029 li
3529 1029 3495 1013 3492 1020 cv
3489 1027 3406.75 1256.97 3405 1271 cv
3397 1335 3489 1719 3497 1731 cv
3505 1743 3595 1775 3615 1775 cv
3635 1775 3721 1741 3709 1745 cv
3697 1749 3635 1787 3627 1791 cv
3619 1795 3509 1771 3517 1775 cv
cp
f
3924.9 717.363 mo
3897.06 718.469 3848.04 694.446 3841.72 679.716 cv
3834.56 663.01 3815.48 639.158 3813.09 593.825 cv
3812.09 574.765 3808.32 548.492 3808.32 548.492 cv
3808.32 548.492 3784.46 558.031 3777.3 558.031 cv
3770.14 558.031 3729.59 486.453 3734.36 455.443 cv
3739.13 424.424 3782.08 393.405 3794.01 395.787 cv
3805.94 398.179 3820.25 431.581 3820.25 431.581 cv
3863.81 388.025 li
3868.53 390.011 3871.46 391.249 3871.46 391.249 cv
3871.46 391.249 3845.94 504.7 3843.1 567.098 cv
3840.27 629.495 3862.96 684.33 3869.57 691.893 cv
3882.66 706.845 3908.81 715.349 3924.9 717.363 cv
cp
.976471 .686275 .686275 rgb
f
4169 1318.33 mo
4169 1318.33 4238.33 1350.33 4251.67 1374.33 cv
4265 1398.33 4246.33 1425 4246.33 1425 cv
4179.67 1369 li
4169 1318.33 li
1 .85098 .85098 rgb
f
3846.33 1198.33 mo
3846.33 1198.33 3809 1194.33 3777 1253 cv
3745 1311.67 3750.33 1358.33 3750.33 1358.33 cv
3750.33 1358.33 3703.67 1366.33 3695.67 1361 cv
3687.67 1355.67 3679.67 1335.67 3679.67 1335.67 cv
3679.67 1335.67 3655.67 1325 3651.67 1317 cv
3647.67 1309 3646.33 1287.67 3646.33 1287.67 cv
3646.33 1287.67 3602.33 1263.67 3562.33 1165 cv
3537.25 1103.13 3517.94 1015.58 3507.68 950.34 cv
3501.57 911.5 3498.67 880.59 3499.67 867.67 cv
3502.33 833 3525 739 3544 711 cv
3555.56 693.96 3587.67 670.33 3613 665 cv
3647.37 657.76 3674.28 693.44 3681.33 727.85 cv
3734.42 987.06 li
3743.19 1029.86 li
3759.67 1110.33 li
3759.67 1110.33 3777 1106.33 3785 1106.33 cv
3793 1106.33 3819.67 1138.33 3827.67 1143.67 cv
3835.67 1149 3846.33 1198.33 3846.33 1198.33 cv
cp
.890196 .968627 .988235 rgb
f
3852 1787 mo
3843.17 1785.39 3749.83 1648.33 3711.36 1588.21 cv
3705.74 1551.01 3705.93 1444.07 3711 1439 cv
3716.95 1433.05 3837.1 1346.37 3838.98 1345.02 cv
3765 1435 li
3765 1435 3897 1367 3909 1379 cv
3921 1391 4083 1715 4075 1725 cv
4067 1735 3985 1811 3975 1829 cv
3965 1847 3987 1893 3987 1893 cv
4099 1877 li
4099 1877 4129 2129 4111 2139 cv
4093 2149 3897 2147 3897 2147 cv
3897 2147 4097 2159 4103 2169 cv
4109 2179 4107 2195 4097 2203 cv
4087 2211 3941 2219 3905 2207 cv
3887.75 2201.25 3873.71 2195.5 3863.77 2191.07 cv
3863.43 2179.69 3863.63 2169.78 3865 2166 cv
3869 2155 3876 2152 3876 2152 cv
3876 2152 3864 1852 3866 1839 cv
3868 1826 3876 1827 3876 1827 cv
3876 1827 3864 1811 3864 1801 cv
3864 1791.16 3879.5 1761.93 3879.99 1761.02 cv
3879.49 1761.84 3862.83 1788.97 3852 1787 cv
.498039 .196078 .376471 rgb
f
3753 649 mo
3753 649 3743.67 637.667 3735.67 637 cv
3727.67 636.333 3718.33 644.333 3714.33 646.333 cv
3710.33 648.333 3693.67 640.333 3689 641.667 cv
3684.33 643 3676 652 3676 652 cv
3714.33 663 li
3753 649 li
cp
.662745 .282353 .490196 rgb
f
3969 720.333 mo
3969 720.333 3980.33 714.333 3985.67 715 cv
3991 715.667 3994.33 725 3997.67 727.667 cv
4001 730.333 4012.33 732.333 4013 734.333 cv
4013.67 736.333 4016 742 4016 742 cv
3986.33 734.333 li
3973 721.667 li
3969 720.333 li
cp
f
4106.6 397.224 mo
4104.02 397.564 4100.98 397.876 4097.42 398.179 cv
3958.44 410.158 3905.81 383.052 3905.81 383.052 cv
3883.12 365.411 li
3890.69 395.664 li
3890.69 395.664 3847.83 433.481 3837.74 448.608 cv
3827.66 463.734 3822.62 493.988 3822.62 493.988 cv
3820.25 431.581 li
3787.63 386.825 3751.4 423.078 3751.4 423.078 cv
3751.4 423.078 3731.85 390.616 3744.47 352.799 cv
3757.07 314.982 3802.45 304.904 3802.45 304.904 cv
3802.45 304.904 3820.1 226.746 3948.68 251.96 cv
3982.7 258.625 4009.88 269.866 4031.57 283.017 cv
4091.89 319.586 4109.91 370.998 4115.07 380.538 cv
4121.11 391.703 4122.65 395.087 4106.6 397.224 cv
cp
.807843 .384314 .254902 rgb
f
4599.17 1326.5 mo
4583.81 1365.03 4530.57 1355.99 4530.57 1355.99 cv
4499.81 1392.44 li
4487.53 1377.4 li
4487.53 1377.4 4359.51 1431.61 4235.46 1483.71 cv
4127.73 1528.97 4022.99 1572.65 4007.7 1577.87 cv
3985.18 1585.57 3962.18 1592.11 3951.79 1589.07 cv
3947 1587.68 3944.9 1584.24 3946.77 1577.94 cv
3951.29 1562.72 4129.46 1484.66 4213.94 1448.39 cv
4240.3 1437.08 4257.54 1429.83 4257.54 1429.83 cv
4243.87 1418.29 li
4300.03 1395.69 li
4350.27 1375.46 li
4355.56 1375.15 li
4372.43 1374.18 li
4381.43 1373.67 li
4381.43 1373.67 4459.49 1345.92 4475.23 1342.05 cv
4490.99 1338.18 4495.18 1327.67 4486.07 1319.97 cv
4476.95 1312.29 4268 1393.41 4268 1393.41 cv
4268 1393.41 4239.91 1403.16 4199.65 1416.89 cv
4104.97 1449.21 3943 1503.54 3921.13 1504.79 cv
3907.99 1505.54 3898.65 1503.12 3893.73 1498.98 cv
3886.98 1493.3 3888.56 1484.42 3900.09 1476.1 cv
3909.94 1469 4046.86 1420.01 4184.57 1371.89 cv
4325.73 1322.56 4467.73 1274.14 4474.46 1272.72 cv
4487.76 1269.9 4504.22 1274.44 4504.22 1274.44 cv
4510.85 1251.63 li
4520.62 1218.04 li
4520.62 1218.04 4526.95 1262.32 4533.17 1294.82 cv
4551.09 1220.95 li
4557.38 1228.39 li
4586.14 1262.44 li
4586.14 1262.44 4614.53 1287.97 4599.17 1326.5 cv
1 1 1 rgb
f
4184.57 1371.88 mo
4188.14 1385.43 4193.02 1400.5 4199.65 1416.89 cv
4104.97 1449.2 3943 1503.54 3921.13 1504.78 cv
3889.97 1506.57 3880.15 1490.48 3900.09 1476.09 cv
3909.94 1469 4046.86 1420.01 4184.57 1371.88 cv
1 .623529 .313726 rgb
f
4235.46 1483.71 mo
4127.73 1528.97 4022.99 1572.64 4007.7 1577.87 cv
3974.8 1589.11 3940.84 1597.9 3946.77 1577.94 cv
3951.3 1562.71 4129.46 1484.66 4213.94 1448.38 cv
4221.08 1462.32 4228.35 1473.97 4235.46 1483.71 cv
f
4391.99 1418.47 mo
4370.92 1369.47 li
4410.12 1352.62 li
4431.19 1401.62 li
4391.99 1418.47 li
f
4554 1217 mo
4554 1228.05 4545.05 1237 4534 1237 cv
4522.95 1237 4514 1228.05 4514 1217 cv
4514 1205.95 4522.95 1197 4534 1197 cv
4545.05 1197 4554 1205.95 4554 1217 cv
.356863 .196078 .286275 rgb
f
4574.65 1316.72 mo
4575.36 1325.12 4548.41 1336.71 4541.75 1327.96 cv
4539.5 1325 4536.35 1311.45 4533.17 1294.82 cv
4551.09 1220.95 li
4544.78 1213.47 li
4520.62 1218.04 li
4553.67 1210.33 li
4553.67 1210.33 4555.18 1217.62 4557.38 1228.39 cv
4563.27 1257.11 4574.13 1310.61 4574.65 1316.72 cv
1 .623529 .313726 rgb
f
4316.37 1326.15 mo
4403 1296.3 4469.89 1273.68 4474.46 1272.71 cv
4477.61 1272.05 4480.93 1271.8 4484.17 1271.8 cv
4494.54 1271.8 4504.07 1274.4 4504.22 1274.44 cv
4504.22 1274.44 li
4504.22 1274.44 4494.64 1271.8 4484.19 1271.8 cv
4480.94 1271.8 4477.61 1272.05 4474.46 1272.72 cv
4469.89 1273.68 4403.01 1296.3 4316.37 1326.15 cv
4316.37 1326.15 4316.37 1326.15 4316.37 1326.15 cv
.313725 .223529 .337255 rgb
f
4295.19 1333.46 mo
4295.19 1333.46 li
4302.37 1330.98 4309.42 1328.55 4316.37 1326.15 cv
4316.37 1326.15 4316.37 1326.15 4316.37 1326.15 cv
4309.43 1328.55 4302.37 1330.98 4295.19 1333.46 cv
.227451 .156863 .247059 rgb
f
4277.17 1339.69 mo
4277.17 1339.69 li
4283.24 1337.59 4289.25 1335.51 4295.19 1333.46 cv
4295.19 1333.46 li
4289.25 1335.51 4283.24 1337.59 4277.17 1339.69 cv
.67451 .698039 .780392 rgb
f
4232.68 1355.12 mo
4232.68 1355.12 li
4247.73 1349.89 4262.63 1344.72 4277.17 1339.69 cv
4277.17 1339.69 li
4262.63 1344.72 4247.73 1349.89 4232.68 1355.12 cv
.658823 .560784 .631373 rgb
f
4516.17 1233.33 mo
4517.59 1228.44 li
4517.59 1228.44 li
4516.17 1233.33 li
.313725 .223529 .337255 rgb
f
4211.72 1362.42 mo
4218.73 1359.97 4225.72 1357.54 4232.68 1355.12 cv
4232.68 1355.12 li
4225.72 1357.54 4218.73 1359.97 4211.72 1362.42 cv
.67451 .698039 .780392 rgb
f
4194.38 1403.14 mo
4190.33 1391.99 4187.12 1381.55 4184.57 1371.89 cv
4193.63 1368.72 4202.69 1365.56 4211.72 1362.42 cv
4218.73 1359.97 4225.72 1357.54 4232.68 1355.12 cv
4247.73 1349.89 4262.63 1344.72 4277.17 1339.69 cv
4283.24 1337.59 4289.25 1335.51 4295.19 1333.46 cv
4302.37 1330.98 4309.43 1328.55 4316.37 1326.15 cv
4403.01 1296.3 4469.89 1273.68 4474.46 1272.72 cv
4477.61 1272.05 4480.94 1271.8 4484.19 1271.8 cv
4494.64 1271.8 4504.22 1274.44 4504.22 1274.44 cv
4504.22 1274.44 li
4504.22 1274.44 4504.22 1274.44 4504.22 1274.44 cv
4516.17 1233.33 li
4517.59 1228.44 li
4518.55 1229.81 4519.66 1231.04 4520.92 1232.13 cv
4523.21 1338.84 li
4508.09 1290.18 li
4508.09 1290.18 4352.57 1347.89 4194.38 1403.14 cv
.67451 .819608 .917647 rgb
f
3893.73 1498.98 mo
3886.98 1493.3 3888.56 1484.42 3900.09 1476.1 cv
3909.94 1469 4046.86 1420.01 4184.57 1371.89 cv
4184.57 1371.89 li
4187.12 1381.55 4190.33 1391.99 4194.38 1403.14 cv
4072.4 1445.74 3948.82 1486.88 3893.73 1498.98 cv
.67451 .509804 .286274 rgb
f
4520.92 1232.13 mo
4519.66 1231.04 4518.55 1229.81 4517.59 1228.44 cv
4517.59 1228.44 li
4520.62 1218.04 li
4520.92 1232.13 li
.239216 .160784 .262745 rgb
f
3949.31 1588.02 mo
3949.31 1588.02 3949.3 1588.02 3949.3 1588.01 cv
3949.3 1588.02 3949.31 1588.02 3949.31 1588.02 cv
3949.23 1587.97 mo
3949.21 1587.96 3949.19 1587.95 3949.17 1587.94 cv
3949.19 1587.95 3949.21 1587.96 3949.23 1587.97 cv
.67451 .819608 .917647 rgb
f
3946.77 1585.33 mo
3945.97 1583.68 3945.85 1581.53 3946.53 1578.81 cv
3945.86 1581.53 3945.97 1583.68 3946.77 1585.33 cv
.337255 .160784 .345098 rgb
f
3949.17 1587.93 mo
3948.1 1587.26 3947.29 1586.4 3946.77 1585.33 cv
3945.97 1583.68 3945.86 1581.53 3946.53 1578.81 cv
3946.6 1578.53 3946.68 1578.24 3946.77 1577.94 cv
3946.78 1577.91 3946.79 1577.88 3946.8 1577.85 cv
3946.79 1577.88 3946.78 1577.91 3946.77 1577.94 cv
3945.29 1582.93 3946.3 1586.13 3949.17 1587.93 cv
.67451 .819608 .917647 rgb
f
4213.94 1448.39 mo
4213.94 1448.39 li
4223.11 1444.46 4231.17 1441.02 4237.78 1438.2 cv
4231.17 1441.02 4223.11 1444.46 4213.94 1448.39 cv
.164706 .117647 .184314 rgb
f
4257.54 1429.83 mo
4248.21 1421.96 li
4248.21 1421.96 4248.21 1421.96 4248.21 1421.96 cv
4257.54 1429.83 li
4257.54 1429.83 4257.54 1429.83 4257.54 1429.83 cv
.67451 .698039 .780392 rgb
f
4255.56 1413.59 mo
4300.03 1395.68 li
4300.26 1395.6 li
4300.03 1395.69 li
4255.56 1413.59 li
.658823 .560784 .631373 rgb
f
4355.57 1375.15 mo
4365.05 1371.65 li
4365.57 1372.6 4366.1 1373.55 4366.65 1374.51 cv
4355.57 1375.15 li
.227451 .156863 .247059 rgb
f
4366.65 1374.51 mo
4366.1 1373.55 4365.57 1372.6 4365.05 1371.65 cv
4370.93 1369.47 li
4370.93 1369.47 4370.93 1369.47 4370.93 1369.47 cv
4370.92 1369.47 li
4370.94 1369.5 li
4371.02 1369.76 4371.63 1371.54 4372.43 1374.18 cv
4372.43 1374.18 li
4366.65 1374.51 li
.541176 .243137 .27451 rgb
f
4248.21 1421.96 mo
4243.87 1418.29 li
4248.21 1421.96 li
4248.21 1421.96 4248.21 1421.96 4248.21 1421.96 cv
.67451 .698039 .780392 rgb
f
4227.33 1471.8 mo
4222.86 1464.82 4218.38 1457.05 4213.94 1448.39 cv
4223.11 1444.46 4231.17 1441.02 4237.78 1438.2 cv
4250.2 1432.92 4257.54 1429.83 4257.54 1429.83 cv
4257.54 1429.83 li
4257.54 1429.83 4257.54 1429.83 4257.54 1429.83 cv
4248.21 1421.96 li
4243.87 1418.29 li
4255.56 1413.59 li
4300.03 1395.69 li
4300.26 1395.6 li
4355.56 1375.15 li
4355.57 1375.15 li
4366.65 1374.51 li
4372.43 1374.18 li
4375.22 1383.4 4380.42 1403.13 4374.82 1405.54 cv
4367.47 1408.7 4295.37 1436.78 4295.37 1436.78 cv
4271.53 1415.11 li
4284.17 1444.51 li
4284.17 1444.51 4261.46 1455.63 4227.33 1471.8 cv
.67451 .819608 .917647 rgb
f
3951.79 1589.07 mo
3950.86 1588.8 3950.03 1588.45 3949.31 1588.02 cv
3949.31 1588.02 3949.3 1588.02 3949.3 1588.01 cv
3949.28 1588 3949.25 1587.99 3949.23 1587.97 cv
3949.21 1587.96 3949.19 1587.95 3949.17 1587.94 cv
3949.17 1587.94 3949.17 1587.93 3949.17 1587.93 cv
3946.3 1586.13 3945.29 1582.93 3946.77 1577.94 cv
3946.78 1577.91 3946.79 1577.88 3946.8 1577.85 cv
3952.01 1562.4 4129.63 1484.59 4213.94 1448.39 cv
4213.94 1448.39 4213.94 1448.39 4213.94 1448.39 cv
4213.94 1448.39 li
4218.38 1457.05 4222.86 1464.82 4227.33 1471.8 cv
4150.35 1508.3 4015.28 1570.56 3951.79 1589.07 cv
.67451 .509804 .286274 rgb
f
4370.94 1369.5 mo
4370.92 1369.47 li
4370.93 1369.47 li
4370.93 1369.48 4370.93 1369.49 4370.94 1369.5 cv
f
4555 1205 mo
4555 1217.15 4545.15 1227 4533 1227 cv
4520.85 1227 4511 1217.15 4511 1205 cv
4511 1192.85 4520.85 1183 4533 1183 cv
4545.15 1183 4555 1192.85 4555 1205 cv
cp
.937255 .384314 .384314 rgb
f
4401 1213 mo
4401 1224.05 4392.05 1233 4381 1233 cv
4369.95 1233 4361 1224.05 4361 1213 cv
4361 1201.95 4369.95 1193 4381 1193 cv
4392.05 1193 4401 1201.95 4401 1213 cv
cp
.356863 .196078 .286275 rgb
f
4517 1197 mo
4544.78 1213.46 li
4544.78 1213.46 4533 1187 4517 1197 cv
cp
.662745 .282353 .490196 rgb
f
4523.21 1338.84 mo
4523.21 1338.84 4510.33 1205.67 4512.33 1208.33 cv
4514.33 1211 4521.67 1223 4521.67 1223 cv
4536.33 1336.33 li
4523.21 1338.84 li
cp
1 1 1 rgb
f
4570.33 1293 mo
4570.33 1293 4548.33 1202.33 4555 1205 cv
4561.67 1207.67 4597 1277 4597 1277 cv
4570.33 1293 li
cp
f
4573 1327.67 mo
4573 1336.5 4565.84 1343.67 4557 1343.67 cv
4548.16 1343.67 4541 1336.5 4541 1327.67 cv
4541 1318.83 4548.16 1311.67 4557 1311.67 cv
4565.84 1311.67 4573 1318.83 4573 1327.67 cv
cp
0 .54902 .6 rgb
f
4289 1475.67 mo
4275.67 1494.33 4243.67 1483.67 4243.67 1483.67 cv
4243.67 1483.67 4230.33 1513 4214.33 1518.33 cv
4198.33 1523.67 4171.67 1526.33 4171.67 1526.33 cv
4171.67 1526.33 4166.33 1534.33 4155.67 1534.33 cv
4145 1534.33 4081 1422.33 4067.67 1414.33 cv
4067.39 1414.16 4066.98 1413.97 4066.44 1413.77 cv
4041.64 1404.33 3750.33 1358.33 3750.33 1358.33 cv
3745 1199.67 3846.33 1198.33 3846.33 1198.33 cv
3846.33 1198.33 4153 1310.33 4169 1318.33 cv
4185 1326.33 4302.33 1457 4289 1475.67 cv
cp
1 .85098 .85098 rgb
f
4393 1211 mo
4393 1222.05 4384.05 1231 4373 1231 cv
4361.95 1231 4353 1222.05 4353 1211 cv
4353 1199.95 4361.95 1191 4373 1191 cv
4384.05 1191 4393 1199.95 4393 1211 cv
cp
.662745 .282353 .490196 rgb
f
4357 1203 mo
4389 1220 li
4389 1220 4375 1194 4357 1203 cv
cp
.517647 .211765 .392157 rgb
f
3952.9 507.877 mo
3952.28 508.13 3951.76 508.347 3951.16 508.613 cv
3947.32 510.161 3943.22 511.487 3939.53 512.335 cv
3935.69 513.212 3932.27 513.569 3930.05 513.108 cv
3929.16 512.938 3928.02 512.518 3926.78 511.853 cv
3925.39 511.217 3923.91 510.278 3922.22 509.297 cv
3921.21 508.688 3920.23 507.947 3919.15 507.263 cv
3917.84 506.345 3916.49 505.357 3915.14 504.324 cv
3911.67 501.672 3908.15 498.729 3905.06 495.939 cv
3899.62 490.94 3895.53 486.552 3895.23 484.946 cv
3894.55 480.879 3893.06 466.247 3921.43 463.818 cv
3949.72 461.367 3954.57 468.028 3954.57 468.028 cv
3954.57 468.028 3965.89 493.305 3965.76 498.708 cv
3965.74 501.206 3959.99 504.813 3952.9 507.877 cv
cp
1 1 1 rgb
f
3959.78 475.997 mo
3959.78 475.997 3950.26 465.775 3936.02 463.875 cv
3921.79 461.975 3896.92 471.216 3896.92 471.216 cv
3896.92 471.216 3930.59 451.231 3941.77 454.948 cv
3952.94 458.666 3959.78 475.997 3959.78 475.997 cv
cp
.427451 .184314 .113725 rgb
f
3943.22 503.116 mo
3942.35 506.519 3941.08 509.63 3939.53 512.335 cv
3935.69 513.212 3932.27 513.569 3930.05 513.108 cv
3929.16 512.938 3928.02 512.518 3926.78 511.853 cv
3925.39 511.217 3923.91 510.278 3922.22 509.297 cv
3921.21 508.688 3920.23 507.947 3919.15 507.263 cv
3917.84 506.345 3916.49 505.357 3915.14 504.324 cv
3915.23 501.739 3915.62 499.01 3916.33 496.254 cv
3919.55 483.621 3928.15 474.896 3935.58 476.792 cv
3943.01 478.688 3946.44 490.482 3943.22 503.116 cv
cp
.129412 .054902 .0431373 rgb
f
4063.31 497.713 mo
4062.84 498.346 4060.27 507.545 4058.35 513.313 cv
4057.56 515.657 4053.28 527.834 4047.66 531.285 cv
4047.18 531.568 4046.77 531.814 4046.29 532.107 cv
4045.08 532.807 4043.84 533.478 4042.61 534.093 cv
4040.75 535.029 4038.91 535.842 4037.18 536.475 cv
4034.19 537.572 4031.56 538.12 4029.89 537.799 cv
4029.22 537.695 4028.37 537.345 4027.47 536.768 cv
4026.44 536.22 4025.36 535.388 4024.13 534.518 cv
4023.39 533.979 4022.69 533.308 4021.91 532.703 cv
4021.34 532.202 4020.76 531.682 4020.17 531.134 cv
4019.79 530.784 4019.4 530.415 4019.02 530.046 cv
4016.52 527.645 4014.01 524.96 4011.81 522.398 cv
4007.96 517.803 4005.09 513.729 4004.96 512.168 cv
4004.68 508.198 4004.42 493.884 4026.26 489.791 cv
4047.14 485.848 4062.13 496.815 4063.31 497.713 cv
cp
1 1 1 rgb
f
4063.39 497.77 mo
4063.31 497.713 li
4063.36 497.656 4063.38 497.666 4063.39 497.77 cv
cp
f
4069.87 503.31 mo
4069.87 503.31 4060.35 493.088 4046.11 491.187 cv
4031.88 489.287 4007 498.528 4007 498.528 cv
4007 498.528 4040.68 478.543 4051.86 482.26 cv
4063.03 485.978 4069.87 503.31 4069.87 503.31 cv
cp
.427451 .184314 .113725 rgb
f
4043.82 530.131 mo
4043.47 531.502 4043.07 532.826 4042.61 534.093 cv
4040.75 535.029 4038.91 535.842 4037.18 536.475 cv
4034.19 537.572 4031.56 538.12 4029.89 537.799 cv
4029.22 537.695 4028.37 537.345 4027.47 536.768 cv
4026.44 536.22 4025.36 535.388 4024.13 534.518 cv
4023.39 533.979 4022.69 533.308 4021.91 532.703 cv
4021.34 532.202 4020.76 531.682 4020.17 531.134 cv
4020.39 528.959 4020.79 526.7 4021.37 524.412 cv
4024.59 511.771 4032.21 502.799 4038.41 504.378 cv
4044.61 505.957 4047.05 517.5 4043.82 530.131 cv
cp
.129412 .054902 .0431373 rgb
f
3911.02 487.054 mo
3910.47 489.191 3913.35 491.769 3917.43 492.813 cv
3921.52 493.855 3925.28 492.969 3925.82 490.832 cv
3926.37 488.694 3923.5 486.116 3919.41 485.073 cv
3915.32 484.03 3911.56 484.917 3911.02 487.054 cv
cp
1 1 1 rgb
f
4016.49 513.946 mo
4015.94 516.083 4018.81 518.661 4022.9 519.704 cv
4026.99 520.748 4030.75 519.861 4031.29 517.724 cv
4031.84 515.586 4028.96 513.008 4024.88 511.965 cv
4020.79 510.922 4017.03 511.809 4016.49 513.946 cv
cp
f
4026.83 579.917 mo
4024.31 584.957 4001.62 598.192 3990.9 597.559 cv
3980.19 596.935 3960.65 579.284 3957.5 569.196 cv
3956.68 566.568 3958.9 560.47 3962.63 552.888 cv
3973.21 531.398 3995.95 497.978 3995.95 497.978 cv
3995.95 497.978 3997.84 491.048 4006.66 492.938 cv
4011.06 493.875 4025.42 557.199 4026.94 575.351 cv
4027.14 577.733 4027.12 579.331 4026.83 579.917 cv
cp
.976471 .686275 .686275 rgb
f
3913.06 586.006 mo
3913.06 586.006 3916.85 616.259 3930.08 621.932 cv
3943.32 627.604 3975.46 623.823 3967.9 618.15 cv
3960.33 612.478 3943.32 612.478 3935.75 606.805 cv
3928.19 601.133 3916.85 576.552 3913.06 586.006 cv
cp
.937255 .580392 .572549 rgb
f
4400.4 1367.37 mo
4400.4 1367.37 4438.01 1406.31 4436.04 1426.95 cv
4434.07 1447.6 4421.46 1439.3 4410.08 1436.98 cv
4398.71 1434.65 4354.11 1376.92 4358.8 1361.94 cv
4363.5 1346.96 4374.56 1347.79 4382.95 1350.73 cv
4391.34 1353.67 4400.4 1367.37 4400.4 1367.37 cv
cp
1 .85098 .85098 rgb
f
4366.17 1377.39 mo
4366.17 1377.39 4402.47 1427.13 4399.73 1451.29 cv
4396.99 1475.45 4384.64 1464.4 4373.31 1460.51 cv
4361.99 1456.63 4319.38 1384.02 4324.64 1366.81 cv
4329.91 1349.61 4340.98 1351.7 4349.29 1356.01 cv
4357.6 1360.32 4366.17 1377.39 4366.17 1377.39 cv
cp
f
4326.78 1390.19 mo
4326.78 1390.19 4363.07 1439.92 4360.33 1464.09 cv
4357.59 1488.25 4345.25 1477.19 4333.92 1473.31 cv
4322.6 1469.43 4279.99 1396.81 4285.25 1379.61 cv
4290.51 1362.4 4301.59 1364.49 4309.9 1368.8 cv
4318.21 1373.11 4326.78 1390.19 4326.78 1390.19 cv
cp
f
4302.01 1415.97 mo
4302.01 1415.97 4333.15 1458.64 4330.8 1479.37 cv
4328.45 1500.1 4317.86 1490.62 4308.14 1487.28 cv
4298.42 1483.95 4261.86 1421.65 4266.38 1406.89 cv
4270.89 1392.13 4280.4 1393.92 4287.52 1397.62 cv
4294.65 1401.32 4302.01 1415.97 4302.01 1415.97 cv
cp
f
3177 1523.67 mo
3177 1524.28 3177 1524.89 3176.99 1525.5 cv
3176.01 1599.77 3115.5 1659.67 3041 1659.67 cv
2991.01 1659.67 2947.31 1632.69 2923.68 1592.5 cv
2911.81 1572.31 2905 1548.78 2905 1523.67 cv
2905 1448.56 2965.89 1387.67 3041 1387.67 cv
3116.11 1387.67 3177 1448.56 3177 1523.67 cv
.890196 .968627 .988235 rgb
f
3081 1237 mo
3081 1254.17 3073.45 1269.57 3061.5 1280.08 cv
3051.4 1288.95 3038.16 1294.33 3023.67 1294.33 cv
2992 1294.33 2966.33 1268.66 2966.33 1237 cv
2966.33 1233.68 2966.61 1230.43 2967.16 1227.26 cv
2971.78 1200.24 2995.32 1179.67 3023.67 1179.67 cv
3055.33 1179.67 3081 1205.34 3081 1237 cv
f
3059.1 1523.67 mo
3059.1 1533.66 3051 1541.77 3041 1541.77 cv
3031 1541.77 3022.9 1533.66 3022.9 1523.67 cv
3022.9 1513.67 3031 1505.57 3041 1505.57 cv
3051 1505.57 3059.1 1513.67 3059.1 1523.67 cv
0 .54902 .6 rgb
f
3034.28 1236.62 mo
3034.28 1242.48 3029.53 1247.23 3023.67 1247.23 cv
3017.8 1247.23 3013.05 1242.48 3013.05 1236.62 cv
3013.05 1230.75 3017.8 1226 3023.67 1226 cv
3029.53 1226 3034.28 1230.75 3034.28 1236.62 cv
f
3041 1523.67 mo
3041 1523.67 3019.62 1479.23 3018.78 1464.11 cv
3018.08 1451.65 3026.25 1395.95 3026.25 1395.95 cv
3038.78 1464.11 li
3041 1523.67 li
f
3023.67 1236.62 mo
3023.67 1236.62 3045 1227.44 3049 1226 cv
3053 1224.55 3077.44 1226 3077.44 1226 cv
3077.44 1226 3060.55 1229.42 3050.56 1230.99 cv
3040.56 1232.56 3023.67 1236.62 3023.67 1236.62 cv
f
2865 721 mo
2865 721 2843.67 1393 2851.67 1417 cv
2859.67 1441 2894.33 833 2865 721 cv
cp
1 .792157 .792157 rgb
f
4427.67 1982.33 mo
4491.67 2025 li
4558.33 1990.33 li
4499.67 2038.33 li
4558.33 2097 li
4486.33 2046.33 li
4411.67 2089 li
4470.33 2030.33 li
4427.67 1982.33 li
cp
.0117647 .403922 .466667 rgb
f
4339.67 611.667 mo
4286.33 665 li
4233 627.667 li
4273 670.333 li
4243.67 723.667 li
4291.67 686.333 li
4369 689 li
4302.33 670.333 li
4339.67 611.667 li
cp
f
4294.33 614.33 mo
4322.32 614.33 4345 637.02 4345 665 cv
4345 692.98 4322.32 715.67 4294.33 715.67 cv
4266.35 715.67 4243.67 692.98 4243.67 665 cv
4243.67 637.02 4266.35 614.33 4294.33 614.33 cv
cp
4377.41 593.93 mo
4357.36 570.51 4327.58 555.67 4294.33 555.67 cv
4233.95 555.67 4185 604.62 4185 665 cv
4185 667.88 4185.11 670.74 4185.33 673.56 cv
4189.7 729.94 4236.83 774.33 4294.33 774.33 cv
4354.72 774.33 4403.67 725.38 4403.67 665 cv
4403.67 637.87 4393.78 613.04 4377.41 593.93 cv
cp
0 .54902 .6 rgb
f
3714.33 663 mo
3689 781 li
3709 853 li
3709 853 3729.67 729 3714.33 663 cv
cp
.498039 .196078 .376471 rgb
f
4486.33 1987.67 mo
4514.32 1987.67 4537 2010.35 4537 2038.33 cv
4537 2066.32 4514.32 2089 4486.33 2089 cv
4458.35 2089 4435.67 2066.32 4435.67 2038.33 cv
4435.67 2010.35 4458.35 1987.67 4486.33 1987.67 cv
cp
4572.64 1968.54 mo
4552.64 1942.85 4521.41 1926.33 4486.33 1926.33 cv
4454.66 1926.33 4426.13 1939.8 4406.18 1961.32 cv
4388.07 1980.83 4377 2006.96 4377 2035.67 cv
4377 2096.05 4425.95 2145 4486.33 2145 cv
4546.72 2145 4595.67 2096.05 4595.67 2035.67 cv
4595.67 2010.37 4587.07 1987.07 4572.64 1968.54 cv
cp
0 .54902 .6 rgb
f
3976.41 430.011 mo
3976.41 437.843 3962.44 444.193 3945.21 444.193 cv
3927.98 444.193 3914.01 437.843 3914.01 430.011 cv
3914.01 422.179 3927.98 415.83 3945.21 415.83 cv
3962.44 415.83 3976.41 422.179 3976.41 430.011 cv
cp
.807843 .384314 .254902 rgb
f
4081.48 448.806 mo
4081.46 448.892 li
4079.2 457.523 4076.74 466.504 4074.39 474.182 cv
4069.6 472.962 4064.34 470.825 4059.13 467.819 cv
4044.21 459.206 4035.29 446.717 4039.2 439.938 cv
4043.12 433.16 4058.39 434.644 4073.31 443.257 cv
4076.29 444.978 4079.03 446.85 4081.48 448.806 cv
cp
f
3795.12 502.301 mo
3794.09 501.485 3793.41 500.239 3793.35 498.823 cv
3792.76 483.77 3789.5 465.453 3785.28 462.108 cv
3779.51 457.542 3765.61 457.752 3760.75 458.218 cv
3758.18 458.462 3755.9 456.584 3755.65 454.021 cv
3755.41 451.458 3757.28 449.179 3759.84 448.929 cv
3762.02 448.719 3781.34 447.087 3791.07 454.792 cv
3800.8 462.49 3802.45 492.519 3802.68 498.458 cv
3802.78 501.034 3800.77 503.202 3798.2 503.304 cv
3797.04 503.349 3795.96 502.968 3795.12 502.301 cv
cp
.776471 .482353 .443137 rgb
f
3763.72 489.344 mo
3761.7 487.745 3761.36 484.81 3762.96 482.79 cv
3763.5 482.105 3776.42 466.074 3794.27 468.703 cv
3796.83 469.077 3798.59 471.451 3798.21 473.999 cv
3797.84 476.548 3795.46 478.31 3792.92 477.936 cv
3780.33 476.082 3770.37 488.457 3770.27 488.582 cv
3768.67 490.602 3765.74 490.943 3763.72 489.344 cv
cp
f
4403.67 665 mo
4403.67 725.38 4354.72 774.33 4294.33 774.33 cv
4236.83 774.33 4189.7 729.94 4185.33 673.56 cv
4201.93 706.41 4232.45 742.72 4287 747 cv
4389 755 4373 615 4373 615 cv
4387 663 li
4387 663 4392.93 625.08 4377.41 593.93 cv
4393.78 613.04 4403.67 637.87 4403.67 665 cv
cp
.00392157 .47451 .498039 rgb
f
4595.67 2035.67 mo
4595.67 2096.05 4546.72 2145 4486.33 2145 cv
4425.95 2145 4377 2096.05 4377 2035.67 cv
4377 2006.96 4388.07 1980.83 4406.18 1961.32 cv
4399.36 1974.84 4393.74 1989.74 4393 2003 cv
4391 2039 4397 2063 4397 2063 cv
4409 2013 li
4409 2013 4409 2127 4501 2113 cv
4581.74 2100.71 4580.84 2005.24 4572.64 1968.54 cv
4587.07 1987.07 4595.67 2010.37 4595.67 2035.67 cv
cp
f
4453 1939 mo
4453 1939 4427 1949 4419 1959 cv
4411 1969 4415 1973 4443 1961 cv
4471 1949 4479 1927 4453 1939 cv
cp
.0627451 .737255 .768627 rgb
f
4207.29 613.518 mo
4207.29 613.518 4193 637.433 4192.88 650.239 cv
4192.76 663.044 4198.38 663.723 4213 637 cv
4227.62 610.277 4220.34 588.029 4207.29 613.518 cv
cp
f
3041 1659.67 mo
2991.01 1659.67 2947.31 1632.69 2923.68 1592.5 cv
2924.47 1532.42 2964.22 1481.75 3018.81 1464.57 cv
3019.55 1473.87 3027.34 1493.18 3033.48 1507.2 cv
3027.24 1510.05 3022.9 1516.35 3022.9 1523.67 cv
3022.9 1533.66 3031 1541.77 3041 1541.77 cv
3051 1541.77 3059.1 1533.66 3059.1 1523.67 cv
3059.1 1513.67 3051 1505.57 3041 1505.57 cv
3040.77 1505.57 3040.55 1505.57 3040.33 1505.58 cv
3038.78 1464.11 li
3038.03 1460.04 li
3045.08 1458.92 3052.3 1458.33 3059.67 1458.33 cv
3109.66 1458.33 3153.36 1485.31 3176.99 1525.5 cv
3176.01 1599.77 3115.5 1659.67 3041 1659.67 cv
.6 .792157 .905882 rgb
f
3041 1541.77 mo
3031 1541.77 3022.9 1533.66 3022.9 1523.67 cv
3022.9 1516.35 3027.24 1510.05 3033.48 1507.2 cv
3037.61 1516.63 3041 1523.67 3041 1523.67 cv
3041 1523.67 li
3041 1523.67 li
3040.33 1505.58 li
3040.55 1505.57 3040.77 1505.57 3041 1505.57 cv
3051 1505.57 3059.1 1513.67 3059.1 1523.67 cv
3059.1 1533.66 3051 1541.77 3041 1541.77 cv
0 .45098 .54902 rgb
f
3041 1523.67 mo
3041 1523.67 3037.61 1516.63 3033.48 1507.2 cv
3027.34 1493.18 3019.55 1473.87 3018.81 1464.57 cv
3025.03 1462.62 3031.46 1461.09 3038.03 1460.04 cv
3038.78 1464.11 li
3040.33 1505.58 li
3041 1523.67 li
f
3023.67 1294.33 mo
2992 1294.33 2966.33 1268.66 2966.33 1237 cv
2966.33 1233.68 2966.61 1230.43 2967.16 1227.26 cv
2977.26 1218.39 2990.5 1213 3005 1213 cv
3019.95 1213 3033.56 1218.72 3043.77 1228.1 cv
3040.72 1229.36 3036.91 1230.97 3033.43 1232.44 cv
3031.81 1228.65 3028.05 1226 3023.67 1226 cv
3017.8 1226 3013.05 1230.75 3013.05 1236.62 cv
3013.05 1242.48 3017.8 1247.23 3023.67 1247.23 cv
3029.53 1247.23 3034.28 1242.48 3034.28 1236.62 cv
3034.28 1235.8 3034.19 1235.01 3034.02 1234.24 cv
3038.2 1233.32 3043.02 1232.31 3047.22 1231.55 cv
3056.6 1241.76 3062.33 1255.38 3062.33 1270.33 cv
3062.33 1273.65 3062.05 1276.91 3061.5 1280.08 cv
3061.5 1280.08 li
3051.4 1288.95 3038.16 1294.33 3023.67 1294.33 cv
.6 .792157 .905882 rgb
f
3023.67 1247.23 mo
3017.8 1247.23 3013.05 1242.48 3013.05 1236.62 cv
3013.05 1230.75 3017.8 1226 3023.67 1226 cv
3028.05 1226 3031.81 1228.65 3033.43 1232.44 cv
3028.17 1234.68 3023.67 1236.62 3023.67 1236.62 cv
3023.67 1236.62 3028.23 1235.52 3034.02 1234.24 cv
3034.19 1235.01 3034.28 1235.8 3034.28 1236.62 cv
3034.28 1242.48 3029.53 1247.23 3023.67 1247.23 cv
0 .45098 .54902 rgb
f
3023.67 1236.62 mo
3023.67 1236.62 3028.17 1234.68 3033.43 1232.44 cv
3036.91 1230.97 3040.72 1229.36 3043.77 1228.1 cv
3044.97 1229.2 3046.12 1230.35 3047.22 1231.55 cv
3043.02 1232.31 3038.2 1233.32 3034.02 1234.24 cv
3028.23 1235.52 3023.67 1236.62 3023.67 1236.62 cv
f
4026.83 579.917 mo
4024.31 584.957 4001.62 598.192 3990.9 597.559 cv
3980.19 596.935 3960.65 579.284 3957.5 569.196 cv
3956.68 566.568 3958.9 560.47 3962.63 552.888 cv
3971.85 563.429 3989.22 581.506 4002.46 584.749 cv
4016.4 588.152 4023.94 579.917 4026.94 575.351 cv
4027.14 577.733 4027.12 579.331 4026.83 579.917 cv
cp
.937255 .580392 .572549 rgb
f
3803.39 316.561 mo
3803.39 316.561 3788.27 312.779 3769.36 333.579 cv
3750.45 354.377 3751.4 405.43 3751.4 405.43 cv
3751.4 405.43 3769.99 376.752 3796.46 388.098 cv
3822.93 399.443 3830.81 426.229 3830.81 426.229 cv
3830.81 426.229 3879.03 399.758 3878.08 390.304 cv
3877.14 380.85 3823.25 323.179 3823.25 323.179 cv
3856.34 385.577 li
3803.39 316.561 li
cp
.74902 .305882 .203922 rgb
f
3815.69 302.379 mo
3815.69 302.379 3822.3 259.835 3884.7 258.89 cv
3947.1 257.945 3976.41 272.126 3976.41 272.126 cv
3912.12 268.344 li
3912.12 268.344 3999.1 274.962 4040.7 308.052 cv
4082.29 341.142 4089.86 377.068 4084.18 381.795 cv
4078.51 386.522 3918.74 377.068 3915.9 374.231 cv
3913.06 371.395 3852.56 334.524 3852.56 334.524 cv
3906.14 345.687 li
3815.69 302.379 li
cp
f
3948.68 251.96 mo
3948.68 251.96 4017.06 263.617 4062.44 299.543 cv
4107.82 335.469 4132.4 336.415 4128.62 338.306 cv
4124.84 340.196 4072.84 324.124 4072.84 324.124 cv
4072.84 324.124 4042.91 278.12 3948.68 251.96 cv
cp
.807843 .384314 .254902 rgb
f
3916.85 587.896 mo
3916.85 587.896 3922.52 575.606 3918.74 576.552 cv
3914.95 577.497 3904.55 586.951 3904.55 589.788 cv
3904.55 592.624 3916.85 587.896 3916.85 587.896 cv
cp
.937255 .580392 .572549 rgb
f
4141 1325 mo
4129.19 1329.54 4077 1391.67 4078.33 1403.67 cv
4079.67 1415.67 4141 1513 4146.33 1515.67 cv
4151.67 1518.33 4167.67 1523.67 4173 1518.33 cv
4178.33 1513 4190.33 1514.33 4197 1511.67 cv
4203.67 1509 4205 1494.33 4205 1494.33 cv
4205 1494.33 4214.33 1494.33 4221 1490.33 cv
4227.67 1486.33 4231.67 1474.33 4231.67 1474.33 cv
4231.67 1474.33 4262.33 1450.33 4262.33 1439.67 cv
4262.33 1429 4175.67 1311.67 4141 1325 cv
cp
.976471 .686275 .686275 rgb
f
4066.44 1413.77 mo
4041.64 1404.33 3750.33 1358.33 3750.33 1358.33 cv
3745 1199.67 3846.33 1198.33 3846.33 1198.33 cv
3846.33 1198.33 3777 1222.33 3774.33 1305 cv
3772.38 1365.69 4055.67 1397 4065 1402.33 cv
4069.7 1405.02 4068.65 1409.75 4066.44 1413.77 cv
cp
f
3613 665 mo
3613 665 3658.33 645 3670.33 654.333 cv
3682.33 663.667 3729 915.667 3731.67 930.333 cv
3734.33 945 3751.67 1002.33 3751.67 1014.33 cv
3751.67 1026.33 3750.33 1070.33 3750.33 1070.33 cv
3634.33 861 li
3613 665 li
cp
.890196 .968627 .988235 rgb
f
3757 693 mo
3757 693 3787.47 735.33 3845 743 cv
3875 747 3903 733 3903 733 cv
3903 733 3889 763 3837 753 cv
3785 743 3757 693 3757 693 cv
cp
.67451 .854902 .898039 rgb
f
3846.33 1198.33 mo
3846.33 1198.33 3809 1194.33 3777 1253 cv
3745 1311.67 3750.33 1358.33 3750.33 1358.33 cv
3750.33 1358.33 3703.67 1366.33 3695.67 1361 cv
3687.67 1355.67 3679.67 1335.67 3679.67 1335.67 cv
3679.67 1335.67 3655.67 1325 3651.67 1317 cv
3647.67 1309 3646.33 1287.67 3646.33 1287.67 cv
3646.33 1287.67 3602.33 1263.67 3562.33 1165 cv
3537.25 1103.13 3517.94 1015.58 3507.68 950.34 cv
3507.25 945.66 3507 943 3507 943 cv
3507 943 3585.93 1169.36 3617 1135 cv
3730 1010 3699 903 3705 913 cv
3708.99 919.65 3724.5 958.19 3734.42 987.06 cv
3739.42 1001.58 3743 1013.65 3743 1018 cv
3743 1020.12 3743.08 1024.31 3743.19 1029.86 cv
3743.74 1058.35 3745.02 1122.65 3740 1126 cv
3734 1130 3684 1180 3672 1196 cv
3660 1212 3646 1271 3646 1271 cv
3646 1271 3658 1289 3667 1290 cv
3676 1291 3706 1234 3711 1224 cv
3716 1214 3771 1172 3779 1167 cv
3786.94 1162.04 3814.56 1143.11 3814.99 1143.01 cv
3814.1 1143.86 3756.92 1198.08 3747 1208 cv
3737 1218 3701 1294 3703 1306 cv
3705 1318 3728 1328 3736 1324 cv
3744 1320 3742 1267 3801 1212 cv
3824.81 1189.8 3846.33 1198.33 3846.33 1198.33 cv
cp
f
3973 721.667 mo
3973 721.667 3985 751 3971 839 cv
3957 927 3905 1038.33 3905 1038.33 cv
3905 1038.33 3973 812.333 3973 721.667 cv
cp
.498039 .196078 .376471 rgb
f
4141 2281 mo
4128.02 2293.98 4023 2307 3946 2292 cv
3869 2277 3861 2268 3861 2257 cv
3861 2246 3867 2240 3867 2240 cv
3867 2240 3866.87 2238.59 3866.65 2236.15 cv
3885.39 2245.24 3935.91 2260.55 4021 2257 cv
4082.01 2254.46 4118.79 2247.07 4137.49 2242.02 cv
4140.63 2252.38 4157.38 2264.62 4141 2281 cv
cp
f
3731.67 1791.67 mo
3730.61 1804.29 3708.84 1857.53 3691.84 1915.43 cv
3676.74 1923.88 3651.18 1937.18 3647 1933 cv
3641 1927 3619 1797 3627 1791 cv
3635 1785 3691 1751 3709 1745 cv
3715.34 1742.89 3722.66 1749.94 3729.5 1759.98 cv
3731.05 1777.46 3731.89 1789.03 3731.67 1791.67 cv
cp
f
2379.67 2395.67 mo
2355.67 2403.67 1249 2411.67 1235.67 2390.33 cv
1222.33 2369 1243.67 1294.33 1243.67 1294.33 cv
1243.56 1294.29 li
1242.6 1293.92 1235.49 1290.76 1233 1278.33 cv
1230.33 1265 1230.33 1094.33 1230.33 1094.33 cv
1337 1078.33 2347.67 1075.67 2353 1083.67 cv
2358.33 1091.67 2366.33 1246.33 2363.67 1257 cv
2361 1267.67 2358.33 1278.33 2358.33 1278.33 cv
2358.33 1278.33 2403.67 2387.67 2379.67 2395.67 cv
.952941 .992157 1 rgb
f
1230.61 1173.82 mo
1230.61 1173.82 li
1230.61 1173.82 li
1230.4 1142.71 1230.35 1113.59 1230.34 1100.95 cv
1230.35 1113.59 1230.4 1142.71 1230.61 1173.82 cv
2360.19 1150.58 mo
2360.19 1150.54 2360.18 1150.49 2360.18 1150.45 cv
2360.18 1150.49 2360.19 1150.53 2360.19 1150.58 cv
2360.16 1150.12 mo
2358.01 1117.22 2355.37 1088.41 2353.16 1083.95 cv
2355.37 1088.41 2358.02 1117.22 2360.16 1150.12 cv
1230.33 1100.91 mo
1230.33 1099.88 1230.33 1098.97 1230.33 1098.17 cv
1230.33 1098.97 1230.33 1099.88 1230.33 1100.91 cv
1230.33 1098.07 mo
1230.33 1098.05 1230.33 1098.03 1230.33 1098.02 cv
1230.33 1098.03 1230.33 1098.06 1230.33 1098.07 cv
1230.33 1097.93 mo
1230.33 1097.91 1230.33 1097.89 1230.33 1097.87 cv
1230.33 1097.89 1230.33 1097.9 1230.33 1097.93 cv
1230.33 1097.77 mo
1230.33 1097.5 1230.33 1097.25 1230.33 1097.01 cv
1230.33 1097.25 1230.33 1097.5 1230.33 1097.77 cv
1230.33 1096.81 mo
1230.33 1096.74 1230.33 1096.67 1230.33 1096.61 cv
1230.33 1096.67 1230.33 1096.74 1230.33 1096.81 cv
1230.33 1096.41 mo
1230.33 1096.33 1230.33 1096.27 1230.33 1096.2 cv
1230.33 1096.27 1230.33 1096.33 1230.33 1096.41 cv
1230.33 1096 mo
1230.33 1095.82 1230.33 1095.65 1230.33 1095.49 cv
1230.33 1095.65 1230.33 1095.82 1230.33 1096 cv
1230.33 1095.45 mo
1230.33 1095.41 1230.33 1095.37 1230.33 1095.33 cv
1230.33 1095.37 1230.33 1095.41 1230.33 1095.45 cv
1230.33 1095.26 mo
1230.33 1095.26 1230.33 1095.25 1230.33 1095.24 cv
1230.33 1095.25 1230.33 1095.26 1230.33 1095.26 cv
1230.33 1095.2 mo
1230.33 1095.18 1230.33 1095.17 1230.33 1095.16 cv
1230.33 1095.17 1230.33 1095.19 1230.33 1095.2 cv
1230.33 1095.13 mo
1230.33 1095.11 1230.33 1095.09 1230.33 1095.08 cv
1230.33 1095.09 1230.33 1095.11 1230.33 1095.13 cv
1230.33 1095.05 mo
1230.33 1095.01 1230.33 1094.97 1230.33 1094.93 cv
1230.33 1094.97 1230.33 1095.01 1230.33 1095.05 cv
1230.33 1094.87 mo
1230.33 1094.85 1230.33 1094.82 1230.33 1094.8 cv
1230.33 1094.82 1230.33 1094.85 1230.33 1094.87 cv
1230.33 1094.76 mo
1230.33 1094.74 1230.33 1094.72 1230.33 1094.7 cv
1230.33 1094.72 1230.33 1094.74 1230.33 1094.76 cv
2353.16 1083.94 mo
2353.14 1083.92 2353.13 1083.89 2353.11 1083.86 cv
2353.13 1083.89 2353.14 1083.92 2353.16 1083.94 cv
2353.11 1083.85 mo
2353.1 1083.84 2353.1 1083.84 2353.1 1083.83 cv
2353.1 1083.84 2353.1 1083.84 2353.11 1083.85 cv
2353.09 1083.82 mo
2353.09 1083.81 2353.08 1083.81 2353.08 1083.8 cv
2353.08 1083.81 2353.09 1083.81 2353.09 1083.82 cv
2353.07 1083.78 mo
2353.06 1083.77 2353.06 1083.77 2353.06 1083.76 cv
2353.06 1083.77 2353.06 1083.77 2353.07 1083.78 cv
2353.04 1083.74 mo
2353.04 1083.73 2353.04 1083.73 2353.04 1083.73 cv
2353.04 1083.73 2353.04 1083.74 2353.04 1083.74 cv
2353.02 1083.71 mo
2353.02 1083.71 2353.02 1083.7 2353.02 1083.7 cv
2353.02 1083.7 2353.02 1083.7 2353.02 1083.71 cv
.490196 .721569 .92549 rgb
f
1842.06 1235.42 mo
1853.89 1221.21 1861 1202.93 1861 1183 cv
1861 1137.71 1824.29 1101 1779 1101 cv
1733.71 1101 1697 1137.71 1697 1183 cv
1697 1198.32 1701.2 1212.65 1708.51 1224.92 cv
1555 1218 li
1555 1218 li
1555 1146 li
1555 1126.67 1539.33 1111 1520 1111 cv
1330 1111 li
1310.67 1111 1295 1126.67 1295 1146 cv
1295 1174.33 li
1249 1174.33 li
1230.61 1173.82 li
1230.4 1142.71 1230.35 1113.59 1230.34 1100.95 cv
1230.34 1100.94 1230.34 1100.92 1230.33 1100.91 cv
1230.33 1099.88 1230.33 1098.97 1230.33 1098.17 cv
1230.33 1098.14 1230.33 1098.1 1230.33 1098.07 cv
1230.33 1098.06 1230.33 1098.03 1230.33 1098.02 cv
1230.33 1097.99 1230.33 1097.96 1230.33 1097.93 cv
1230.33 1097.9 1230.33 1097.89 1230.33 1097.87 cv
1230.33 1097.83 1230.33 1097.8 1230.33 1097.77 cv
1230.33 1097.5 1230.33 1097.25 1230.33 1097.01 cv
1230.33 1096.94 1230.33 1096.87 1230.33 1096.81 cv
1230.33 1096.74 1230.33 1096.67 1230.33 1096.61 cv
1230.33 1096.54 1230.33 1096.47 1230.33 1096.41 cv
1230.33 1096.33 1230.33 1096.27 1230.33 1096.2 cv
1230.33 1096.13 1230.33 1096.07 1230.33 1096 cv
1230.33 1095.82 1230.33 1095.65 1230.33 1095.49 cv
1230.33 1095.48 1230.33 1095.47 1230.33 1095.45 cv
1230.33 1095.41 1230.33 1095.37 1230.33 1095.33 cv
1230.33 1095.31 1230.33 1095.29 1230.33 1095.26 cv
1230.33 1095.26 1230.33 1095.25 1230.33 1095.24 cv
1230.33 1095.23 1230.33 1095.21 1230.33 1095.2 cv
1230.33 1095.19 1230.33 1095.17 1230.33 1095.16 cv
1230.33 1095.15 1230.33 1095.14 1230.33 1095.13 cv
1230.33 1095.11 1230.33 1095.09 1230.33 1095.08 cv
1230.33 1095.07 1230.33 1095.06 1230.33 1095.05 cv
1230.33 1095.01 1230.33 1094.97 1230.33 1094.93 cv
1230.33 1094.91 1230.33 1094.89 1230.33 1094.87 cv
1230.33 1094.85 1230.33 1094.82 1230.33 1094.8 cv
1230.33 1094.79 1230.33 1094.77 1230.33 1094.76 cv
1230.33 1094.74 1230.33 1094.72 1230.33 1094.7 cv
1230.33 1094.45 1230.33 1094.33 1230.33 1094.33 cv
1298.7 1084.08 1738.5 1079.3 2046.87 1079.3 cv
2219.63 1079.3 2351.09 1080.8 2353 1083.67 cv
2353.01 1083.68 2353.01 1083.69 2353.02 1083.7 cv
2353.02 1083.7 2353.02 1083.71 2353.02 1083.71 cv
2353.03 1083.71 2353.03 1083.72 2353.04 1083.73 cv
2353.04 1083.73 2353.04 1083.73 2353.04 1083.74 cv
2353.05 1083.75 2353.05 1083.75 2353.06 1083.76 cv
2353.06 1083.77 2353.06 1083.77 2353.07 1083.78 cv
2353.07 1083.78 2353.07 1083.79 2353.08 1083.8 cv
2353.08 1083.81 2353.09 1083.81 2353.09 1083.82 cv
2353.09 1083.82 2353.09 1083.83 2353.1 1083.83 cv
2353.1 1083.84 2353.1 1083.84 2353.11 1083.85 cv
2353.11 1083.86 2353.11 1083.86 2353.11 1083.86 cv
2353.13 1083.89 2353.14 1083.92 2353.16 1083.94 cv
2353.16 1083.95 2353.16 1083.95 2353.16 1083.95 cv
2355.37 1088.41 2358.01 1117.22 2360.16 1150.12 cv
2360.17 1150.23 2360.17 1150.34 2360.18 1150.45 cv
2360.18 1150.49 2360.19 1150.54 2360.19 1150.58 cv
2361.42 1169.55 2362.49 1189.86 2363.21 1207.63 cv
2363.35 1211.16 2363.48 1214.59 2363.6 1217.89 cv
2363.6 1217.89 li
2363.48 1214.59 2363.35 1211.16 2363.21 1207.63 cv
2297 1209.4 li
2297 1166.33 li
2297 1142.6 li
2297 1121.83 2280.17 1105 2259.4 1105 cv
2034.6 1105 li
2013.83 1105 1997 1121.83 1997 1142.6 cv
1997 1209.4 li
1997 1214.38 1997.97 1219.14 1999.73 1223.49 cv
1995.67 1225 li
1842.06 1235.42 li
.792157 .945098 1 rgb
f
1639.97 2380.52 mo
1468.35 2380.52 1320.65 2378.47 1274.55 2372.9 cv
1278.57 2366.31 1284.67 2348.81 1289.82 2329.32 cv
1289.82 2329.32 li
1289.82 2329.32 li
1296.16 2305.41 1301.07 2278.48 1299 2265 cv
1298.14 2259.42 1284.47 2242.5 1263.16 2219.06 cv
1265.79 2164.83 1269.4 2114.61 1273 2105 cv
1280.79 2084.21 1392.4 1987.46 1410.44 1987.46 cv
1410.92 1987.46 1411.33 1987.53 1411.67 1987.67 cv
1425 1993 1470.33 2350.33 1470.33 2350.33 cv
1470.33 2350.33 1437 1411 1469.37 1393.84 cv
1488.88 1383.49 1789.4 1381.44 2025.11 1381.44 cv
2180.44 1381.44 2307.67 1382.33 2307.67 1382.33 cv
2329 1763.67 li
2345 1321 li
2345 1321 2361 2361 2347.67 2369 cv
2339.67 2373.8 1950.57 2380.52 1639.97 2380.52 cv
.831372 .937255 .980392 rgb
f
1238.33 1561 mo
1238.33 1561 1381 1447 1407 1451 cv
1433 1455 1457 1531 1451 1555 cv
1445 1579 1391 1645 1331 1691 cv
1271 1737 1203 1747 1203 1747 cv
1153 1651 li
1238.33 1561 li
cp
1 .85098 .85098 rgb
f
413.78 2468.33 mo
413.5 2468.59 413.24 2468.82 413 2469 cv
405 2475 385 2483 365 2475 cv
345 2467 261 2399 261 2383 cv
261 2367 273 2221 273 2221 cv
273 2221 257 2213 259 2201 cv
261 2189 267 2105 295 2089 cv
307.52 2081.84 323 2077 335 2075 cv
347 2073 397 2085 397 2085 cv
403.47 2142.69 li
421 2299 li
421 2299 443 2371 447 2389 cv
450.88 2406.46 422.77 2459.67 413.78 2468.33 cv
cp
.662745 .282353 .490196 rgb
f
413.78 2468.33 mo
404.68 2470.84 394.75 2472.22 385 2471 cv
353 2467 299 2401 301 2393 cv
303 2385 373 2405 381 2403 cv
389 2401 431 2371 431 2371 cv
377 2387 li
377 2387 315 2371 297 2361 cv
286.77 2355.32 284.292 2310.22 284.059 2272.36 cv
283.821 2233.64 291.517 2195.24 307.157 2159.82 cv
311.123 2150.84 314.714 2144.14 317 2143 cv
325 2139 371 2103 371 2103 cv
371 2103 386 2121.21 403.47 2142.69 cv
421 2299 li
421 2299 443 2371 447 2389 cv
450.88 2406.46 422.77 2459.67 413.78 2468.33 cv
cp
.537255 .215686 .419608 rgb
f
1289.82 2329.32 mo
1283.95 2351.53 1276.85 2371.15 1273 2375 cv
1265 2383 1211 2405 1183 2407 cv
1155 2409 926.999 2395 926.999 2395 cv
926.999 2395 891 2443 858.999 2455 cv
853.81 2456.95 845.879 2458.05 836.14 2458.52 cv
785.8 2460.93 687.1 2446.35 667.001 2443 cv
643 2439 443.001 2307 443.001 2307 cv
443.001 2307 441 2317 435 2317 cv
429 2317 392.999 2299 379 2285 cv
364.999 2271 336.999 2223 336.999 2189 cv
336.999 2155 353.001 2089 364.999 2081 cv
376.999 2073 391 2073 401 2077 cv
410.999 2081 409.001 2089 409.001 2089 cv
432.999 2103 li
432.999 2103 364.999 2003 359.001 1957 cv
353.001 1911 361 1785 361 1785 cv
392.1 1771.78 li
441 1751 li
531 1649 li
773 1735 li
854.331 1801 li
854.331 1801 870.999 1817 883 1835 cv
895 1853 883 1861 883 1861 cv
883 1861 925.241 1894.5 960 1922.97 cv
965.97 1927.86 971.72 1932.6 976.999 1937 cv
981.231 1940.53 988.869 1947.4 999.049 1956.82 cv
1075.47 2027.56 1295.47 2242.06 1299 2265 cv
1301.07 2278.48 1296.16 2305.41 1289.82 2329.32 cv
.462745 .27451 .368627 rgb
f
1218.33 1557 mo
1218.33 1557 1181 1642.33 1183.67 1682.33 cv
1186.33 1722.33 1218.33 1738.33 1218.33 1738.33 cv
1218.33 1738.33 1194.33 1751.67 1173 1757 cv
1151.67 1762.33 1127.67 1749 1117 1741 cv
1106.33 1733 1111.67 1703.67 1111.67 1703.67 cv
1111.67 1703.67 1095.67 1703.67 1082.33 1685 cv
1069 1666.33 982.33 1545 982.33 1545 cv
982.33 1545 926.33 1688.34 913 1707 cv
899.66 1725.67 854.331 1710.33 854.331 1710.33 cv
854.331 1710.33 902.33 1721 897.001 1745 cv
891.669 1769 873 1777 873 1777 cv
873 1777 864.999 1798.33 854.331 1801 cv
843.67 1803.67 531.669 1721 531.669 1721 cv
531.669 1721 528.999 1683.67 443.67 1702.33 cv
358.33 1721 353.001 1793 353.001 1793 cv
353.001 1793 331.67 1787.67 315.67 1774.33 cv
299.67 1761 286.33 1713 289 1691.67 cv
291.67 1670.33 310.331 1651.67 310.331 1651.67 cv
310.331 1651.67 297.001 1598.33 302.33 1582.33 cv
307.669 1566.33 336.999 1537 336.999 1537 cv
336.999 1537 379.669 1358.33 406.329 1307.67 cv
432.999 1257 518.331 1153 537 1145 cv
555.67 1137 734.33 1112.33 734.33 1112.33 cv
910.331 1139.67 li
910.331 1139.67 953.001 1147.67 976.999 1161 cv
1001 1174.33 1067.67 1278.33 1075.67 1289 cv
1083.67 1299.67 1121 1339.67 1131.67 1355.67 cv
1142.33 1371.67 1203 1475 1203 1475 cv
1203 1475 1218.33 1493 1226.33 1501 cv
1227.96 1502.63 1228.6 1505.93 1228.57 1510.15 cv
1228.47 1526.59 1218.33 1557 1218.33 1557 cv
0 .54902 .6 rgb
f
1204.13 1561 mo
1204.13 1561 1171.79 1646.33 1174.1 1686.33 cv
1176.4 1726.33 1204.13 1742.33 1204.13 1742.33 cv
1204.13 1742.33 1183.33 1755.67 1164.85 1761 cv
1146.37 1766.33 1125.58 1753 1116.34 1745 cv
1107.09 1737 1111.72 1707.67 1111.72 1707.67 cv
1111.72 1707.67 1097.86 1707.67 1086.3 1689 cv
1074.75 1670.33 982.33 1545 982.33 1545 cv
982.33 1545 990.336 1480.17 991.575 1453 cv
993.307 1415 995.04 1313 1014.1 1323 cv
1033.16 1333 1118.07 1435 1126.73 1451 cv
1135.4 1467 1140.6 1491 1138.86 1503 cv
1137.13 1515 1119.8 1563 1114.6 1581 cv
1109.4 1599 1105.94 1661 1112.87 1673 cv
1119.8 1685 1152.72 1501 1152.72 1501 cv
1152.72 1501 1166.59 1489 1168.32 1507 cv
1170.05 1525 1137.13 1687 1142.33 1705 cv
1147.53 1723 1159.66 1703 1159.66 1693 cv
1159.66 1683 1173.52 1523 1183.92 1519 cv
1189.77 1516.75 1202.76 1515.13 1213 1514.15 cv
1212.91 1530.59 1204.13 1561 1204.13 1561 cv
cp
.0117647 .403922 .466667 rgb
f
836.12 2458.52 mo
785.8 2460.93 687.1 2446.35 667 2443 cv
643 2439 443 2307 443 2307 cv
443 2307 419 2287 407 2241 cv
395 2195 403 2119 403 2119 cv
403 2119 373 2125 359 2137 cv
345 2149 347 2243 379 2285 cv
365 2271 337 2223 337 2189 cv
337 2155 353 2089 365 2081 cv
377 2073 391 2073 401 2077 cv
411 2081 409 2089 409 2089 cv
433 2103 li
433 2103 365 2003 359 1957 cv
353 1911 361 1785 361 1785 cv
392.1 1771.78 li
439 1853 li
439 1853 411 1863 403 1869 cv
395 1875 391 1943 391 1961 cv
391 1979 439 2113 459 2133 cv
479 2153 587 2213 611 2225 cv
635 2237 719 2261 713 2265 cv
707 2269 679 2271 649 2271 cv
627.93 2271 596.99 2245.34 580.44 2230.08 cv
598.15 2247.61 629.18 2280.09 619 2283 cv
605 2287 537 2197 537 2197 cv
537 2197 435 2115 425 2121 cv
415 2127 475 2219 493 2235 cv
510.72 2250.75 545.88 2276.19 546.97 2276.98 cv
475 2235 li
475 2235 579 2357 595 2371 cv
611 2385 653 2419 673 2429 cv
685.92 2435.46 774.82 2449.44 836.12 2458.52 cv
cp
.356863 .196078 .286275 rgb
f
1289.82 2329.32 mo
1283.95 2351.53 1276.85 2371.15 1273 2375 cv
1265 2383 1211 2405 1183 2407 cv
1155 2409 926.999 2395 926.999 2395 cv
926.999 2395 929 2325 920.999 2309 cv
913 2293 765 2003 763.001 1997 cv
761 1991 774.999 1967 783 1959 cv
791.001 1951 869.001 1863 869.001 1863 cv
883 1861 li
839 1967 li
839 2007 li
960 1922.97 li
965.97 1927.86 971.72 1932.6 976.999 1937 cv
981.231 1940.53 988.869 1947.4 999.049 1956.82 cv
863 2065 li
863 2065 1019 2065 1041 2067 cv
1062.67 2068.97 898.11 2119.43 893.119 2120.97 cv
898.441 2120.07 1069.4 2091 1095 2091 cv
1121 2091 1175 2159 1179 2165 cv
1183 2171 1213 2251 1205 2255 cv
1197 2259 926.999 2237 926.999 2237 cv
926.999 2237 1269 2279 1281 2289 cv
1284.91 2292.26 1287.76 2308.67 1289.82 2329.32 cv
f
695 1030 mo
695 1030 717.444 1143.89 717.444 1149.89 cv
717.444 1155.89 786.129 1231 838.753 1231 cv
891.377 1231 913 1195 913 1195 cv
878.221 1163 li
695 1030 li
cp
.776471 .482353 .443137 rgb
f
933 1143 mo
933 1143 939 1163 939 1181 cv
939 1199 933 1303 921 1311 cv
909 1319 875 1235 869 1239 cv
863 1243 857 1259 857 1259 cv
857 1259 855 1227 861 1223 cv
867 1219 907 1191 933 1143 cv
cp
.419608 .8 .819608 rgb
f
2169 1822.33 mo
2169 1822.82 2169 1823.32 2168.99 1823.81 cv
2168.2 2014.59 2013.3 2169 1822.33 2169 cv
1680.12 2169 1557.91 2083.36 1504.45 1960.85 cv
1495.73 1940.88 1488.85 1919.92 1484 1898.2 cv
1478.55 1873.78 1475.67 1848.39 1475.67 1822.33 cv
1475.67 1805.78 1476.83 1789.49 1479.07 1773.56 cv
1502.78 1605.19 1647.42 1475.67 1822.33 1475.67 cv
2013.79 1475.67 2169 1630.87 2169 1822.33 cv
cp
.356863 .196078 .286275 rgb
f
1016.29 2236.17 mo
998.42 2253.37 955.72 2256.88 943.92 2253.41 cv
932.11 2249.95 904.989 2200.33 904.989 2200.33 cv
904.989 2200.33 495.58 2077.05 493.141 2063.51 cv
491.821 2056.21 491.511 2045.47 494.24 2036.42 cv
496.559 2028.69 501.09 2022.19 509.08 2020.1 cv
526.43 2015.58 857.529 2099.86 872.279 2104.19 cv
887.039 2108.51 934.419 2099.97 934.419 2099.97 cv
934.419 2099.97 933.36 2070.81 935.959 2061.96 cv
938.549 2053.1 1016.19 2085.92 1039.97 2111.69 cv
1052.13 2124.88 965.87 2134.84 965.87 2134.84 cv
975.121 2201.66 li
975.121 2201.66 1039.35 2201.26 1048.2 2203.86 cv
1057.06 2206.46 1034.15 2218.97 1016.29 2236.17 cv
1 1 1 rgb
f
955.898 2254.62 mo
950.769 2254.62 946.568 2254.19 943.92 2253.41 cv
932.11 2249.95 904.989 2200.33 904.989 2200.33 cv
904.989 2200.33 495.58 2077.05 493.141 2063.51 cv
492.543 2060.2 492.152 2056.19 492.157 2051.95 cv
492.164 2046.82 492.748 2041.37 494.24 2036.42 cv
501 2055 li
509.08 2020.1 li
510.999 2061 li
510.999 2061 516.351 2030.67 522 2030.67 cv
522.333 2030.67 522.666 2030.78 522.999 2031 cv
528.999 2035 875.001 2125 879 2133 cv
883 2141 892.999 2183 892.999 2183 cv
945 2183 li
945 2183 937.57 2108.68 942.402 2108.68 cv
942.584 2108.68 942.782 2108.78 942.999 2109 cv
948.999 2115 965.87 2134.84 965.87 2134.84 cv
975.121 2201.66 li
975.121 2201.66 978.681 2201.64 984.24 2201.64 cv
1002.29 2201.64 1041.43 2201.87 1048.2 2203.86 cv
1049.55 2204.26 1050.16 2204.88 1050.17 2205.72 cv
1050.2 2210.38 1031.43 2221.59 1016.29 2236.17 cv
1013.5 2238.85 1010.11 2241.21 1006.32 2243.25 cv
991.284 2251.36 970.061 2254.62 955.898 2254.62 cv
.796078 .909804 .968627 rgb
f
804.78 2222.26 mo
802.69 2229.57 780.77 2229.57 774.51 2225.39 cv
768.25 2221.21 756.76 2207.64 756.76 2207.64 cv
756.76 2207.64 743.19 2211.82 734.84 2209.73 cv
726.49 2207.64 718.14 2202.42 718.14 2202.42 cv
718.14 2202.42 705.61 2202.42 693.08 2197.21 cv
682.91 2192.97 678.24 2184.59 676.85 2181.59 cv
677.39 2183.58 676.65 2187.12 660.72 2181.55 cv
639.85 2174.24 628.82 2137.44 633 2127 cv
637.18 2116.56 650.28 2129.35 650.28 2129.35 cv
655.5 2119.96 li
655.5 2119.96 625.23 2089.68 610.62 2055.23 cv
609.41 2052.39 608.32 2049.71 607.33 2047.18 cv
596.33 2019.13 598.09 2010.35 598.09 2010.35 cv
598.09 2010.35 374.69 1830.79 343.38 1785.91 cv
319.31 1751.41 409.53 1676.2 477.86 1681.17 cv
498.42 1682.66 517.01 1691.42 529.89 1710.74 cv
529.89 1710.74 655.16 1897.26 669.07 1927.88 cv
682.99 1958.5 694.13 1977.98 694.13 1977.98 cv
694.13 1977.98 789.12 2085.51 791.21 2092.81 cv
793.3 2100.12 806.87 2214.95 804.78 2222.26 cv
cp
1 .85098 .85098 rgb
f
2168.99 1823.81 mo
2168.2 2014.59 2013.3 2169 1822.33 2169 cv
1680.12 2169 1557.91 2083.36 1504.45 1960.85 cv
1484 1898.2 li
1481 1889 li
1461 1803 li
1461 1803 1467.01 1791.34 1479.07 1773.56 cv
1524.85 1706.15 1657.83 1550.86 1881 1611 cv
2160.72 1686.38 2088.21 1990.03 2087.02 1994.94 cv
2088.24 1991.24 2142.51 1825.83 2099 1723 cv
2055.34 1619.81 1995.94 1577.66 1995.01 1577.01 cv
1995.97 1577.48 2057.7 1608.05 2147 1741 cv
2161.5 1762.58 2168.11 1791.12 2168.99 1823.81 cv
cp
.247059 .129412 .2 rgb
f
1517 1806.33 mo
1517 2016.94 1434.92 2187.67 1333.67 2187.67 cv
1232.41 2187.67 1150.33 2016.94 1150.33 1806.33 cv
1150.33 1595.73 1232.41 1425 1333.67 1425 cv
1434.92 1425 1517 1595.73 1517 1806.33 cv
cp
.662745 .282353 .490196 rgb
f
1491.44 1680.81 mo
1488.64 1637.49 1477.05 1595.1 1456.68 1556.77 cv
1435.1 1516.17 1409.61 1473.92 1361 1471 cv
1261 1465 1191 1713 1223 1917 cv
1251.49 2098.63 1337 2135 1381 2119 cv
1425 2103 1457 2001 1457 2001 cv
1457 2001 1431 2059 1407 2067 cv
1383 2075 1453 1967 1453 1967 cv
1453 1967 1465 1741 1449 1659 cv
1433 1577 1387 1547 1387 1547 cv
1387 1547 1429 1557 1459 1633 cv
1489 1709 1497 1767 1497 1767 cv
1491.44 1680.81 li
cp
.537255 .215686 .419608 rgb
f
1353 1425.17 mo
1353 1425.17 1406.71 1366.99 1422.37 1375.94 cv
1438.04 1384.89 1440.28 1418.46 1440.28 1425.17 cv
1440.28 1431.88 1435.8 1523.63 1408.95 1534.82 cv
1382.09 1546.01 1381 1443 1381 1443 cv
1353 1425.17 li
cp
1 .85098 .85098 rgb
f
1424.61 1416.22 mo
1424.61 1416.22 1449.23 1371.46 1469.37 1393.84 cv
1489.51 1416.22 1480.56 1499.02 1460.42 1528.11 cv
1440.28 1557.2 1424.61 1550.49 1417.9 1516.92 cv
1411.18 1483.35 1424.61 1416.22 1424.61 1416.22 cv
cp
f
1464.89 1469.93 mo
1464.89 1469.93 1478.32 1393.84 1502.94 1436.36 cv
1527.55 1478.88 1498.46 1550.49 1480.56 1554.96 cv
1462.65 1559.44 1453.7 1519.16 1453.7 1519.16 cv
1464.89 1469.93 li
cp
f
1470.46 1492.3 mo
1470.46 1492.3 1497 1429 1521.89 1455.55 cv
1532.71 1467.09 1546.5 1536.11 1535.31 1549.54 cv
1524.12 1562.96 1508.46 1524.92 1508.46 1524.92 cv
1470.46 1492.3 li
cp
f
709 1113 mo
709 1113 702.556 1107.33 691 1112 cv
681.728 1115.74 684 1111 680 1119 cv
676 1127 683.568 1204.54 713 1255 cv
741 1303 753 1329 773 1327 cv
793 1325 819 1235 831 1241 cv
843 1247 843 1287 843 1287 cv
843 1287 866.333 1230.11 858.333 1228.11 cv
850.333 1226.11 755 1213 709 1113 cv
cp
.419608 .8 .819608 rgb
f
537 1707 mo
537 1707 541 1677 543 1665 cv
545 1653 537 1639 537 1639 cv
537 1639 583 1477 589 1443 cv
595 1409 591 1345 597 1335 cv
603 1325 629 1247 621 1219 cv
613 1191 591 1147 571 1147 cv
551 1147 533 1153 521 1163 cv
509 1173 451 1259 449 1267 cv
447 1275 469 1499 453 1505 cv
437 1511 411 1327 403 1337 cv
395 1347 353 1539 353 1549 cv
353 1559 447 1561 479 1571 cv
511 1581 511 1581 511 1581 cv
511 1581 365 1575 357 1579 cv
349 1583 327 1605 327 1615 cv
327 1625 351 1625 367 1631 cv
383 1637 477 1633 489 1641 cv
501 1649 501 1649 501 1649 cv
501 1649 395 1641 369 1647 cv
343 1653 309 1687 309 1687 cv
309 1687 389 1665 427 1665 cv
465 1665 525 1653 537 1707 cv
cp
.0117647 .403922 .466667 rgb
f
862.778 1244.56 mo
862.778 1244.56 853.001 1449 845 1479 cv
836.999 1509 821 1553 813.001 1565 cv
805 1577 783 1589 777 1601 cv
771 1613 785.001 1671 785.001 1671 cv
785.001 1671 757.001 1701 752.999 1713 cv
749 1725 755 1769 755 1769 cv
711 1757 li
711 1757 718.999 1703 723.001 1691 cv
727 1679 749 1667 752.999 1659 cv
757.001 1651 751.001 1603 751.001 1589 cv
751.001 1575 821 1519 821 1519 cv
830.999 1241 li
862.778 1244.56 li
.419608 .8 .819608 rgb
f
786.999 1727 mo
781.612 1727 768.747 1725.11 751.727 1721.95 cv
751.897 1718.25 752.292 1715.12 752.999 1713 cv
757.001 1701 785.001 1671 785.001 1671 cv
785.001 1671 779.031 1646.27 776.558 1625.77 cv
805.475 1649.48 835 1703 835 1703 cv
835 1703 813.001 1727 786.999 1727 cv
717.804 1715.15 mo
650.582 1700.8 560.341 1677.06 559 1665 cv
556.999 1647 561.001 1633 571 1627 cv
572.188 1626.29 573.571 1625.97 575.127 1625.97 cv
586.671 1625.97 607.614 1643.48 627 1647 cv
643.534 1650.01 709.766 1660.92 747.603 1665.31 cv
739.585 1672.69 726.052 1681.84 723.001 1691 cv
721.59 1695.23 719.682 1704.68 717.804 1715.15 cv
752.962 1659.07 mo
711.033 1646.9 619.835 1624.36 611.001 1617 cv
599 1607 581 1585 583.001 1567 cv
584.999 1549 605.001 1423 606.999 1403 cv
607.242 1400.58 607.719 1399.47 608.408 1399.47 cv
613.395 1399.47 629.426 1457.37 647 1489 cv
663.249 1518.25 716.461 1573.9 751.938 1605.54 cv
753.447 1625.28 755.959 1653.08 752.999 1659 cv
752.987 1659.02 752.975 1659.05 752.962 1659.07 cv
0 .384314 .435294 rgb
f
751.727 1721.95 mo
741.645 1720.08 730.117 1717.77 717.804 1715.15 cv
719.682 1704.68 721.59 1695.23 723.001 1691 cv
726.052 1681.84 739.585 1672.69 747.603 1665.31 cv
757.483 1666.45 765.425 1667.16 770.043 1667.16 cv
771.272 1667.16 772.269 1667.11 773 1667 cv
776.694 1666.47 767.991 1663.44 752.962 1659.07 cv
752.975 1659.05 752.987 1659.02 752.999 1659 cv
755.959 1653.08 753.447 1625.28 751.938 1605.54 cv
760.129 1612.85 767.373 1618.87 773 1623 cv
774.183 1623.87 775.371 1624.79 776.558 1625.77 cv
779.031 1646.27 785.001 1671 785.001 1671 cv
785.001 1671 757.001 1701 752.999 1713 cv
752.292 1715.12 751.897 1718.25 751.727 1721.95 cv
.207843 .556863 .596078 rgb
f
735.965 1765.94 mo
716.602 1765.94 701.674 1765.08 696.999 1763 cv
679.001 1755 569 1705 561.001 1693 cv
561.001 1693 668.51 1720.3 714.863 1732.35 cv
712.669 1745.73 711 1757 711 1757 cv
743.632 1765.9 li
741.013 1765.93 738.45 1765.94 735.965 1765.94 cv
754.578 1765.71 mo
753.941 1760.58 752.74 1750.15 752.083 1739.69 cv
798.002 1745.28 866.874 1746.5 875.001 1753 cv
881.619 1758.29 809.401 1764.46 754.578 1765.71 cv
0 .384314 .435294 rgb
f
743.632 1765.9 mo
711 1757 li
711 1757 712.669 1745.73 714.863 1732.35 cv
718.692 1733.35 722.1 1734.24 724.999 1735 cv
732.122 1736.87 741.49 1738.4 752.083 1739.69 cv
752.74 1750.15 753.941 1760.58 754.578 1765.71 cv
750.836 1765.8 747.181 1765.86 743.632 1765.9 cv
.207843 .556863 .596078 rgb
f
1520 1253 mo
1330 1253 li
1310.67 1253 1295 1237.33 1295 1218 cv
1295 1146 li
1295 1126.67 1310.67 1111 1330 1111 cv
1520 1111 li
1539.33 1111 1555 1126.67 1555 1146 cv
1555 1218 li
1555 1237.33 1539.33 1253 1520 1253 cv
.952941 .992157 1 rgb
f
2259.4 1247 mo
2034.6 1247 li
2013.83 1247 1997 1230.17 1997 1209.4 cv
1997 1142.6 li
1997 1121.83 2013.83 1105 2034.6 1105 cv
2259.4 1105 li
2280.17 1105 2297 1121.83 2297 1142.6 cv
2297 1209.4 li
2297 1230.17 2280.17 1247 2259.4 1247 cv
.356863 .196078 .286275 rgb
f
1861 1183 mo
1861 1228.29 1824.29 1265 1779 1265 cv
1733.71 1265 1697 1228.29 1697 1183 cv
1697 1137.71 1733.71 1101 1779 1101 cv
1824.29 1101 1861 1137.71 1861 1183 cv
.952941 .992157 1 rgb
f
1581 2073 mo
1581 2073 1559 2053 1577 2057 cv
1595 2061 1643 2159 1789 2161 cv
1935 2163 2013 2099 2023 2101 cv
2033 2103 2033 2183 2019 2191 cv
2005 2199 1987 2175 1987 2175 cv
1987 2175 1989 2235 1941 2241 cv
1893 2247 1877 2199 1877 2199 cv
1877 2199 1891 2287 1869 2321 cv
1847 2355 1815 2331 1815 2331 cv
1815 2331 1825 2443 1759 2441 cv
1693 2439 1701 2197 1701 2197 cv
1701 2197 1701 2235 1663 2221 cv
1625 2207 1623 2117 1623 2117 cv
1581 2073 li
cp
.352941 .619608 .819608 rgb
f
2302 2349 mo
2112 2349 li
2092.67 2349 2077 2333.33 2077 2314 cv
2077 2242 li
2077 2222.67 2092.67 2207 2112 2207 cv
2302 2207 li
2321.33 2207 2337 2222.67 2337 2242 cv
2337 2314 li
2337 2333.33 2321.33 2349 2302 2349 cv
cp
.780392 .890196 .94902 rgb
f
785 2097 mo
785 2106.33 734.33 2133 722.33 2131.67 cv
710.33 2130.33 674.33 2122.33 665 2117 cv
658.05 2113.03 629.63 2080.93 607.33 2047.18 cv
596.33 2019.13 598.09 2010.35 598.09 2010.35 cv
598.09 2010.35 374.69 1830.79 343.38 1785.91 cv
319.31 1751.41 409.53 1676.2 477.86 1681.17 cv
457.41 1686.37 427.81 1697.97 403.67 1723.67 cv
362.33 1767.67 577 1973 581 1978.33 cv
585 1983.67 622.333 2017 622.333 2017 cv
622.333 2017 690.333 1987.67 698.333 1991.67 cv
706.333 1995.67 785 2087.67 785 2097 cv
cp
.956863 .701961 .701961 rgb
f
763 2135 mo
756.76 2207.64 li
756.76 2207.64 781 2163 763 2135 cv
cp
f
685 2183 mo
685 2183 689 2151 689 2143 cv
689 2135 689 2135 689 2135 cv
689 2135 697 2165 685 2183 cv
cp
f
723 2195 mo
723 2195 727 2161 725 2149 cv
723 2137 729 2121 729 2121 cv
729 2121 743 2161 723 2195 cv
cp
f
1437 1411 mo
1417.9 1516.92 li
1417.9 1516.92 1441 1471 1437 1411 cv
cp
f
1459 1523 mo
1477 1431 li
1477 1431 1479 1495 1459 1523 cv
cp
f
1509 1459 mo
1509 1459 1511 1481 1509 1497 cv
1507 1513 1507 1513 1507 1513 cv
1507 1513 1527 1499 1509 1459 cv
cp
f
1501 1659 mo
1501 1659 1527 1637 1529 1653 cv
1531 1669 1531 1769 1525 1777 cv
1519 1785 1507 1769 1507 1769 cv
1501 1659 li
cp
.662745 .282353 .490196 rgb
f
1503 1877 mo
1503 1877 1521 1893 1521 1921 cv
1521 1949 1529 1993 1513 1997 cv
1497 2001 1487 1987 1487 1987 cv
1503 1877 li
cp
f
1623 2117 mo
1623 2117 1631 2180 1660 2189 cv
1689 2198 1704 2166 1704 2166 cv
1704 2166 1704 2383 1754 2397 cv
1804 2411 1801 2282 1801 2282 cv
1801 2282 1802 2314 1830 2316 cv
1858 2318 1867 2184 1867 2184 cv
1867 2184 1904 2241 1948 2228 cv
1992 2215 1985 2137 1985 2137 cv
1985 2137 1990 2173 2006 2167 cv
2022 2161 2020 2102 2014 2108 cv
2008 2114 2010 2139 2001 2139 cv
1992 2139 1983 2125 1978 2127 cv
1973 2129 1963 2182 1936 2188 cv
1909 2194 1878 2155 1866 2161 cv
1854 2167 1852 2245 1820 2248 cv
1788 2251 1784 2162 1778 2168 cv
1772 2174 1772 2215 1747 2221 cv
1722 2227 1716 2153 1709 2155 cv
1702 2157 1646 2196 1623 2117 cv
cp
.27451 .470588 .756863 rgb
f
1232.99 1278.29 mo
1232.99 1278.28 1232.99 1278.27 1232.99 1278.26 cv
1232.99 1278.27 1232.99 1278.28 1232.99 1278.29 cv
1232.98 1278.25 mo
1232.98 1278.24 1232.98 1278.23 1232.98 1278.22 cv
1232.98 1278.23 1232.98 1278.24 1232.98 1278.25 cv
1232.98 1278.21 mo
1232.97 1278.2 1232.97 1278.19 1232.97 1278.18 cv
1232.97 1278.19 1232.97 1278.2 1232.98 1278.21 cv
1232.97 1278.16 mo
1232.97 1278.15 1232.97 1278.15 1232.96 1278.14 cv
1232.97 1278.15 1232.97 1278.15 1232.97 1278.16 cv
1232.96 1278.12 mo
1232.96 1278.11 1232.96 1278.1 1232.96 1278.09 cv
1232.96 1278.1 1232.96 1278.11 1232.96 1278.12 cv
1232.95 1278.07 mo
1232.95 1278.07 1232.95 1278.06 1232.95 1278.05 cv
1232.95 1278.06 1232.95 1278.07 1232.95 1278.07 cv
1232.94 1278.03 mo
1232.94 1278.02 1232.94 1278.01 1232.94 1278 cv
1232.94 1278.01 1232.94 1278.02 1232.94 1278.03 cv
1232.94 1277.98 mo
1232.94 1277.97 1232.93 1277.96 1232.93 1277.96 cv
1232.93 1277.96 1232.94 1277.97 1232.94 1277.98 cv
1232.93 1277.93 mo
1232.93 1277.92 1232.93 1277.91 1232.92 1277.9 cv
1232.93 1277.91 1232.93 1277.92 1232.93 1277.93 cv
1232.92 1277.88 mo
1232.92 1277.87 1232.92 1277.86 1232.92 1277.85 cv
1232.92 1277.86 1232.92 1277.87 1232.92 1277.88 cv
1232.91 1277.84 mo
1232.91 1277.83 1232.91 1277.81 1232.91 1277.8 cv
1232.91 1277.81 1232.91 1277.83 1232.91 1277.84 cv
1232.91 1277.79 mo
1232.9 1277.78 1232.9 1277.76 1232.9 1277.75 cv
1232.9 1277.76 1232.9 1277.78 1232.91 1277.79 cv
1232.9 1277.74 mo
1232.9 1277.73 1232.89 1277.71 1232.89 1277.7 cv
1232.89 1277.71 1232.9 1277.73 1232.9 1277.74 cv
1232.89 1277.69 mo
1232.89 1277.67 1232.89 1277.66 1232.89 1277.65 cv
1232.89 1277.66 1232.89 1277.67 1232.89 1277.69 cv
1232.88 1277.63 mo
1232.88 1277.62 1232.88 1277.6 1232.88 1277.59 cv
1232.88 1277.6 1232.88 1277.62 1232.88 1277.63 cv
1232.88 1277.59 mo
1232.87 1277.57 1232.87 1277.56 1232.87 1277.54 cv
1232.87 1277.56 1232.87 1277.57 1232.88 1277.59 cv
1232.87 1277.51 mo
1232.86 1277.45 1232.85 1277.39 1232.84 1277.32 cv
1232.85 1277.39 1232.86 1277.45 1232.87 1277.51 cv
1232.84 1277.31 mo
1231.54 1267.33 1230.91 1218.52 1230.61 1173.82 cv
1230.61 1173.82 li
1230.91 1218.52 1231.54 1267.33 1232.84 1277.31 cv
2364.2 1244.44 mo
2364.18 1237.57 2363.96 1228.39 2363.6 1217.89 cv
2363.97 1228.39 2364.18 1237.57 2364.2 1244.44 cv
.431373 .682353 .909804 rgb
f
1243.67 1294.33 mo
1243.67 1294.33 li
1243.67 1294.33 li
1243.56 1294.29 li
1242.6 1293.92 1235.49 1290.76 1233 1278.33 cv
1233 1278.33 li
1233 1278.32 1232.99 1278.3 1232.99 1278.29 cv
1232.99 1278.28 1232.99 1278.27 1232.99 1278.26 cv
1232.99 1278.26 1232.99 1278.25 1232.98 1278.25 cv
1232.98 1278.24 1232.98 1278.23 1232.98 1278.22 cv
1232.98 1278.22 1232.98 1278.21 1232.98 1278.21 cv
1232.97 1278.2 1232.97 1278.19 1232.97 1278.18 cv
1232.97 1278.17 1232.97 1278.17 1232.97 1278.16 cv
1232.97 1278.15 1232.97 1278.15 1232.96 1278.14 cv
1232.96 1278.13 1232.96 1278.12 1232.96 1278.12 cv
1232.96 1278.11 1232.96 1278.1 1232.96 1278.09 cv
1232.95 1278.09 1232.95 1278.08 1232.95 1278.07 cv
1232.95 1278.07 1232.95 1278.06 1232.95 1278.05 cv
1232.95 1278.04 1232.95 1278.03 1232.94 1278.03 cv
1232.94 1278.02 1232.94 1278.01 1232.94 1278 cv
1232.94 1277.99 1232.94 1277.99 1232.94 1277.98 cv
1232.94 1277.97 1232.93 1277.96 1232.93 1277.96 cv
1232.93 1277.95 1232.93 1277.94 1232.93 1277.93 cv
1232.93 1277.92 1232.93 1277.91 1232.92 1277.9 cv
1232.92 1277.9 1232.92 1277.89 1232.92 1277.88 cv
1232.92 1277.87 1232.92 1277.86 1232.92 1277.85 cv
1232.92 1277.85 1232.91 1277.84 1232.91 1277.84 cv
1232.91 1277.83 1232.91 1277.81 1232.91 1277.8 cv
1232.91 1277.8 1232.91 1277.8 1232.91 1277.79 cv
1232.9 1277.78 1232.9 1277.76 1232.9 1277.75 cv
1232.9 1277.75 1232.9 1277.74 1232.9 1277.74 cv
1232.9 1277.73 1232.89 1277.71 1232.89 1277.7 cv
1232.89 1277.69 1232.89 1277.69 1232.89 1277.69 cv
1232.89 1277.67 1232.89 1277.66 1232.89 1277.65 cv
1232.88 1277.64 1232.88 1277.64 1232.88 1277.63 cv
1232.88 1277.62 1232.88 1277.6 1232.88 1277.59 cv
1232.88 1277.59 li
1232.87 1277.57 1232.87 1277.56 1232.87 1277.54 cv
1232.87 1277.53 1232.87 1277.52 1232.87 1277.51 cv
1232.86 1277.45 1232.85 1277.39 1232.84 1277.32 cv
1232.84 1277.32 1232.84 1277.32 1232.84 1277.31 cv
1231.54 1267.33 1230.91 1218.52 1230.61 1173.82 cv
1249 1174.33 li
1295 1174.33 li
1295 1218 li
1295 1237.33 1310.67 1253 1330 1253 cv
1520 1253 li
1539.33 1253 1555 1237.33 1555 1218 cv
1555 1218 li
1708.51 1224.92 li
1722.81 1248.92 1749.03 1265 1779 1265 cv
1804.35 1265 1827.02 1253.49 1842.06 1235.42 cv
1995.67 1225 li
1999.73 1223.49 li
2005.3 1237.27 2018.81 1247 2034.6 1247 cv
2259.4 1247 li
2280.17 1247 2297 1230.17 2297 1209.4 cv
2297 1166.33 li
2297 1209.4 li
2363.21 1207.63 li
2363.35 1211.16 2363.48 1214.59 2363.6 1217.89 cv
2363.96 1228.39 2364.18 1237.57 2364.2 1244.44 cv
2364.2 1244.73 2364.2 1245.01 2364.2 1245.29 cv
2364.2 1251.39 2364.03 1255.54 2363.67 1257 cv
2363.67 1257 li
2361 1267.67 2358.33 1278.33 2358.33 1278.33 cv
2358.33 1278.33 li
2358.33 1278.33 li
1243.67 1294.33 li
.694118 .894118 .980392 rgb
f
1520 1253 mo
1330 1253 li
1310.67 1253 1295 1237.33 1295 1218 cv
1295 1174.33 li
1529 1174.33 li
1377 1193 li
1550.33 1195.67 li
1555 1218 li
1555 1237.33 1539.33 1253 1520 1253 cv
.831372 .937255 .980392 rgb
f
2259.4 1247 mo
2034.6 1247 li
2018.81 1247 2005.3 1237.27 1999.73 1223.49 cv
2246.33 1131.67 li
2171.67 1209 li
2297 1166.33 li
2297 1209.4 li
2297 1230.17 2280.17 1247 2259.4 1247 cv
.309804 .184314 .282353 rgb
f
1779 1265 mo
1749.03 1265 1722.81 1248.92 1708.51 1224.92 cv
1710.33 1225 li
1710.33 1225 1725.39 1177.7 1774.79 1177.7 cv
1780.41 1177.7 1786.46 1178.31 1793 1179.67 cv
1857 1193 1838.33 1235.67 1838.33 1235.67 cv
1842.06 1235.42 li
1827.02 1253.49 1804.35 1265 1779 1265 cv
.831372 .937255 .980392 rgb
f
1243.67 1315.67 mo
1243.67 1315.67 2350.33 1294.33 2323.67 1283.67 cv
2297 1273 1243.67 1294.33 1243.67 1294.33 cv
1243.67 1315.67 li
cp
1 1 1 rgb
f
555.667 1734.33 mo
555.667 1734.33 691.667 1795.67 742.333 1803.67 cv
793 1811.67 854.33 1801 854.33 1801 cv
555.667 1734.33 li
cp
.356863 .196078 .286275 rgb
f
1715.67 2310.33 mo
1715.67 2310.33 1725 2403.67 1758.33 2398.33 cv
1791.67 2393 1799.67 2326.33 1799.67 2326.33 cv
1799.67 2326.33 1797 2413 1761 2414.33 cv
1725 2415.67 1715.67 2310.33 1715.67 2310.33 cv
cp
1 1 1 rgb
f
711.667 1231.67 mo
711.667 1231.67 751.667 1311.67 767.667 1317 cv
783.667 1322.33 803.667 1265 803.667 1265 cv
742.333 1250.33 li
773 1278.33 li
711.667 1231.67 li
cp
.0235294 .682353 .717647 rgb
f
1037.76 883.601 mo
1037.76 883.601 989.239 893.593 943.871 884.789 cv
898.502 875.985 902.638 840.513 902.638 840.513 cv
1009.6 828.481 li
1037.76 883.601 li
cp
.537255 .215686 .419608 rgb
f
966.984 1024.24 mo
966.668 1038.23 939.513 1177.65 917.248 1189.15 cv
916.904 1189.34 916.54 1189.51 916.175 1189.69 cv
913.971 1190.74 911.459 1191.69 908.679 1192.55 cv
908.568 1192.58 li
905.154 1193.63 901.362 1194.53 897.275 1195.27 cv
869.977 1200.17 829.756 1198 805.276 1186.63 cv
773.601 1171.91 719.015 1108.66 709.378 1092.44 cv
699.742 1076.21 692.647 1036.04 692.647 1036.04 cv
692.647 1036.04 670.427 1045.55 660.61 1037.32 cv
650.793 1029.1 604.07 972.028 604.386 958.032 cv
604.702 944.036 641.731 898.86 649.774 897.041 cv
657.818 895.222 705.128 926.298 705.128 926.298 cv
705.128 926.298 713.179 905.095 733.874 882.977 cv
757.028 858.223 796.013 832.326 857.257 833.709 cv
973.228 836.328 963.965 892.133 963.965 892.133 cv
963.965 892.133 963.61 894.136 963.048 897.334 cv
962.635 899.686 962.106 902.694 961.531 906.022 cv
960.475 912.07 959.234 919.164 958.174 925.351 cv
958.105 925.74 958.046 926.128 957.978 926.507 cv
957.653 928.47 957.342 930.313 957.064 931.988 cv
954.749 945.939 954.522 955.937 956.341 963.979 cv
958.16 972.023 967.3 1010.24 966.984 1024.24 cv
cp
1 .85098 .85098 rgb
f
916.175 1189.69 mo
915.411 1190.33 914.64 1190.81 913.874 1191.08 cv
912.855 1191.45 911.053 1191.95 908.679 1192.55 cv
908.568 1192.58 li
905.58 1193.34 901.688 1194.26 897.275 1195.27 cv
869.977 1200.17 829.756 1198 805.276 1186.63 cv
773.601 1171.91 719.015 1108.66 709.378 1092.44 cv
699.742 1076.21 692.647 1036.04 692.647 1036.04 cv
692.647 1036.04 670.427 1045.55 660.61 1037.32 cv
650.793 1029.1 604.07 972.028 604.386 958.032 cv
604.702 944.036 641.731 898.86 649.774 897.041 cv
657.818 895.222 705.128 926.298 705.128 926.298 cv
705.128 926.298 713.179 905.095 733.874 882.977 cv
744.571 892.51 li
744.571 892.51 723.67 961.396 729.79 1015.55 cv
735.898 1069.7 791.634 1140.98 804.075 1151.26 cv
816.516 1161.54 840.974 1170.76 840.974 1170.76 cv
840.974 1170.76 843.425 1150.81 865.449 1149.98 cv
887.474 1149.14 925.389 1153.33 928.667 1156.07 cv
931.652 1158.57 924.147 1183.04 916.175 1189.69 cv
cp
.956863 .701961 .701961 rgb
f
764.317 874.288 mo
764.317 874.288 754.851 880.076 742.192 909.131 cv
729.533 938.186 738.432 987.066 738.432 987.066 cv
721.648 992.021 li
705.128 926.298 li
668.376 900.128 li
704.238 847.592 li
749.891 833.952 li
764.317 874.288 li
cp
0 0 0 rgb
f
960.678 850.715 mo
960.678 850.715 967.777 851.32 970.373 854.491 cv
972.968 857.661 963.148 898.783 963.148 898.783 cv
963.148 898.783 961.94 853.856 930.907 850.043 cv
899.875 846.23 960.678 850.715 960.678 850.715 cv
cp
f
739.581 855.171 mo
739.581 855.171 652.312 920.261 649.576 926.24 cv
646.841 932.218 610.15 865.77 607.371 857.817 cv
604.592 849.865 622.366 805.187 645.861 769.228 cv
669.355 733.27 787.069 673.797 806.85 671.286 cv
826.63 668.774 860.122 670.516 868.948 672.688 cv
877.775 674.86 908.02 689.35 914.764 696.405 cv
921.508 703.461 958.013 790.084 958.013 790.084 cv
958.013 790.084 985.902 806.607 1027.02 835.035 cv
1059.95 857.804 1040.71 883.667 1037.76 883.601 cv
1034.8 883.534 1009.05 844.491 895.342 857.702 cv
781.631 870.914 772.769 896.845 765.326 894.214 cv
757.883 891.583 739.581 855.171 739.581 855.171 cv
cp
.662745 .282353 .490196 rgb
f
720.554 717.482 mo
718.973 721.892 749.249 824.824 749.249 824.824 cv
841.133 808.005 li
732.405 848.895 li
732.405 848.895 656.218 917.007 649.422 914.445 cv
642.626 911.884 616.628 857.394 616.762 851.47 cv
616.896 845.545 654.215 767.849 654.215 767.849 cv
638.267 817.873 li
638.267 817.873 664.716 762.159 675.318 752.025 cv
685.92 741.892 720.554 717.482 720.554 717.482 cv
cp
.537255 .215686 .419608 rgb
f
705.128 926.298 mo
705.128 926.298 662.574 891.329 653.834 894.465 cv
645.094 897.603 623.861 922.463 623.861 922.463 cv
661.885 951.329 li
705.128 926.298 li
cp
1 .752941 .752941 rgb
f
845.916 973.599 mo
844.685 975.862 841.625 976.683 836.018 977.387 cv
834.554 977.574 832.909 977.747 831.084 977.945 cv
830.302 978.028 829.49 978.099 828.659 978.161 cv
826.044 978.341 823.152 978.406 820.004 978.285 cv
819.584 978.276 li
818.255 978.226 816.876 978.154 815.447 978.072 cv
804.609 977.417 790.919 975.498 776.517 967.491 cv
754.813 955.428 786.753 943.816 786.753 943.816 cv
819.807 927.218 li
836.391 933.434 li
836.391 933.434 851.781 962.799 845.916 973.599 cv
cp
1 1 1 rgb
f
836.864 971.804 mo
836.72 973.751 836.438 975.625 836.018 977.387 cv
834.554 977.574 832.909 977.747 831.084 977.945 cv
830.302 978.028 829.49 978.099 828.659 978.161 cv
826.044 978.341 823.152 978.406 820.004 978.285 cv
819.584 978.276 li
818.255 978.226 816.876 978.154 815.447 978.072 cv
815.253 976.938 815.13 975.745 815.067 974.523 cv
814.999 973.121 815.012 971.671 815.115 970.193 cv
815.174 969.354 815.263 968.525 815.381 967.718 cv
816.751 957.977 821.866 950.74 827.408 951.155 cv
833.41 951.591 837.652 960.839 836.864 971.804 cv
cp
.160784 .34902 .298039 rgb
f
844.168 950.435 mo
844.168 950.435 834.33 933.457 822.774 933.622 cv
804.649 933.88 767.99 952.343 767.99 952.343 cv
767.99 952.343 801.179 931.057 811.16 925.668 cv
834.58 913.022 840.766 940.378 844.168 950.435 cv
cp
0 0 0 rgb
f
821.783 967.514 mo
821.823 969.439 819.419 971.055 816.414 971.124 cv
813.409 971.191 810.941 969.686 810.902 967.761 cv
810.862 965.836 813.266 964.22 816.271 964.152 cv
819.276 964.084 821.744 965.589 821.783 967.514 cv
cp
1 1 1 rgb
f
957.693 977.654 mo
956.563 980.309 953.425 981.048 947.383 981.972 cv
946.881 982.051 946.349 982.128 945.807 982.207 cv
945.185 982.302 944.533 982.388 943.861 982.462 cv
941.766 982.675 939.443 982.783 936.904 982.706 cv
936.574 982.698 li
933.625 982.602 930.358 982.428 926.828 981.948 cv
919.389 980.93 910.822 978.516 901.885 972.522 cv
884.355 960.773 909.935 948.708 909.935 948.708 cv
936.366 931.65 li
949.735 937.624 li
949.735 937.624 962.32 966.775 957.693 977.654 cv
cp
f
948.259 975.96 mo
948.142 978.068 947.835 980.092 947.383 981.972 cv
946.881 982.051 946.349 982.128 945.807 982.207 cv
945.185 982.302 944.533 982.388 943.861 982.462 cv
941.766 982.675 939.443 982.783 936.904 982.706 cv
936.574 982.698 li
933.625 982.602 930.358 982.428 926.828 981.948 cv
926.68 980.984 926.573 979.981 926.506 978.95 cv
926.417 977.547 926.41 976.097 926.494 974.619 cv
926.542 973.779 926.622 972.951 926.73 972.133 cv
927.991 962.379 933.017 955.081 938.56 955.426 cv
944.563 955.792 948.917 964.992 948.259 975.96 cv
cp
.160784 .34902 .298039 rgb
f
957.059 956.214 mo
957.059 956.214 947.017 939.355 935.464 939.66 cv
917.343 940.137 893.744 960.232 893.744 960.232 cv
893.744 960.232 913.839 937.356 923.755 931.847 cv
947.021 918.92 953.536 946.2 957.059 956.214 cv
cp
0 0 0 rgb
f
933.351 970.675 mo
933.414 972.6 931.029 974.244 928.025 974.349 cv
925.021 974.453 922.536 972.978 922.473 971.053 cv
922.41 969.128 924.795 967.484 927.799 967.379 cv
930.802 967.275 933.288 968.751 933.351 970.675 cv
cp
1 1 1 rgb
f
851.747 890.957 mo
853.843 898.495 839.942 908.945 820.699 914.297 cv
801.455 919.65 784.155 917.878 782.059 910.34 cv
779.962 902.803 793.862 892.353 813.106 887 cv
832.35 881.647 849.65 883.419 851.747 890.957 cv
cp
0 0 0 rgb
f
963.048 897.334 mo
962.635 899.686 962.106 902.694 961.531 906.022 cv
960.475 912.07 959.234 919.164 958.174 925.351 cv
954.489 924.198 950.652 922.681 946.773 920.833 cv
928.743 912.223 916.867 899.522 920.247 892.457 cv
923.617 885.401 940.963 886.653 958.983 895.271 cv
960.379 895.934 961.734 896.624 963.048 897.334 cv
cp
f
900.798 1090.76 mo
900.798 1090.76 894.073 1093.27 871.533 1087.43 cv
848.992 1081.59 848.992 1081.59 848.992 1081.59 cv
863.245 1070.57 li
863.245 1070.57 881.741 1078.32 899.04 1080.05 cv
916.338 1081.77 900.798 1090.76 900.798 1090.76 cv
cp
.976471 .686275 .686275 rgb
f
864.739 1033.93 mo
864.739 1033.93 831.429 1032.51 806.618 1038.62 cv
781.807 1044.73 774.16 1058.56 774.16 1058.56 cv
781.566 1055.39 li
781.566 1055.39 756.545 1070.83 748.11 1089.98 cv
739.676 1109.13 737.055 1107.07 738.313 1110.43 cv
739.571 1113.79 762.051 1122.3 776.774 1119.97 cv
791.497 1117.63 798.889 1115.13 798.889 1115.13 cv
798.889 1115.13 778.032 1123.33 783.349 1124.11 cv
788.666 1124.9 821.976 1126.32 840.893 1115.41 cv
859.811 1104.5 889.374 1065.16 890.782 1061.86 cv
892.19 1058.56 891.885 1042.54 891.885 1042.54 cv
891.885 1042.54 892.254 1085.23 901.33 1096.77 cv
910.404 1108.31 935.521 1118.22 953.606 1114.62 cv
971.692 1111.03 986.581 1101.36 983.278 1099.96 cv
979.976 1098.55 973.386 1095.06 973.386 1095.06 cv
973.386 1095.06 990.655 1098.12 986.11 1092.68 cv
981.565 1087.25 931.343 1037.43 904.834 1030.17 cv
878.325 1022.9 864.739 1033.93 864.739 1033.93 cv
cp
0 0 0 rgb
f
917.196 1024 mo
916.207 1028.42 902.028 1046.33 893.13 1046.57 cv
884.233 1046.81 842.205 1037.86 837.456 1031.53 cv
836.058 1029.67 837.756 1020.48 840.931 1008.35 cv
841.576 1005.88 842.285 1003.29 843.045 1000.62 cv
851.24 971.719 865.099 932.972 867.727 931.301 cv
871.786 928.731 879.889 930.905 883.183 935.651 cv
886.631 940.62 909.59 1006.5 909.59 1006.5 cv
909.59 1006.5 910.692 1008.17 912.059 1010.53 cv
914.014 1013.89 916.517 1018.63 917.125 1021.87 cv
917.296 1022.69 917.33 1023.42 917.196 1024 cv
cp
.976471 .686275 .686275 rgb
f
675.984 991.428 mo
674.914 990.541 674.222 989.207 674.197 987.708 cv
673.929 971.776 670.924 952.328 666.536 948.691 cv
660.546 943.725 645.843 943.615 640.686 943.991 cv
637.963 944.188 635.6 942.148 635.401 939.432 cv
635.202 936.715 637.238 934.35 639.954 934.147 cv
642.255 933.977 662.729 932.713 672.836 941.092 cv
682.936 949.465 683.963 981.259 684.067 987.546 cv
684.111 990.271 681.94 992.516 679.213 992.562 cv
677.988 992.583 676.859 992.154 675.984 991.428 cv
cp
.776471 .482353 .443137 rgb
f
643.087 976.977 mo
640.988 975.237 640.698 972.126 642.437 970.028 cv
643.026 969.317 657.071 952.673 675.89 955.879 cv
678.582 956.336 680.388 958.888 679.927 961.574 cv
679.468 964.261 676.919 966.066 674.233 965.611 cv
660.97 963.349 650.144 976.197 650.036 976.327 cv
648.296 978.425 645.185 978.716 643.087 976.977 cv
cp
f
917.196 1024 mo
916.207 1028.42 902.028 1046.33 893.13 1046.57 cv
884.233 1046.81 842.205 1037.86 837.456 1031.53 cv
836.058 1029.67 837.756 1020.48 840.931 1008.35 cv
845.697 1012.51 853.372 1019.05 857.682 1021.77 cv
864.25 1025.92 884.049 1035.04 892.717 1035.23 cv
899.145 1035.38 911.289 1026.47 917.125 1021.87 cv
917.296 1022.69 917.33 1023.42 917.196 1024 cv
cp
.937255 .580392 .572549 rgb
f
918.794 754.749 mo
919.803 765.009 904.58 774.903 884.793 776.848 cv
865.006 778.793 848.148 772.052 847.14 761.792 cv
846.131 751.532 861.354 741.638 881.141 739.693 cv
900.928 737.749 917.786 744.489 918.794 754.749 cv
cp
.92549 .980392 .992157 rgb
f
4391.99 1418.47 mo
4361 1366 li
4361 1366 4393.98 1394.94 4391.99 1418.47 cv
cp
.976471 .686275 .686275 rgb
f
4325 1383 mo
4355 1440 li
4355 1440 4340 1391 4325 1383 cv
cp
f
4293 1401 mo
4327 1468 li
4327 1468 4297 1430 4293 1401 cv
cp
f
4652.69 1259.44 mo
4647.45 1214.26 4639.13 1157 4630.33 1153 cv
4615.67 1146.33 4474.33 1143.67 4474.33 1143.67 cv
4474.33 1143.67 4474.33 1143.67 4482.33 1150.33 cv
4490.33 1157 4458.33 1165 4437 1157 cv
4415.67 1149 4451.67 1145 4451.67 1145 cv
4378.33 1146.33 li
4378.33 1146.33 4405 1147.67 4393 1154.33 cv
4381 1161 4326.33 1166.33 4310.33 1158.33 cv
4298.34 1152.34 4310.3 1151.59 4317.06 1151.59 cv
4196.57 1149.1 li
4258.79 1141.33 4435.21 1132.75 4510.88 1137.89 cv
4601.5 1144.05 4630.85 1141.65 4644.11 1149.77 cv
4647.58 1151.9 4650.48 1195.61 4652.69 1259.44 cv
cp
.627451 .384314 .517647 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 24.2.0
%%For: ( ) ()
%%Title: (2110.w037.n003.7B.p1.7-temp_01.eps)
%%CreationDate: 10/29/2021 11:53 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj2KKo/QZ\ra".S*C/X#"4"Vo@_s>/`%>FT],>$V+u"Zr3Q[3ZB7Hq]QPoKOb5j_m.+%Tee[9UDcdG]Lkg[e@qK4^kB/?5,
%;OV1M#tIjWK^unX>?Z>Z3Up;Ul<%c$]4*rPF_ZB=IG>6'I]J_AW^3u!RE5?rlA5W3)SY_SDuFE.pn#Q-^!\L>am>E3KhBlK"O3Ce
%:0;4a$M=dAr43'6TEBSfbP1:uC8^D?6[QS\=+fsGoSn8b+,YNZ%C:^b<LhIYDDjNnS2pRQI=L6`='G!gf<,8LO)%iTZY-O/MgiQR
%?U/8N&,]Xc0,&X2b3N$]Cc7-S(;+Lf-*W=#`)-V0>1C]HJQ2KDn:0eglGs%s0;[\.YZh&gI'4jgKYbYg50i1*)QR6p$,_G"2;UUc
%)ZWN3Bp+:i;npn^H>T;*dX^FPRkVRZlgWX,;)Ee<U<:(3f^u;BBk\6\,Rd&jW'iA!1c-t4PE6RXD\`<LB&^AiQ2N%:nk?AqXSdaJ
%-/t&o`4nJ"<;ktFHDM(,[&D2[961Z/r@2#ThFjR-iF5=)KmuON;m1K6[t/pZC'Rgp#3=Y^G&$p2&&6d1*P*%W%DR?1SC)^_\rjEA
%bt=phjeNnaJb;]P3\6n7,ZN#H`'W/fHk\rsEq9=92sa1rK&A4$"-FW^/(^'_VJ[9m8=FC8$JoW#arpf?>/F]tW:RA0q/sY0T/`L;
%h=g.9&llQb*J?SlMB3c-0huXJ[EH-_5r<<d/7691Bk;i;l?TT#@Bg2FrS7E#Oo<ZSmXd;oF<1Bb(B/G^r0tld;P4+4s5LN!No0+_
%qmK=ok,at^@5V/"$iaZnbJJ"[<@EYu>o2h:0%P%$LRPh-<c_QJL@=Ub<m0U/=tYS)F#j.FQbtk<!e+?%=;EbI'X0ot^`'ILZRN3u
%Yqaq@fMm7%ld-VYYStB4J$Bp/-(ni,+].qMlQB%!QXCWn@#YaNr/70Y./]!/0k@Pl&LdQMYi?ZR7_!D:L/Tu4XG3D,?`[0S@$t+C
%RQSJE_^.YbraeeAoF(^XI5X/F5##?7Q)MQKYStB7J$CN4O:61'*FCdRK@LN&Z-j%<X>.SJJ+40RaQNX(o#YARrl&UX,Q;84aiK/Z
%Qd#NN'XU,h(R-22N_PYp*ih$V$/@5u)#uL=2DmBJlWYnZX!3"s%K\%l'EP#l%!)&!_ME]H)P_G.Ol;!O`kPU\!JKTeaos.IoW^+f
%V$h;Z6mLoU-I55;&VXU*Z*k)<CjlfeCh/8_R_2`>!?[dp<YON"mTBe]HhP?)cPVpE2HtN_+P&u4IMaMhgs=\>F2>O5T*]%^I)%.9
%n3BO$e3'NR_>3&)$XAIfJTDIfUuigm`,rt_`Q5,jel5WaqS?5c.TQJCC$_niQ2MO(q]*>U+)#P\X=/I-5ISg#LTg'bES+pEOeY#9
%-^.tGKs0hjRq850=7ua@o6F@N^9XB%*VML@ANu(MiGp!k&HB'/AY6php51P=7a<\.p<U8'.l>"VPNXMTs2CjbF*)cL0us;lo6=7_
%d6%c!V=qPO%!I8)Ki^&d[%#`O\A>BB:.DS]p5X!&[#CI$d.1)fgPhTMi>)@R%/(`L1JTS)fdiAW)2WWiZFdeJo.a7)602pjjMLRB
%=KKotjL#_,E=McFB6.33S&8</[k6?lI[9(W@2E4Rs"!DQl6'(3Y.MLaIR[loCg3e)Qq#BX.HD4R:ktc*a/#1.%*2e+4Qg>GYN`'u
%C1mc0K,q3pr'f,sLQTP_k')F5[Z-fE]_jXgJu`+S96]/"HtO:!;`?N-2s0=A(>o<ak%7j=Ir.j#X#g4ACl=RP"i\7%W$k*G],6:m
%JXF4LX.X`k9^a#1VOmnD!G7)1Mk?+All@=of4qt.!#W&`%5qs@i!b/?<OW[u<"X:"VrUP]R6b4(bPL\nZCgI^[('N0O&LbI>YJS:
%RE7Ds$Q02!Z'LLuZ6=88if$@_._nIECFcd[5[Ekp>9k$d%uSKM!mC,a[K^l.lQh27YH@aoZ2pr-_Y=utW'G<WhrcaT`-`%,iiq^F
%"tX1N$"MJcMl7l;:l-m9RUj1cH_E]^_hjZi,$J;0Pd??5QDS"o\<t.LJpG-mkTP']_cj9HJlP+?_3@6EBfI"BG#$R^QVg21d2g"S
%.L)OI"]nnbZ'5[d*d*HuG(hd6Edi[U1(`c'TRVl98B5_LX\4uA=sW.^G0YUe(NLC\/i6FJXe=`s'Bt+*Q@VX8^*9;mU(^!o&5"M?
%&=a5^5N>"c1IB+kjuSYc=e+;dL^QZQ#W.1)hL[f0+ftj?3jt$P0tRXG6-&ZM$:YMj7'n2Qma35?VKl*Q8eCY(:dCV;Z!S=o"$/E&
%,`^_LpsmZokmglZ_uo$Z)gc)irWP0Ad86=[qSR>b$G`PCQm@$dOo@-h<8,_,9GW<HA>#Bq/H]er#!M!!,7Ep;(B,K!JCf]?f?B=(
%"k8gX@f0kRK0\Y`";'!.QaBH]$<"Cg05$]3-EIsXMfp_g%N'/QXC8sS9o%(pLgceb'kB<>TWu"Z98lM\kGc"03a!1C/E.S)JUK[`
%^3#hQ&SEAa!`j06.M>IjXsQDAEI1I?!^oD,kQ"WrAdI1"_5k[d#A2>om=nKAX@oo^aI<`VM`i;7l)"Lj6!,coYqXC$kgAiI:JoRb
%:CVIL@TsWdNF:A5Z4L]cQ1,T'iIKdP7Bn)Z@@X<i@E8HEJSEb1%TO[`=EtI9cndot)Fhh[pde4E9>A&?s$#'?=can3E04+.kD[op
%!#^XS/h2ZJ"'`lDN!Qu4cBE]I_8)@s]S@*=!Lk1/&eN^V7HQ?RXE#pC5?%`FM2!3h'@(SG@5[s/4r?br"*M0VW,skc<l:#&Qm!0T
%B<k9],kj3X65\QL\j<*qM[G7QR'asK&\(O"TG5;HL]_IfKd!<ZT6W[B=NkB1-.D*c`loP/-onEFBJ%rg#hu3mpW,lBfnV1clnj;T
%PcpUp$Cn<91=JL=BIZU2#XP.@aQ@M(2bKJRa)tqP$<72N?$PhbHNXSd/UH4j\o;JEN/"QP+RAOIe5>b1c&#;(e?ldnoT=h_<tOai
%fb3C'H\\q*hGR2!Ql&Xgkp#aJ:,jKoR8\a=!T=%C!8TZg5)r!'!IQjq=:A?ZAn^3[$=MR-<<Y!"8n/8>_SW=o+_-KFoUioj"kWj2
%J7.N,J1TU*Fqia1d=>2a^!o3MiJ%D$ZDB&7J0T8hGHN_G_fmLaai<9ZQP$SI5.gTJ19XJJ+Aner%Fp+c``P05j0N)LS]NjB'a@E#
%GrNs-jamOp6<QjDkoa^1dERU[()?E_88pWMZl>bHM0UWP/EBCNj9ZXH?dCH3#[Z_D`BZHi7ss(9EJt5k&HVT"Nk<1eHr/KiKq*pT
%UY\Bc6)i]]@Mic8-qKsUD#dm$7hQ&p"1pft+gma+Yi'$0[Y_!iO=^lijKH46U6j/EU0C.rjIA5^#&"[DRj@L2)olXFTV7SpSPHPb
%YgAJN"6h$R`5P;(Z9[RhS>,rN!!lqU$o4K162hL=`Sa7kD1SEX#0%;\fJXnY9T2f9*".]486D69H(6DU3ti/8N^JQ*bC:O%$R*8.
%GaSW+0UpH,4eNTo&<RQdmhfA015ZOI7Tr&E*EA>4>(p9YK$3uXa9BYUJd_L2iCBd&nXo'?$\fo86A!:'W&#(#L)<DqJPqeR"NUaA
%%2?9K5q'?Y_.OW_fJ^4rF/Z0,Wc19H08#.P7EC$^3HH$GXH6m9(5b%ms%Nr6/M(:qJg?KlL;ki6W"FFa1)M%-#1EbDKVfT4<1jnp
%r(+((MGHV[raW,?HJGO/=>:?L=D6k(oa&;j^&n<NK_jok\/\3RP`BJ@R@7NJ^bLoc=<J\d_,(]/@43mc2h@4/STA)T'9J4,N(M'H
%(h=W\8)OP.Y&9Dg&H[RN#HFGIZR^W3BWs0A^d!AZS#Hqhj*I"B6c-ZJ<Wn=08:%KbnM3T*7b0&"F!qm0fCAhC\LK^b,L$<gr"1B=
%fGLeA\eMMhknNoto8GAb6jOUuNTS;r1H_W2Ml>ZSabD"fkZ62N[VL);lq&I-$k&0oO7iX4$F1k,do\jM3u.$iR)UM&cfmR!kdj`0
%.G-`9O\Ee=52o%(6VXa=WJgHin,O:M_O_8?^U,d0ZA*T]2<d8J;$?VDFQ<gI<ME/#jC#%P-S`WV&gKK^?sp0ch3lm;K`ajfh;V8o
%*7AlFk[8Ar6F$j+4"Njf624=RR4bPZk"CmcP?3o6jHhYl2qRT8/$2#H\.LYM9Mr#B"q,8j,qtC33C>>Oe>M2NIri3Z2+@nNi>>(8
%&]OJmo\n&i^Cep\7pD:<+q<Qk/4+6B4EQEL&l=,n$iF!.X1lr!1a!R\4OCD]B*``N".1#94(s'NM;p;Y&U5EJ'?9B5FO:1F/kL?(
%!oeb(-HH<0CI(E!#?2a8"-ht<VDnoM$>L_*^eBh&XcF5_/s$Z2`l!>/9QUNmc2d_.>h5WnJSJYLe:pP^0aRBJ:AQGQ.:ZWa"!n%N
%)2]OUK9HFo#@Ri&A%dcV]a9WnTJ=4`R1'n1gW6"\n3<%S\*>598KtI$0K?JfDABl@/jl)#n2j2^<"kEGJGqCFk9."bE=7U[_=loN
%/@)?RcO#"I`.W"<O.f1GMgFpW0nRgA#g3_/fd2AqOWql@UfH#_VC!!H&h"lV<BVa:J-:T'QM<Z!<$D?/KU?9#K[&P>,iNc;I#i@S
%H:UA)&XG,+;"KJ70NQmq`+E[,B)+n,3XfQ`0i=@bBXj?ZP__%@;b-Rh8"3PjU"p&#,3MNd;HtV,7X@8Q3&\>U5VMQ@883#"h26iM
%9/eRQ'M$Aq=NMsF+3bS2i6alU@@71Oo8lhjK&dsV3[D:g^JHCH&l*+Ep::>QH4LE'A24_oP`:pfGehWd#,6(?MGQ6\5D5F9W0WhX
%@<1JG[rIfF1!5LnCd`6p;.D<MJA8TN&j:CpoRL&jXc*ZIP>t1f)FtW+b98AqNTWEk@Rl`@M]F-=H8dI2/S%Bc,VF=<eKp8"O!_/I
%0Q%h"'>fM>begIF4B!-AVS[OD5a"NS$^(nm]#u:1['3qhJ"R6N;Ot]K`<,J<fV#5Qg6EKm4-3bo$4E0S,4#U?P3.9TBTl:q5].Oh
%I'>cMmDg5Z="nt&B#_9oC^^L<FdK@:KC'7=A%*>"3:>lt.X>o"AXl3\'N-=&gWJI!VLcQQ[Y5Au'P*Z;%4slsMF_S$A"5s]-]h0d
%HbT=--*2bu5O,_IpBCg@9c(2ei&5%5$HiNXN=kSD^I:Fh4IBrYrf^I*'$#k-JFV2Y'J#l"OW?)j#JUbf4:aHIbHWjhCna?L#nHVh
%$TZq83TEFoS0:)R@GM1%NlCq[f3d54^Z4OF(P0=g7V>$,Gb_"L`kq0=b4]DXMXL&XJkj)1F@o"UjDC#]]X1Tjit3(+2Aam4!"p>\
%@E2T4RmApAk21n8ke!SHmPOp`cL"HE`F/`U.Wmj?o=t;eAD]B`a41ZI\_@NRNP50gnA#!-c'3iR5B5hPg-N(9dk<)/0#,2W[DXO8
%85#I2]b9r<T4OS#=)"aql*+"WRXTj:$Z5.'G`C09mp?7C>1`j+h5PnqX$IuY0rl+ga5a1$pR2Eb6?]kGq$,`$J>]VEXQ[.N`9Pfi
%[MjZ3l@nNqoKT':jJuBMi<cJq4g@qg^a]a1D.K3sGHY;`frnYhif'5qWn#77dqd`<8r7Aje%/,@#!l7L2;ih<_<?+8't,)F-qsU%
%W_tMIbs\g8C&?jK6*5]N2\X.LYCXZ$c/Kc5G#ZM*K)cKSl[^5.CpQ#S!LUf=ZIPV1i6,7AV-"qc$lYo<.le(mT#+>AZDrAeglgL"
%O(#dOH!"4NH2jgK#1Z>H(/?edEpP[<Pu?-crb/_<0uB#Dn\eb)KF^\3Art)V>4%u;M^dcca;TEG(Z,os\]F,O`l10.EM9@hVRVHn
%X!!B8\XWkr'&P3^bP8:W:<1!I`>)BHWRP%8V(1iTin84C;JkG#g^X'CYmI&Z*:+aOAY7iB.j[;)lSX0Nq._FbqG44sLG)T1]ZnT1
%VsVB*4bAQZB%-(J;nAr-b>#`H271<A*p="--2qWY5hQ9IXt!([M2`^$=hjC-o$+4YGb#pDWmn^#WrYTf@'c7(#Q\'.OV@?H+hFE@
%TJOnK@-agU.4@!!(R]$u`k,'fK3'MBJ-mf$$5cd"6[.E<jn;CW89hi4#3Nq/>i2nu5U.aR$Cj)k$tHOj*<4)=j5r@=19hl7gD-qU
%a5`j^p$f\M3-(gqp8"!U)\5r^;`cJ:]l10+MH6;_9^PUHE]dGu^X]='iBU7[P2LGteggLUJRYb$Jg<FMN(?Mjk'0]T]p<#=qHl;a
%GoW$CVg_<J1CO>-'EmG*$NG5'U.(qCH6"?<6tkYB"#=Qb9b/fA(i'dcSSjilW=P2J?)A7cRM6m`T[PIf].?&V#GP<#9q5Q=:su)b
%8ITe<9=#bYIf'=,o);WuC[T?i?+E2car,8%/ss7kF'!8Ib5Drl0uV,fQ(+j*GLc<cUXd8Td^hZg>`8sLgm=N-EcYT*m`Wk'\R-SG
%P]dSM3Uh*qr\qSq]^a.\p\V48A_\YO-PeBlj6aeFRJZC?`,H#dm;h(`<h[^d@sL,_lB>5<'K,]mC3(TG>ZNr(1t?M*3KpfOG.gYO
%<UoA-iQt<.h&M&mb&LBuH%J(9%Ld>F@/6F/B90%To&/f5jgRa!_[Q/5&]$Ah>[BiL"ge"soSet%2oGT[0!4rE)CIG\lV39!@ViB[
%3mB1Yj;1Hq4Fk#CcUG]hJUo8M8"F(91Q):Z(eu(Qh5P_F>Yo@H]m:ZsqO:.e4s`CC49%-h\pl(-_^72)E2;]3$fc7!1Bpa+:=+2a
%j+/rH&XS_"$]717"90qlj#F!eg\^Mm&!-_H1l@f'pUT*6P=Em3gCh#+5[`l$#%Cd@s(r]fG'5mC9`i70$b+$4\`dL1V(";\DrYg5
%m0":i%LdY')"bqd&;QR+"erS90I@$Wf;u>tC487i53tsW`]IjsWRm#WEPHlfZ)9LNhOc==ha7=Ll.3I7H=nP%j1oS>qhW@^[!(Fb
%gAP9;^H.9uQHu01f>L:sR.?WnJ*+sE/dSK1VXOPDZ!B3bM+m1sO_GXh'2N-o@mG+Mo9e$LN-"8YY?^>1OW^CXU_^=BWHrPBR:j[g
%]O**j0jpB:4kVg\E<lG!;6)Wh2K&$L^_fPf'Y5H/0fJ]6lok]YqfH:"c9\)5nG7@AdsI/e)sc;3['Ot84ep]hmlu1.BT`cf_ca4K
%Q=8Jbj'JAGO-.RHF/Smgj-[`j,0B97g&;fro_W:uVj@$g7IeUs"U2g7>G;0\mdYr:T1au-<7@IPEA+DEb8=bI1Wh!R0N5a.F:r(&
%,Br1ul[H8*=6]GP34g)W9dU$N-H>38h;R[<11>$`YI#3JYN4a8>n4Ne9WB'Y+oWeahPsk"a0-r*NFR!eMGl)pVI$@E#Xcjq=Kd"s
%?&T2KRID!OXN[bJe2]W"Hn];XVH^dR3JTVQ(OsAtZ)JOJ0k*.!,JrF?o;B-J#.a-$):[Xk[o'P)X_!HfC^4tP:bXmH]]s_0a"V;1
%S&*fb1F@m^RZdfP*n4[f'YRDD;sTCpP)mHoXZS&:Wg10a`CQ+EH.C>/&1>pe;KZG"'SH&#E@sXg[3c&HdjGqb#1]!^'mp9t*1E'k
%-O!KYP:$^+)#TJG(_9ttrCI$h`1Xn=s#QI2`9U,)PcL29eQ8#N2.#EiFi'`(=0L+_8a&ZoCBjOk@^_LWcU=0.8#CC#1/[$21FqFB
%)9tX,[1(O0)#$')--dN51REtsR\ulRF`@06H=l*b'&TdhSf,jCM.'T581mLcU72'dP^?gLPjVI&8fV7$\L@&SP^c'Tgriq:ofnOr
%&ke$S]i^oiU.hPu&8,Qd`M/seU@_U>;iutNMoMW#K\`P2PW6J&$J5="?(+p?WJS$KGMoVqY2sJ,SeiopCVCFfG<*Y//Atnd`?])8
%YO4'fls8]::7-r(*$Lb>r=p^>2o"TiiYRp:]8&&snWoTR>e>o!ZfZ9["q'L5D(aH&Ec!/ag.i;Rk2tCr1=pnYe@APJ9==f.<1=hB
%pW?U-9=;<0qbKkmk`4$/"ST=&%4*`*n@SS?1UR6CB;<)FOZd?P(atcXd@?3-BZ=!aArLOo#4tKgKZ$F;8QfR'R7C=!=8q`ja&VTK
%`<=IK:)be20+<]B"$RG9L/dGLs/Js=r`%:JeS=kc4!3dcNC_ksJYjdD/PSg8-N$jVn@JkmiH5OB8DKuImoBO/I2NRB9\oN=`jp,"
%Id,%/TGhHrb\qlsU)RI.IOuC/=82^6QYA78rWUnmJmm:.nuT^O=:Z=BR3_cVi;=D?pa9Tos4@!MVZ)C!9TGNa3E?K%NM$I3h,.gP
%SGGs*2G$2r'@>""'Sm@f],_Y[MCo*6R[BQ[",8eJIQKhrNs!;(<2M8boEi)Z0jkj,\(:e90f^)`Au0oSo@n7Aa:)h(fV\2glc-Oc
%Q'p'_J*HOCH_D]tE?jJ'CHF>o5kC1goDRSBrpOsss%_M3_.f\+q>P<6XcE5Vmp?m0\-&f]>;:itbj>/^bNF8spO#KPMYWk4I*[#N
%k<#/qhYEc3/B!,%HbP!F':J=b%U"f6I^L)A+28rKb4SIJ.\o[]7:hFsl"r+/lRdkY<k5g,[/=0*#A:1\LPbk29JLXJiJTF/ZL=eV
%0c)9n@d5eR^mL)h<d43cQ[R>cOZ<$k,Gc(nU3VDcY3\8;2NNsu9q,\Z]'9+b/WcD"('%RL%^s)OJu[_bCAR%oT]t!^mdeRhB@@JS
%Rm/-AMF2$]D#/GTC`Yg1a3Or_2^cW%NVBbWla2F1*jU]07*S;#QPBTB^C$TB7KXlX-QK#*=3+1p7tEVHglspB2"nK@SOp*loBST\
%Mrqj2W=D,!)L_utYNB1R3A@-ijqq(<+hpC7ZG4L\ZPB,"c9Dd-g$]&OfOQ%JR0R'\JX9^J%Ds_JnA:qS'RuMU?KQg*H/N6TGaSeC
%k(/jJ0UCjPQb*B,-7@g@:S,n^"H\MriL/p9dQP9Wir0po]i1#(*\s1[A=Do/-K89N0^Y3$`4=r:g+SqO"2k&BM16ZWG[E+nLnA*7
%rS$cp50@A%[X.i'Wsjusc^!N)$aaVLNq8a-k/q\H*<3+P2>%;3^-\5*h)N0#l$hI(FGG"0hnCq^I;)SiqOb<rW-I?fKCADeeGS3=
%N-h#UVt)3Q(]:sFq3+c$1OkoX`e,JY0qM?:PpSq'EF9W\#J+=<BA2$KlFB$e\n_%XjG'O=N[_PONTZ?.`rDbDn11Pd5Fm@>>FGBb
%YjAoUG4.Q#P\Mh1VpIC]`ro+ss-fGQL[W*NbcZVm`#u_]Q#`rG87$4D_!#cg\ae_AhoUb>![jR9Lh"C'1UD'0CECN`!=rfaa-]I$
%fXV6,N&WN8itt_\l-:3ncf5l636&>-bWLn?O(6C)*94dI!bcqc1<An\5',s!VnPjgNeq5WdOkueE-1oE=RWUpNHH[9=7(hJ7:INZ
%eiU:7;VV'a$`[n%8HDhK&UU"8CO<4Q*oOAN(f]K7D.)bN![YIN9VQJe`_AU_?HXuYrN@6V?Adctp=,^Hg:Qf_5M#[;21o'PPtojV
%8#\3a@+#PEE*P(W.-;=1`K?#KMkBtuB_V'-V"k`r_qAb`=!5Je+D1WXV#U.r6%:ESF4t>7G,deeZPaIIhgQ1cVD,jHCU)ZJ)%"jM
%m?#p^:`@7==IQ.7bt>&re.`_:%VX0fb*R.@;SHT@1G^IeEIbUW$"*Ef(*=chA`c>LD30eP-lCh_k8)9J-sl^N@e#Yh:ZoIIgm=MC
%N1508F)Psac-;>/(IKk$]t*A0B(!pg]t%kHk$hT#0_a_lWE"H'T8Q!ZF*DNicHY1U\NAEh/9?#Q4FO$T\O/;;%c)CAPcpQ_*2u$u
%hOJk`]X_.[b`"Is:Fb.<IkHK?3Q'H'gn0?Vr4NIUVAPh+GmrKPh^^Fr+*2n7`!kKQ0gXacO7<!%(M$2d(g$r;JNYT1o<RYHDRU7[
%-tmk%9)HY@XO(.OrM(8Y9$$<mMXFq;'RFBd-mh'__F=\S]U@iTHPbN9[>St#50+V.@HQ.W"Jo:[DA(4M0A/8<ccc37'C0IPPs7;k
%22]_S$e*j<;C!(=_A<-<c!4)CkEX*XJpLWp0m&B;M^:$B):ql8;Gb>'<,-QE='j"0$W_KE\HD_5@)RLFmEFdjp^c)lk80\fH48[%
%ITC3S=?A:Dk+idDMK'T"?\M91_tT;)P6-RTlNHY:q-2u[^-Xl&5Mij$UVAf$&d%scE1'pO;eXG#/VC%2%.<a]hO1VY@Mmc"n2pCV
%rCnUC?OS50B"RY1,H1K`!\eFG2i?`ed9e_fju1U/T1G+9n4XcipF_,Kh\)1BA2_YkTR!d=03WD*_s0W+""R*']OE;XgGg1&4$eU^
%"2h@TLUpm?V]1A!q%[0h(mBTgCKB.J2*][Br\LAois0\(?T[,RADM!sII'sg\r_!p35kr9g6H.f"[DCs0b+V5jZ$>%s-C8Soa3Ig
%6CI/Zg"24i(dX`XCiER;T"cL3AnO:+l7?P1,4='XWpfV?7/-7TDe!^<RDgcMH[%9mr1;SUQfMmJiVs+qP9o6jOl"*?+/7aGaH!6$
%?+\Ip2'Rro(?JrKKC32R9ljAB3*FS1)Dhso!B/bCidP8*EF0.-^OIGFOutSmG@[LY(dh5O8Ohu/glh4%U.c4$kNH86%m*ANTA`Ei
%mTj_dYL)#4m#g)>R%AVdJ6N>i5c9,!o&b;(;)0#]43j&<B@<<a)qE1I'?)q*3,;bUo*4l9'A.6+r+;YNr(Fkr=kj_B&i$gJg>6Dk
%5DpJ1m&E4JeYYpnY7Od/;_O]cU_l\X#ph;RZe6M.h:X&0FY:mMM9<+;9b&<_#EK"[2SFG&.aF4lVNBs/?0L=o#7[Ool>\c#F!g6e
%[RcUiV!"G46*!@%Djb?_mc"'n^!9P-s%\I5?^eeO++gkafi+/oSU+F&%#N,#/@meLlGq6Zh(b/Rj]VVp;NH:u^]-B3d!#usm^Uu%
%^IRqW+.,m%**i>sCpVU%8K;ttn(M\,NgaOHj1$`Um+\%3X]DTmro7!SK:odVIljKr!FKcH-.70-!(?R'rW6b#k(aKVS)G:I6)be$
%<ttLjr;6*WGM.2.B"NjXK"$7P?e0kuFo$bb\b[B2_#pt9&P2'raFnfH=K+0X^9"+UNpr+Nftr5W4=iLD5AAkkD%/UfZt6kLCX="(
%b2A8[W.o$XL2Sj"7&54Dq15/E^q26rp)Qtl3(U^^W$KOcK.g#^*FP*e9SP=>O^t5olQS).@#`4QYugVQD4^iLI!M'HYJ*5P*a7qX
%"haq8#f`@+LqW40rqCo_-2>`>o9#g)D5$Zse#p[S#F\Zg7CiKMV_<rmC6q4$]DDQ%,,(oVfEclQq4Q6:JcCi+g-?BG(E9(KBa6kG
%.6&`3BYORT&(`+(=_a.MX.)=1atTO(F>6[-03tY3f39'K]OkqpXN$";pr-?R?I#FurGgss<<kH@%[O+\l.-r'q%1e=<.-S<!+&^k
%pcQ7[8[;//BVt"&%ge[AJ4?U>8YZ!.Ul;[=Q7h0jU4SN&=I]t9V'f"DG8CUUhr9OtX?.F*O)UCGX`dO1!qH"d8T_<#U!89P'_j@G
%V>_E];]MD>ol&1>I^*qZlMD:BpC'U`<jbi:5@QaO=dG>-?TYN4id92fJ<*FUV.ojp'"RBXi7O%l.Fs,^BbKC"A1%mkr$@9qCg!3!
%jQWt6LN*16ND6urUJD1Y+EatU0FFDpTFD[V^44ZsC0%LXa$",lrJd\oQlmj"6G<!smQW$Pmu*t9ico+F&2\1ZpmVJ\p/RsSO0%/3
%(t%VI_#VW.YIadNHd-?@%9=4`G$97g=CCh]\kfSanNmd?M9j\%^#DmX[/..+`>Gj^%h;u\J(+S;\marC0I'Ej[7e9IQcgC."6A6>
%JG-C=$<Y>!\tIHRe1*[m`kEY)VZOU&CY<A*f1j$1WdK`6Na;=U!lid0!r^'b9=;BOB5Q@I'6h42BVqsRY?GY\F+.ZUWNj@\RMl-C
%pnV,(:W8R.LnX4BWL?rTlMFQ)UZT&!ZI^.@m-QEhEIW<jMe0W-(Q0@[[CaD%AkuD?ila`d'i_lTT=D!![(.p&p2)r@h$0Enijp"L
%)SE5P)4JI:bNubGYM$Vu]Oj/icUUT@d'j.P:X&'h0_H>j\_K8mc"l/+10od<Ehefce[_eOcj(u?,9_(9h@sSO$rN8B94U*N+E?DK
%g3s]7D*RN-U>\!-Ati;)FfODoWu+)\V;epW;`BJ5<MT=,>;tnlljQ.gL9+eIN\2i?*TESjs5p_H+lmCiZ6+^>p7't;`2Wc440__e
%[(XXT7*(F[CifkbUgb9A>oR)`0D9rhPqq8V3enkAp9=tL;Jp]2"R@lWKdnS+3ij2n^R^0sW_'Z$q`aLR2fe.sBbMjXE'l"Yb$>I:
%3pd-5rqIgfqYbKipZg?Nn(LPW#7\d=Ef=hbpWKI#j"/(>VYG2@)I.U='>Mqo[Kas:g7D[h/)%R)dq5'9`9Z$%q8>r+a1r0=SC0:+
%,JQJ:Rs7qJ)f2of=Ki17](8]ZPV49Hd_*.@)j*#?$\f&cMV/PtIK,dD*?^3'`0FS5O@%Jih+tE3c/;XV(9<mdf$_t<qqK>$Ti8(N
%PrOE,Tse_qA+ndag)hZSHLP/2X3\I;N!-B\c+SL_^)jp&ZL30<nu>6U?+$Fb:3"_dLE<s;=UKgN="OcA'nOH,[jqbMYh/.f<UHLd
%&sV3Y'9i`Y"$9BH1`C&1-dM7uHASD8I^@G'e;%P3[idH2@c9H>r:FA]+j>tbl^".n(5MRZFuP,tM7jgJ;R(:g'iZo1/RD(BZGKj?
%YFRYVeB>]&<^3h%'joQCs7@PF\(6+3MX$M!Y:EnQF1$V+NuD6(5n?dT_CI\<?G0>*JG8Qqi-6pU\Y/I;OnD>UW2o7G@JJ5:_2PLR
%hD^s"!W;5%p2iJAE=18h_@be_\5P3Tf:(B@3[%6KV8qX8f;b*lW'F(fdo`W;@GJ\$1]>qp@0t2*VcH9Z$BES-lQt[*#j`3Q=?k\W
%<%B7O0#K#=rs!cUL2q&_4tr3bI#9![73@-]Ymo67Eure*+O[g\@+p_(*ntWNhi)Dc%&T7tmCHD-COGg3RT,%U8E`VT5]F3Z0/gHU
%.--q&U\uG#=0"]!EH`W[q-YtcTsWE-%&KqHm0X]jBD"@e.kdj1^$7j3eD97DIu`9Zc_F^$0ua37U^]FA^t@miZ5`._74#<4eW0_j
%WKRFfE>mLrNDU^5P))]A26cdNKkoAMXf5q432&*"jG)=YKBb4_GjNOHkQ1"rgGLOmf,gYHWBk2`A6Sq8Ebee?4i#6e;+&*RpnL4:
%j$1?c57J7!Xja>ZX-EliaDfaDYkbf`oZ@n,?55#.+(j(6)Sd8&s.=3#I\:[b_EgcpVEFeZ0'+slhZ0E*g7h/F:[/l-#1s)\`1r5J
%qolulRtgDS"(<Yh,oQbTjtXbT)[oSWph!^f`3hpn[a=k&"jJg<gtu1Bj"P.jJ)BYBmMm#\MK9d6P:l'oQ*j"lDcC#sN7cHYQ[+<)
%B+.;`/f_"-5Ocj]:+bHZIU)4/A8uKsgt.?jO3n?BkVHo"LQS(r"4:@DNMAu'+8$a]^-nem<5[%YohC<i52qUOC$7OU;4e]!4R+5K
%r^@IU'YF9)[0PfA*HgBJ3uWbtAa"*26eo?UKG>\R,E-V\[+a%ec,afm!ck>ersH=j-SBlonkB\Ud7o7,F)\D4O`lbfV[_VRp!t?0
%,0_kd7/_,55t^d\OjT%4XSG$;GHd(+GLKR<FKDi*HLPN73=7n`Xna9QA@T84GnXHrBjf3L%cFRKA\V6UY'U8&1jpKDA1B2aX8Z*P
%L%eJ3R@PJZ"<go)Ep@9K&X7ks8p-NiT\riM3^esf&^)*7j"amrXUTn8>&b*]=GHu:!hWSQ,nCB2)X;8Cl%3>'B<_pcNH._*bDIO3
%[8F(1A\T/B]"sYoPj2Q?d8*-[B"Abt:Bjk!V1i4ag,G0A#-e807C!4e/;'UToN/'k&CL(!9'(h0o+K+@RdFjn\5C1'bTGpu;c/:s
%*qgE3Wkm5Sj^tQ?H&#'GJrUF+H1cIpJ[1n;W0T+h>,+IfX4aJ=7UYq^7_6R6=l1s$'buVDAW><QXL)d"W4L>qcmX+XeS'r<OCf@Q
%XYapIk0J#fQ%BV#LDjjiN>)dT<m\KSIiHj2:^<99B!GB6eJp=pgs[>b'CQsP<GGK+_QXD,G^B4%p@UA+65keH`_ZoiWi@B9TgmW8
%`>5X=^eL:n5)lRApTM8RR--/"Wj^?B'f7fO5).:q4#Yqsjf704Q`H,.<RC1RpXX,&/mAAdej,a3f5B%pYBek(<SsXe#Ju>*)k\'!
%orB3a[pr)EWdKYsmK%AG=$<:PA(5CWPQOmO2PMh;Ah-&mh/aFgD)63oF^/4@mKc-g'JMuc0jpFn^hM%5$4:HF1le>S_%>oICP099
%=5%0V#90<-`u#2EC:5gJ1QDu],gZe_NqGt+&8"qG+f4&B@Jr6uT]N,*)CTi62dY0UqQ770hi&/+m7K6X<huA@,8^6In0'Qq<0p:]
%%YfMao;_d\N.cL"Z6qQ=a.'=n!VJ5U+##86>^>-Hg`W+pDrdCJd6(g48XK.VlBQ8-<#42k&P.bYfu'+.BOY4Y*$^Z0dS4"W*;:M=
%N%m`JAmr^%+D!Z1%X,CI0dL"*rIMP^X8>Z8cNbcM^$H*%;9Aoo))@pt,-pSR%C\$`I8mjjSF\oQC$9ksOi-.<JB1CaJ+7j?6F:V\
%%A:'(mFY`BH,f*R#t@1djTj%Lj)Ydc6d)mk)oE^t9u&W2@9s)'H_B,gbL.1])\TY8,InMiU5WN,oeOk5kbZgc`"fEJZ#@is^fH\e
%datLG/4M.6*fMt71"r035(m@R&*,78]J>%&)DLm!q$5ir<Z4t&e$CU?6Je"(D7.mu$4jK$`TlmAD\IBS7*i`m*/u#D)ID7'p9&m`
%ejltt4f*/)?%'IhX`heb!Cm(-i(+s&#ha43E'_3V2Dj(kZ%/e-S('-f?Oc=m2SDRiUa64&%BM"Sh'`R\Afqb,@R,+jXOI_V#`kPZ
%c*l7/&e=XL`m5ei:8isCAVM#JW).''2h&qGGYLEM^@;k!(mAWiIAZHlIQc(f]7jQSJW%94m0!`g8XT!Npa*Q>#KDm/LhYSUC"!VF
%eul(6+$h:%!-+J6l3Yh9p^KrMFaEFTlA8-([7`pOmSO#iQ6"HU",V2O*L6OjKgO['U?]",5;3<T<hK)p0b(4<2\(,C2jpROA(VY<
%R?%RY#N_9XY/1KF>)?#Q(2j@K%j?2&K$\S<=_Wgnj^!dh1<*l=Pu%>D-m=SM=obgMmU)Pcr9pngEB;OQ&ljuY;XT7Aj!^@+>Z.Qq
%B86tsI1Xn\dS2NrJ_fk0cAqbqCQ21Iit8^*\a2#mb'=G^'Nsu'p4[g=]#/^F:bH??M"!:k!KZB:'KckU&nP8/W9%EJoI'\lJ6fnp
%c.aY#$kDNXVK`LGh=2;&gX-oe^iQ2rpTd]s"f#5KYKSq94($Bp067CJa3GG@5s_j[J4pa3N&O3M*6C*,3:0aZ/q]9P,XEdtAa$TG
%`dWP(,-#=`GiEperTN*/*5/9oFHJF$"W,6Fi&\`)(JJ<bVeC340$<(rBn4'@QTmJU9[]u(c_K54UM(U7C+s@_6Ja?#'=]Kh2kAZ6
%h5aMq#]>5"ZmJZ/Bf*=R;UR?r3K7Qb$hr6m#8991\_*0F5H+G"oMft/9J:QAO\g[VqZI]n%aqrL<s6u>L)H0aClC**H;d!tj,DWa
%#AKr`)5P\)+:SWW`D9tcXU9BA\$,J\6qhDiZ\M[iFWEK#Tmm:0N/s,\>fTab=e?gr,=)*)oe0`%[%B0lLikFc?/hlC/fQ0:C'L#2
%Hf+_Z9:'?,XbW-#=H8B4EAphQBu7Pq5rUgZ8\4AU@?E$@'gH_"#c]T]+X\;UINMiQ6f7[KnrI,]0DN\NVWs).RPM1GFJI6#5/0BL
%;">fN])VY[!<&gRQ@BoLK,e&*jO)6A9)5@YIDB7"rf86bq;gQZM@B9l?8EL2b>s9pT./prp)Gk!Nd[=u0jRBuP<0fZpdOm#q0%*h
%cYjddGIIq9;Y*JgG]g7#YAYF.PKe.p\SOAmH+&"jXR0$q#9SCU7rLIJL#q.h`m:8APKC5Yq.0'Tb!IkoqI0K:Fj0fTUS$KU%$T24
%2.,aMnE*"M5FuKRO4RBVZh+V(/3(8pBDsNQdII`I0V=nar43)N<`\GEcKEX4$iIM'+1&Pbob9V3Z-'!58t5U\6m"51/%kt%<Yr"3
%`u4(8b8%ZoH\*>8@@5l9FQO0_G_iaC:3MtA%s<-kkRa6Pj=7:\%K&aq2=p'r<"%QY<;O%bo:'+Wj(nR[gA/D[FVWeYnAdDmg<F2m
%4u-eVR%%[<_?u"Pe]0%%X`mh+B'8_a=XZDXG;<l\s62m6]9,/"S:5<,'m?kn28JtOa.:BYS+#rM/'jRQ00B"X_A_B3L[Jj[eh`6+
%)_Jh&+)(HTml-NXBBmUbT?E3!c"E@8U2k+AVV]&9G*8ik`_C;s?*">h`tqom>f,)oHjLnO^12kZD]^e:4,XK&lh(W8`9'nq!^L%:
%q$G2^/#)UO-8*]n"amY#&l.(+U<1,!5'?K.LM:liqtAi;k+qos3P2W&B[D]=e(7qkXlm03TBn*6D]\=Y5?OPa\!uJLcb@,qA0Vd'
%G'eo7L-8%':gUm7R]-JBS\jF(hN;B_/=klP:S)L-mi:\pcb;Rpg$:`sKgSL_cmeqk\T.N+ATE42h6]2.l7Y%O`CJ8>\]T%4DihAB
%+1BX+TK]c-hH^l%cSc<Kghsd;=uYg%HhDO-Hk*UY>0i7Q/sSqtbfdJR=0S9'f!?h"ebf8NH#Ektb>t68ok`/`]!Ujaes2h@QM/i$
%>PB?tb/11q0_TsW.<^k5le*<GC,_nG;sVbM/!h,$Q!VO=V*=,=m(pM]n&"W1rCOs*1V(#mVNQiVV-7o5r;92CR6NW\Gal6So')&j
%c?+Ujf\46($d#fo2d_aZ2r06Wltgg<$Kp9rO8*FoYSoLD:[:,C?%:F/]6<\E'G>\33OuBlEAP0#."@V3TWMQJQYbU>jX3PFEl#nq
%ZC>*I>(*#JgF3?KLG--ban8^Cg#Sp7:M7f!LRg*?oOVbh\T(o#P#Q2:YEEYDp65>^qa"-K]XF!co&CNXld=^iUodr[PKpK:4m<`@
%kK2!#a\U$\&mYL.I'S-;-b$Ql*$q5K4h4<OX/kR.m,l351A?7f,.Y&8I#om!IsmW1^=;q>gcK7%-=<W2RH2)kFHJ\5]"XIm?FKQj
%Y:_VrA9%(R8A8-]]M>&@^+:Pe"HR_hmk13ei%Q80]XF#r?<'385G+C*P*]f/`FSd=j$E79]Y0rM$+tHPG$0*^XDP]MRLG5)]?.7Q
%o<6:0,OP:nEmO&&/2jd=$d75Bjb;6S2m4%KF&/'T<,:aiJo]dd/a2Ic%>J">^MLVdE"5rM(Uc6f*u;:d]Z1E+RW#qnjDI_M$\_A0
%NJ5',He!iK&'p:PNlhUH_FaE#IGo>Glu_3g!Zc^1<#6<&MTLd1b8Le;[C)na<*hos[Dg/+KuUC(LVpK#?<`<q`TDflA`N%"i`bI7
%HneX.ShI,?>A)>gf%1_/Rb(_jr-@UCn_)$NGDl:7(IsD0Mb7Dts8;T4iphe*`o?6L-`P(oMeai$+5OrRU3Gr](]EZ/D=NPXnd>l4
%=?jp`/@Lj#f+/XWSmFQ^H'GpiYl8A2k(0i2o#h+kq7?:8rG_<"_=l&Anj+n3Xups3B2T6Mf$DSG-]_G,*h9,eG9;4b3'2TID(`PP
%E-:[@k/$HJ<p)cD]pi>#DKVPd0MBT-%el=@4"DD=e3gFRA@45Z990UM\!ODC<H2aIk1.`)_943A91:r@D!C=Rqp!QelL!3"ns>6A
%o]>*(nP\DI<*N+`4_&d![esl#]j,>()tq/"o&d4RIed+mZO4T$moj?WQOhs.esB1!+$EbUpM0GCfi'B?o!NDM?`rS<e'"<3gA/m3
%lTDS<ni,F,(hXr>.pK3c5-/:%#0+gB;6dcSr*fKeb'@R+Z1=l8F0K[r]j5!EmI+>^Zu;R"7;99;r?SqB^2i,4>->9DqW*R`?JR&H
%]idJu)7b&s0.sGWpu%E<b:ae2X4=:\XgYPh(Y2WmIVEXD[sku%n*b1u4oNl&YO-e`\(6Sg\)k"V0665kT7c4J[EA1l%^Yl:lBi*K
%nmBujVO-0n5.!N9^HR&Agphe->^tZrI'jr=&)RTjVh^U=n&*&tb/a5egVLl+osM3nO6`5J>c_j,?as@eIo``'%j0o6lfSLkRd8fs
%CMEajJWjDY0:^ZKbbN^H`U"hOY]om+E@Q55BW"k/4?=t"(*C6gGcX+ZIF`T`eLkdd;[`9IgJhp%HTbqYVD>-piRd\NbN`)h3\s"a
%WQu[3%oTn$PFGP7qONdUcb;V7>K`A`oWt"k%[2?e[X+N/gOK,DmCdoG4C*A4YAPo(cl[2%:/3E#SFWDbOm>.0ZuNJ+ei2I!Idq+S
%aO/f<HMm#*=^B97<qP"%\&qXu.k!()a,A*nFoGXVI&3<)*<oQ2p/^or(f`_(gJFLVf5B)$:H;6Y#I^L9WjtBs5<h?\QG-BTReC9'
%?/#j4WnPYOVmkBLLZr*HlkaO+li,n$^6UG'Fj!naXQRgRYOuBeqa1>H5'WrSftV]hL%?MmL+tU?\TQrS@scmRnTK>sGk:Djg[O)a
%BGiE#6-ENJIFpI6F*kaYc/k88f,I4qAgql)QsUpu[&o)oZVN/CrVYG#A2fCskt1E^\u`&8Xfq0IAc(Ek_m8++EWJ&Qm\cCim'CQr
%eh/n6LN]_Wb3%XGgj/hqH,Foqb8S[<mB&aRo((HMGOambk%an=@lM#Ieo5!`gcTaEq[\5KS]?dL+'.74g>"51,XHf@h;*JEh_[5A
%Vbck;bgqE5eR6SAm2!/$q3BO^C&[/l<r)[4b#[7qc6"R;Mrs&4\M'5ga#Bj.a.Dm2mIAf/GFtM'T"`H4fm[%0HZJ?+Pb)-M4a?du
%n\Web+76dYDEl6MIb[,7q/C9LinXWu^ilL$=FQ]2j_g].+#Z>I4_j=*5P5AEnkY_ac[E6A[(GiZA*YYkMQ9ClBB@ia,Er&tnM[.h
%mjjfso%WKSq=XP`k0&X+P?iH]q^(RBlI<*m)bMp`.D*3ZD)=oO0MF*Ipe]:J[/KAsZ/'kk]=Qc\b<L7#.Hg)n_cHcU;*(9JG^bju
%2a/;tG;bbr.m$nsiS)TC&'<$jj^IOn@HID[X0B!Oit`.'gXh/&UNUE3\[hEEf1\2sG5'PtEL>RC9;R9sYNouKkDK-lpH3r\]RBeA
%AnV!dm:#[6n'UCCmCg`tg6]M)mn:4)0CE`L`EGbnI'N&lY.lBVhL']jF67DU>WmDjHMQXXVmD`Je@Hbb/+*:8VtkN9ab>K$na@8q
%1(X+tcJF%2=AtDr#MYM[mbm_[76C:-h+A`kgXeB>)/JF6iOQLDGZ]=j+b,_?-u9pc5:P=6qh<=jUTZbg/'$A'[s5R[oL%g:UA_(i
%.f&V7o?&Kb$a5TGeKl'pe^_7=G-\]!XIME'^XsoHcGn=sg>V?6`=7=mF`DWcjKeRFBWZ9C>kkOPlC:%dI!WH9H?=Jh^:J^jY]R>K
%3rAp<k3I61B<PW#:Ub5fbYM$aZ\+b7K<qW?SM0/AfqJMbS7f".?D"uRQ57c8=5,fTXQL\?]K'/&h0O-jHVf%#rqV-D2ZN=?jkGjb
%2<S8nX'E?m]\.f2me"n=n?04+[f9[IC-?tE;SW5'^AR59qnq-O;Y!1mWUfJpLWd^2a5k;51(<bolYuIdj6KdcrK"d/ec'*(f&EU&
%jL_Hg(&QtUMtH>e3u<7EWdR`jF0kjkc.M?0cILJ"c_'('9AY<7b7EIYB4pDa]4]/QYHrHNl>l4Oq"XE]I!0njI!Bp7EXpi:0MJIu
%;W!gmQ[<&lH?B+^r2QPLbI+\NCVK=*1&^,[n$7C"[rl_f5Q=ou3]_c>\[oJ#VI/YX^3>!)>e[_^D$A$#rDe:3k'3YEG#Q(k2Cle&
%[B7TPf:24Zotu279YX]MV7eP$&*pVVNU+8*\*e:EI!_1*fXIt9%BoVQkEStogJRq'_OK8&mFgN/XnG=:]Vr$8\h!HE(%jr-[%TSg
%*nfe$nD_!-*o("<5Ak/Wd:2.GGk&<VX=%Aj0OLBsgZI,Z4`@$^eC/m<=o./]oAZIWgKIgmErY$?\Eg7cr,ELD8`]-9(D]87NUZ`"
%TXobobo!s'T;bl10eF8LkhcN(4B\HBOUb%Z:^Gj$s'Oj'&epsHcfn:%@m/=08kiurR8>agTt2-VR971Qq7lr6V>>G8GJ?nE43VTh
%XabRY`+FVO^4=oG=3:\GIk?iue:FOOfEc,T(*63jH,cte6!$KC_?E+KKUu68juWX3Bo$DpUeO@a%6]8>GY<6;p4/73mV448/L52l
%3t'n)NhtDUInU25=![3D:[%*!aMkqPX<78NcQ6K"cYJ:(]'ET17If"37s3@hY3YZFM-&Bc"A3BTp$8Wm\XE&/+6bAt(Y0X1nP/Hn
%D,78B^51&YpBL@k4--1d%]bd$RWZAjifu$bf&ihhR(^(4s5m<3d6$e$[_lCUbtTd5WtRT>"CJBVi\Yl:rP1RuSe!q51D18,Q\Kj&
%j$P<1=(Fr'?)Oj_Bf=*eTiM'1\]%p9k\/,0+SrK#ifdG&6t1$X$*0up?G1riVQW$%B(e[AUp(m]^FnAffF>?`?;4`ee(%%99HoIf
%HhDF0Dg"A,UT7.^'L^?8<_Z6;8^]&Fm4&=RFYqq(>^TS8BfVJ3*sra2_NXEA%d4&GEDVb]/kF3NWi8`[G?n/`R]\$PrU9ap&n%_O
%3!hqQ_#nUm)r;J[^3,B&$1!roIY)`t@_)F(&,a;A:UZCai[<R%&R?&77E2No;!];aMIMu75531-/D\8-5+/:KX"Jtbl8EB2&F,8V
%3]MM>crl7"V):\m\SJ&D3'a^Z$am@!ZEq/>:E0(p$L)=W1t&fBe&Yr.MOJ]>KM"%#?J0E0*@k&!We91J$.H0H[-bGBZk0GDHHCl?
%"$33BD8Se6DXqZ[lIJuUXD.6^g"6Sm5ipA:iT4KZ=U9(m?+["29cKC0arY@W#6RH(:_D(p<)KUPFS#^\f"krpW#OBAeHMBm7*m-&
%OQ?m\%)%D@5pu:S.!oqb-Z*=*\O!:91aK07@MgREDB#so"0[Gk!E#S?f6#cC&l@WndK@3+dHDA2Fs7/qdh!0N:pk.]m*rV)*>;;E
%-(p4#CW^g;2IGsQNO5Ye';Z\f6J-,Xf[^bn.-7BS.MFUHX0.JE"3qo]7<Ce]WhVsGiX2'M5bTaK2)'.U3\3']\UmX>h-D-'6.AD^
%9a>;4b@JJc),](A`>7>f!B?@a[<3GS0qpK^$eGK]_SX,c%T\8a=dQ^S*T?5ONWEt^S4';9cjO&Q?qHjnd%2];(!:Vn9d/#l%$8<P
%,>7a8`74kZ>-oIrS+@ef3GaCW>m.HMSSN:M(JQeH9NX8j*Nh4ALo>D,;3Zmn?r1).Y`2Sab6b`1<NI[#E.uP&j%Bo:RY'?T3&-=i
%4VRr:@j.TaS'Ob3q1koSOCSJ3WJVk7<?5NP1Km>6@k#eL7Q"EX7*8s23=XpU<3cA,:r5Ze(D](n>;`,r6>4NLF[8k)*s:'$(g\*M
%#\J63*D9C%B2$1PQ7@1`6lE(tae]>%#E!#5k*cXp'G-=Z*T;\H!]%:)-Uorp6)'T@:2`e@\VoLJ3.Qmm12qY$$&.t\KO^k3XDJ+g
%"oK>`"\3.*5DVEo6;W5GiOG\+'plk#@6#H7R<ilo;HQU',HY(*NNu1b]o]e'qJ2g_T[<l`:u@\"<A^E!D-KF96t4]'H433N*g(Q1
%:f*1h$.CXh#lrac#//!EY2Ca*=ffJ(XTQ^,Rk&s_-s+sYB`<ao<%5Uj5Un*`#;`jBbcQH50/j\rs.]!moHXU2=B&`=7QY!?,?l?P
%8h'jXK[q:&KaDg"q>(+H$0D45F(gZ(/B&58E[&BGP,4mO^aIMA:=J=jasbCD6I=\K3@Y/_7(%SD1&"26iia<lW:>/:3b(`*`^m)j
%1:$s_T>+#:$J.gFAi"^o13=L--aZ5qi5[On^;cJUmS=]#%:R`jH&SN/=9c^Z#h\9AJMKWF7<6MDNrh$OdYlA-fO1/%Za!M:`d5*j
%0o.U)Uo%Nj;1o^iMS.4qK]OI.\51'Z,HU<B"XobK$jOdr72DB0(;jU@g#Y8]"=`t&Liul<eMD=^iFJ*=)3J>7hQh(o]8K[lo_5ls
%heUm5%l*FE:gq?fo3&T<!$d\,BASWcAn?e,+m1#jlb\eD9F*8,@-0GOQqA-jg$OZbG3GRWpnk0JbnVl!YdpkCH\TZLR8><=(-.D6
%X)/D&+JUc"aRlL7Eb8d2;Bt\T`,^V])<o.LTj`!kZTlsKPN"qe!)g(,:sN&h&V_lJW\%fm>f5*s/;CIOJl<Q]>X=+Sb\9K@:\n%u
%K^a+YA-XMZ,\a"`?m61T3E6GqWg_u[1SQX0iBjQK396B81"noA-r&!6Ug?cR=a3ceV&q3'6F"->3>:IiU_q6*I)i;Qbg*N9K!8CG
%bq1.iAkXb6WJi@GXtkbK8=Aa^bWmmQVld4K/d%;um(1u@;_?;*,ek&PE2aW):K.PT2PJU8DlHFqCs-5;:6(bNMcdBt<4$dM1e+7?
%:$)V8BC>VsNlqU!%a(#=f4[6diMduj)U?=`U]hio5h2+_[)!ZR%mZTk[mNJRY/,GT\b+#Ad[u?u=I-tI^hADDN(/a7JVDBG#3@9$
%EUHA-\f`s\8"UK@`R:QFVF"Gld'6VbOD.7kUl-dY4=n=JTp/QJYdn6On=Vb2RVafDYdcTh:^aQ3^9msh0`L'&[hjQ'b>k$SB'H#]
%1,O[mH<`6YNXaO%\f/_FS:GVhl:EJUFCo`$BT?2L.E/s^E2UrI6]+B[O:@%i&1qKBP5trdPq:DD"s=WF6kqToU=mR@UD]a3!TcdQ
%DK5o8[tlb/!"(;G%F0MJe=],FJHUtsE,ua%*B"]`1dms@;c055$=*jFM9&.0:cW(q,bqi=6ra=;&F%Ml2`d,!Xf*(*"dT=e_Ef(d
%T?hXFf7e-RfWnS.p-gU37t7OJ"etilQ(t<VXo4.bd'5nU%W,e+NYIt1ZE1Vkbb7/SQSTX\j*#sQ.NF"986QGGFLL=E<)G&Ke)CQ4
%F=NU([!4\7b(R<5=qQ88e[]'_R4cMb/<-l"/;<DK6$?Auc?@jjgn5^#:s2iq9Wh5E<K`+)El0k?(5Y"o'n\VVogg@)F:f-sARm=U
%>%e*`eM&W,<GmeY&'t/\`&A8.L_j9Xd/mU16q]E%nnHM]N0Zog^p)JMesDAU>Zqt=Ob)&3]7ULsQ((0L,]MlkRt)GO%[[$A;?-Z6
%GjXs&!,&6]:#Yo#9QCt*/5h4-fpXO+kGYNfPpQQ+TWWPC$IuQ,aMBVGiRY7o6OCh/(,_cuQWnX!DM6G3FeghrXQ`((laeC[;$1r!
%Q(+Z#UREcfkWf<rb'VY+rkGRYEOeBR/%F@AYeI,8RL9[aWORt9,n_mu2a]m960jT'Nl!#D(>ii1%#rF3-krB_9cDi2AC(Vbc>6',
%K#a5\I1hfB$?W='93i<rXTfEg@QfC0'iPibRNb)Z:e<&@<RH'4Oq`[e@Lk$07?4C+-74el)&+uL@55i8`;+J(T..Yh"-+^bSXa&V
%f-ee(3p43scHb?;SVaU?[M14V)N/H!7\a$C>=[n.Ad,k'Tc`Ms7]:j?7!GdWU:Q@QSSKWfDK6RLihc5^VCRX/<sGF*?(b8bYoQH1
%e7CAa'!0$+GtXI9+Fi"J"il?rFSNeqkgsAGd,@7j$`,4lSQp^b$Y>bOB-_XbTNL5(%uYRBZKoAgE7&.8!jnBZ;^a%&&SQ,`Z.H!K
%r4>9Z]Hq<X:`DOV:2[Iqc*D;ioW.lA@pcMYp]I\97&u7A6kmAA/[2uDGD\spq1eF.N2&mqa\XOj.n/Qh1'8orN@#QAZ,*g`'Sb[e
%nt#)tr0mM@r+bHVfHZhei7W6aTLI6CAtbn0F"LK3a'le<&98uaTl>WH;C4cAhn#g[?3)2t:eJOME#)VT4Q<Im+iRZYqS\%d0pWkh
%;d4@:)j-OYHnWtt/4bLrWPdpnQa>,N3B3PCKf]8;,KNiN&U0KJ,pLeZ.c2=6])>SS1'R*-!b:37#?t.t'7(cP"%.^?(rd9N`kt\u
%'aj(LEg,3UG=++MK]+h.VhH3cMnt&Md\]SAVNm?_1YUf>8mEFfK$'qrr*ZUm"UT;8D9u%0-Ier2Oc`'^9sM4<6[Qh=]-)Lg9b@TJ
%BR[I7#'[+U:&(rferEm/NZ1S8&Nk#;^5<&[Ucui\'jq*[4E2)ZK+1n(Bo>Pcd4Id>N@D^e2dpN,JQf4lS8Ii=@#($s&<5XF9peDD
%dK6aZ`Wl<R6dQVT!q>Am#K'QG0"b%]$cS^33f:mc;d:Lb89ZI76):MA%mekk_JC1?S^<l-6]4N(RKc@iRKcl")J2=P,QZflK<XiS
%>Vk5h/41sjk_$ZH=&i0W\+sDrYc8</atZ\E.D--)$b67Fi_C\igc'+"o5R/WK7Ng7&`t:S-nkn9:g?>S!of`W#W/dmF^Vj*%ag@s
%cu'Ys)UPetFs"5*Qt$1M*E+$m<'pWkO=F@jKC_eSYlkQY$[`1j*&Z['.YJ0d^KE/EiU<e!8$:_)e3k71"\_X[CU=upPGg9C@0,+l
%UG)kgK.A_sU]n(K/45b$(OTg%(G;!bM3]a%;kZ5G4-ANR-b,.DM;@9AU+)"')C`jdm*WTmEgP=68j60i"k)PEj:B/e3s4<H%Hs;W
%0:'b.gdmP6EfAC\UeFG_HK9[M![K%dTM,Uq;u#`+4uhOt(Tt@.:aF*r0l%CENX1W3.aNdP$t7GXd.<t,T2AT#GVDS')jN-,Jl5*O
%p4X`c+/WM$jonN#jL]CaO$q.;7*;/.Y_?C06SH$*U_=Uo673U.2jmed(>oB%I:@fTYRP=H'5DdY7-GmGj)Gmo[R\M7^1f!ao3rlk
%,ARYDd,GWP.0=2=%Kg5W8e/,X(mUSVn>"2[E=/(C7_5Q+>pAkd_D7nrbZeMl_Q^&8M\lUP2.:_0Dj;T')OBBG0rgY7V>3S:gB[c]
%<L<md%C'[3RA0['(9I&Y1F%N+(5G1=2FC+Pp:Y0tXV$K"%4Q1sLWgk`6("#Y@7mXC/Q3L.e3#:*"B?WpF.e56%;!ER2P!Ae!E39k
%qDW]:!_cLF,##7ooTk9*=<ppb)hX@kEAC3n@,tnA/IKth=W8Z<3S(78FtAhoH_?&PrUlpe"Eeeir;fduQE)gHl2]ZSlpM'4`Gn-C
%-s4TJKZcs9F-Xd'!j.ltAK=ug6:t`3%401g7gR!p;UmP>1>XN[RaUpEq&6%W>bOC'VaOfiV2g72MWP<:=*="kR9CKXTZ1Q$Yfg$X
%g<EB5[]FEdV!#gV[mZ5dO"!Gi&FD0NW5E&!mZ$E:5R=WF-=6=c=5ui^cF8mD6IJ<S*V-*[&]V[I!=d$qY&jWleTmgN3cmA9Wq;S3
%E/JBU$>_,a@i&13Tj_$a!qEB8)sY<QZ!>J:mA4JA)H?s<^nF=.+r%<VA19PoMZlkUKu][u,;tWt%!7310GKCbOVoYf>,F>n-SU`(
%Pp6$O_2+Sr\54.[24;S\Q9_kq=GAlY&ts;EM-qa+RSlL#`5'a1iLldIL&Am&cq#&+4j]rRRd5d,**6(!US=StoDC@EVA_?3gm)Fd
%T+E@gU#e,]+=5-X&1UU\QXZT#X/p)Y3I,=STjM96WWor-/DR8b-o+IK]7GqY35UTZ0[nQ[EtfeT!@VSYOWA$YqqX/1LFI<V0Piht
%_DnmE&-sP3I9L=[3=bH-TU>co"D*sWTe!bs3\"rdYU1J#<JEcCR8#$_<M1*Y6NO9'Cl9$M^;adJ!)[`]&(Zn1Q3Z*g0Kfe&V(gj2
%bCI`0*Qp\hC9GhIBfLBql69^>oeE7W%T7t6]58%GlK!3rhk^SOdYJ!HX!s\P0FDnLEipaYc'1hkg.BY6chdFCFd*B0pRD`JWE(O/
%<o;"[n.Tc7#?;Ju7aKA&SIQ%>lo?#^%.*GmiYU?UZQ8EDC_:(6J^r'O4J&OQ_VddT+phXRQc"m'745WE06_sU]Rf4"0`mh_mVmc8
%2uVe"VtbfkG#"@j(7ET='cV-M?7_%?@='60RQPjjCrT\6f\82N\@TW7DruQNT5a8>P5>cep_M"_]grni'T7rl;hSn:@mgY\R;5nI
%p=c`9H4?0PM-1b6,dfs+d1F=*79^*ui!@:3>fkMU)H[nfE,LV,;.sYfS5,@1<fYB1`aSu`A4C6AMAS%i&Ji2Oj&r1]>B8&ZMFg!9
%dN5;AdA>Kg7"ebgP(fdAbDTrCMCY03+uj2WD))u,@a0VmAr>q82L.-HmEgk_.pjO9J5XtNN-#Y<1.>H6"`#A9<=F4NFGf6kC>@\c
%7"$A!/BTOG;i?=ZZ'\ZJ#a<H]E_%(8*7)f]o7tIo(OiG'Y+71s[0X%S(J]YLcnQ,=3C!)RFIl0;0SEpg;bMoT=^]-H78R'K-B0W9
%!f6,@Sl;HS-pO"P9*&=?0oRF).8XiBPDCA&.n,11%#GK@A2HC'CG\DqK45U12e4%npjh[Z:9hHXW@Lr)`U!^NH;Ya%@].447p5>9
%(,]!aKP^/i5a\.Dn8O*fgmX+j@-CUK6[p;M_)=t\OgrdRio"%b<5o_@\,]t]7(TUEDcJNTiJ&3VQ6[md]l5X0T/OFj:X93eF."rl
%Xtu![X0bA-El0f?"?p#oHKehj4-%=n5slFi)0bBT`FbbD%l;)3<"[JF]@te/Q\dDc:7:++Ta_AFUS-.B$SsqNmcOW/_M:M4,VP6A
%5$dmIE:8q22js_!&T@trRkWQmgPWha4YT(BjSl^hi9[LaWt21ilr2nM5aMeC.'!lE+qhL;X\G.Mf48^/A6B8g>1hN`dY2l\29+`f
%"t."ZfS363g!2RaM61ih@[I1S]i,+*4<6UY"N972,%fl1'+\CQCCRXgnZ`,X=DT-LBk5itRTpiQ_X'':EC:B?-))BF.Z.N_(bfB^
%h2U5EW;BDWj$[J2[R#`l2Y\X,;N;5h8+-["LkTP;5uWrV%$hpVK!\"79Hc/E=d2rX:<da&p*19o'>T>QOt7VJk"/HsSqtoX/@Ae*
%eR]Z8'\bC-O2nYj)+iTC8WkW\,:"*fLs/:i=1:N!7HU8JrGkOd0[A5^>GopBPR49#+&bOB>ODN[EkdB)"gcj4)9J_5jC)/f*HiuT
%9u?t"AghO6jte52.B^qW]k,@^@cFC;,MA2I<(5tbaAFCrjA;NhmM@tUj;=.<YKtTai(VVQM'"2]Jl9M9-5k3O`6kk]hCF\E8BLuJ
%$3+iRm?I%Q:G<oA:Ra[kT@8tK1Ig>k,dqMnAp.=c-L;.6Utc"Ij`t'm=YaZ3N7M/,m'QH'#SiEio!j=nALDe3-7PP9Z\>/JdN?Y!
%IA(UYa;/"UdI;l3fqQK"!'b4rL?bs\GMt-[HkC0Bg`X$o!&eC+4DSSZ0Kst6Mdb&g33tpT[P5PeLa'<X6UCe4@/0njbh01[#U,jJ
%,E?T_k,,Amn72ulPlp``W4CPU#*_s<N%IfjUgV&%Si;1+BJh2M:Fd^U#ml.-)O%D6bR1YMe$`i9]HsZOaHFZiOgifQBCaeI/#H=)
%&n)]qRZ>UC6N;FBVSY*T]<i=ED)cA^iJ@m!9kJiYDQ"OD<or(ReL'tIrfD/@eAX74U"mrV1Qdr>-Sc-sh.;Aq*7JfE!UYHlEIW;A
%j6t!f/Rc;i%$:Tu'9(.mOaCb+8)>CT<\*RJOK?A6ij9q`%M+b]ng$)<qUF^6=!oP7!:pG_,@KhH!l/-D6UMGlKIOr2ei&m'O/re<
%oRjKY(d!n&J714)Z!c<p&r=cO8/]h/QIrH7koq@J3Z'Y8F!9oNNRJ@cFRN,Y[%XI494QhC8iTkj+^BZT0&h0qS*^d.Ho)L9ENQ-l
%kL3WjJjE6Nm`FA0OFnDW`,XC&P<a/%,%V)l296D)@7^M9qXd,*bACj*PKP_l[D9!c<Xi+Rm':E/Gi/je!ASaSTG\LQ,u"3,*'(S_
%U0dd!c.jBHBPOsa/FoSK4@5=M%22CIO$pd.M(1FJa=K/:^'P:nUp;CX0itXC(KLrq%_M#H:NSs95_p9;:)4!>9F]5gYm29u"t==K
%2KOBh0Z"AV5Qlc^-o;Ja?ktK<CX$gnp!A-9RCJCX7EbJQXEdnV>"Mf&7'oV3$qJjXQPWCjj(W[Gm\5=7?j],Rh)tu)L.4]12;?Xi
%DB+bkTR_tu*AXt?-GCdHiVIT`]%nE"pm$\/[NZA'2'H'MF30[bbF6Dr+Gk-Q`@UUjg$&]\#FB1^\0*:<N2^!H'@GP:at;)(PI*_Y
%&c&gii2b"1f<i03GD9sshogUtrT,SuM=odTOe.OD*%1BC0L&?UoLP]d-oY,G&Xa`0bR\lB*\bd-PXAl>-`^uQ.n($f?\!a4Yj5u"
%ge-04;lG+;7*/Ar`WD6RM`"5s6O5uP@EQ!q[SSeuaC1dc$kb&>`&UU^*h6_m0^Ak&h$D7MNiZqUb=Sq*CuptIcF,bnT/a,h>m/G=
%GfXbW`Ej6JC0L0n'9ilS:W'M5#2en\LJu&2A>/-Tjq'+g`.T?AiaFmMVU7^liFOU'@g]5g=V4h^b[1tc<0Aabm]>YeCPPL>0"]sn
%6;4s8o0G2NaOW]ceV%n>j:OlfEYT*6o90\?CIlDp6?pLgR&H]I-+bcCoMeP@"IN4l=c#P=NQ<t1NoV8Gm^c/<nh%^mN\.T20XXoJ
%fiI0W1+RreSih_@Xu/>P3-%ZTR$8nlq'j>nmrF80^Q'6F9&Vp"No3;u/543p,C-EMEEHG:@Mp:[hoZ(,K-`"")/:kS:342t-)1uU
%$`>KU=4(;Jl`p;:=GW6QXe66Q@u30SL8hWVflAN"5fB`s!tBWq3Z/,SYGkp0Y+`q3`u50)FZPV?D]&k7LWj"okph,`:K.%FB8\9[
%/6'UN*](pT")Wo>dPf!fWMYS]M]Oot>1\=\n73U00CVb*)U#3qSaO=9N::R1998Q[[PMHU'L[;4Td!127+U6$o:br=;(Sb@ZU,Bm
%9MTdSfiDW>0leJV2C6h6ShpSN!#m_L6UdOuc_BWF-RXZ&q(Y25A?o!=[paDJI%pKk<*(V2q^`Efqh4)T?Dp.>QKOc@b_d@8FE;N"
%qZiCh+dB-E4&Y;McHV48B<V8K.,jPC-?lR?nPEYl#r-\cE:"dn840(AM+61B%g\Vi&oP6)(UKZW'iR]WFECHQXth#]*@,*V"K3$f
%:rP[(57*(Ti%.>`$D!7&1D&YV=]Iq9W4=*o\8(<aF+ZfYS']47a&s*rnZ"'%;9$g(C8o?,>T-@fWmWV,4L*/1gf,JSJ9WE03P2;e
%+$.unG*l:*5X$\c,Zc3(16[K>0L`RSMWs-ULp4F.LR!R4_`Kn9;.rD8lA@#@]A+e=NCd4HW(;NQAAIb[Vk=>4KKLH_GSk]oMp\pd
%Gpj%p0]kg0!uGL^Yt0WuA+lNe-UYJFJo";0\qB?);T;4>`a;i,Yt`D97(WU!8X68,Hur6*7[FbtX%!)P?1u/W8MN.=f4+W;jODQ5
%N_D%F:mK&0%ksn^7Fd<,!f.'n76&d;gh(LV:1]<@:*#crCb&OT1`2[`ZYWn`lj9D.go]LKL6u-0i9b6gHD"Sqob3:->XkWYnrK9@
%FM?'Y>j<*KA_Rfm$BC@EB[d.*(sMecVn<__2)qcnlG\"Q:%^d=gQ(F;F/YNr=$BOk6T6T?a:&U6;Ba925d,2>(.KYC_&Qhs=8rBu
%Hk+kq%N[MHT?i9!l)HeLHp//KmbiK0?VKZn?+PM@Tb!4E.#)G1I7E+tS-4s'bIAR0EcHj8C+@,cE>/k4<(^B1kS6kp6&1Sc'[XiY
%=TXqL\KGu4aq<TC$W!!q3XBR^;,d_f72,i3L_7hEEA=Lk&drOiZBK/hoD9]+]>"o.!JTG]/@:?ch.4si_99b:PW.eOK96G^%eJ2d
%X>a7)RfOiahg.%4mo\Ua2C@ep@/SX;B8[c%#b]CrBqWPd6eWYBR/h;YNa.@fC%)0ZS+`d7_#l!KDNboX'.bht8O+_qm`T#XDiW)$
%2nJ`O0el@Uk9WECP=LXZgZ4cjNaf76Ou2#PcZU6^BA7#I"Y_e@EoBcr7D91%5YIVXEOG5S-:i"ZF+5l9J9'0dG7nVKG'?2:'%CIC
%R2T@D"RCtHZ8`[(<]5+.VB"GBM`.DkC*$udZQ3,5K1("D#2[m"a*HWbJe#`28CT)1@Vj9>+]B*d&f;V+i&4uS%p5[di>IbVN.Xk`
%P.dMdKWqL(#/Dsg4bZpg$/Qm_j&HOG.c)la_t![[:de\*dChe+p4I/>TUmlDG&T]&>h%qs6i/nqd2TG(?OXRNetFm;i)T*3TdL&,
%k)WC)6:^EP`_[I<7,[E+@Mg4bK9FQ"K9=HX.^6F).B+Wf4QU!X<rnYOZ&^A1]n^#)]!"b5XJd&"#UWi3_=&B-.S#+Z6nkB;/m;Eq
%g!g6#UF;61Bk6#%nj2m&QhaRQNtDaP#YKm*/jQlMV;O?Da[oFddAj0jK"gE4mU+"$Gd'bPB:qqkIc51<Xj/Rf$a252`"'JWK[-j"
%7A;2f.5mu$9r*H2Y.OoD"=C`[`=e5#TR4K8QEh,0?jXT0-5QH?MC%[8G3-.aBMO76:iU?7Loi/<]P1(R#p?7Bnc6.5gLBb'>gqI]
%Y4XHH#^3ri?FGMg?f6JtPuOJLEn[6\RUnL]/muIQBQ\$:1r&dslg"nL<FH]J7Cqq;[_T'lH.:ZnT\8]3eoR(e%(P>jqVsW8K-f&/
%nZP#S:H[gp;=N:^S41BUOgTNeaG=OG<aj=[M*,9[OO;T_SK<28^=u2&et?3%SQ`9rQ4L8+Q)9(!0Q>t,+U?r&f=8fc-(Jtr)>JTY
%E7=oSFWA;]GOXc(8&!=Dq_sM&Gi=MAd.OUWd_q^Q>'E!`X(S+LBY*1DhU'H\a7O#Y_&jGYkfuLU)<H$C`Z8lc@'nZZTpu5X&1JEd
%7D%*hpX)"B6L5jNiNR>:AD->m4H/k.@X)t(&OcT93Luu`p0]i@hsfbnT;\2?Gl1q@k#dt&*Q2=WjqM#ALX1g'F!fa`jVUC&GQ8UP
%:@ODt=7H7qDJOd=%Q5[07pqFa/5L_O.1:[L6K/,1"0)n[6n2^'P"O=J7_0$:jW#*jL#mQZ#6[O@g9![HSm8%+%^M1B#U^TmNe/go
%*JB4*j!C1#q.dk,,r4Wg+6*1lGj18Y7Tc",oVgdm<B+!kA<TNe>245.d@RQ7P[i3/GORe&9,n[I0i[PeNI/1gW0:j0(*XdRBYNbt
%d9RVWjTa0`@CM@c0aHte/D".<)Hf^$]@C_HVC+D0=\(]/'96$%6&ThH!"ZiDQW+qEqjA%&q?qW6&+YnLi^n-$j<<k]ZP&jDUPC.q
%pn/]#TP?XO.&J!oDo]e;2<(Tj\/T5Be^ecu0.^Y8KZWe2G?qegbV?_VN>.7!PkZIF6oh-Y@Gj<&.pei]=DmjA6t(r0&LsXs<fR.q
%p,W0]^WB#kKdl[NB;@c08-W;Y.:o=4a<:]X9*IhE[W$6P9ZN,G$;\a4o2K"#j&78e$+,P(O[I$)Q_n4ng1ECC?X`;fas6lr%o6/O
%*2mO(""(pKYOT1hE4QbkL5?Qg[@VqT1TdUgX$LW%[G0c-8s[Wi)57=P"mUiZM^/YnC)VYT5uXaPZX!OG4kk5/O.k#<@+<?_.Mq5t
%KddOmmWKH^Q@bH_>Afcb6(THqX_5I8Bk1%"O?J=V1bteZ;'R;`*a/YSYL76Cc6-k37&M!'*!.I6*JfE!cc,rd_DEXLPPNhsotdm4
%U:lRGeC,W!5M9^1QnY6_D!)0OPJJmeF"Hi(!DTJEKQOXngcn>tYIOTV%rU?=g2U%Jn^J>S@`_7Q28&;kBG1ckF&b7aN5Q>X+7^J#
%gr+7kc/?3L]Ec[20XS!0jtn)7o524`AD1J7*o;%B)44LfWo@o/'UbiAHD'USI`EZ+p]%So/j#@Ead(eU5lSZ,Z3P?(^)u,>]Jfoq
%Al35B1RHWhCk+c='gT&+Lqb#pkD6(i]m`*^iU2sO<Kfrrj-mPBeC7Gdj`0@;0pP%p0A/NWfOr'`<$U5iWS5Wa;e2RqE=O5&diJG3
%7S\!5)bkU$@GmQQW:s`)f)cJ3(l3%sJWIkW)AiP\;>UAGC(26f!S?=Q+qYlJ;'@DbN>(N?4tT@oe.0_4'cBcU9mE#T&)?-hV"j`Q
%dN<EcmP&:mpo<.MfG51o\5IJh65jY:][_qV]foB.C9Nio\bITa`VA55<fGAl>D55tes5'4(J]kX<HjLF:G:jS]fQS9SmqVeo`#-[
%O.'YUKj4O9_Z)W2'B-c<;C^a5-qZAL'illW:rfeChD"r79C.9/d,LnCJ0i@Ec?.tKlbNe>g78A'mDN;5`bdj+RU?KM)0XCHH&&mY
%-Vl,Y,)j1:Q#@eX&m_ms87#3O.Uqof^t#s8!TaCpYRLj2&u7B#Y[&oo]?6QpQ=\='Z1gR-UY3`T*@#pV)IM&LREQnl7D*]oU=[3:
%MKd@*pE[s^74n??S7Vql8)IY^GP.akR1e4<1.r]<L3bu)@IFp6jhB1Hn*C>#CX#dj_#qu0p<slNc$UD8n$09%;;UaK39rE5[[bNK
%m^cG8B2.I$F!fP:+?1:A@RDcG*f]O16nsCjlsh&:?")@#A#V&VEQ@;89$<g\dj!(_jE?7[s,,kj&(!6hEuJ_Z7<eqJ2upS4$i8Xa
%@o)QZ<,o;TYGhihl8.74#s@R[f=G+udEUrth5oJsAgGTZf=DhZf4JE!Vq)BS3Im]X-na".?,D16"Q4pta/26s!*"_bBhA7'as+iC
%Gt\6$^:](mK1Q^7J1U^F:I8&bVBNd9j<^%@Qkf>Dd4a;Vl/+_sj:/&<"=T+f$O;>,)B.h,W*GlK/sc$7@j`=757S7rRR4]*"RQ<`
%=XdEB4,>%GUtNc5j,%='%3o5n*Km3jZ7M`dKTW+54T[&bpn0uX-I=Ho(a<k)bb^VSO-[=e:;>13!SSLgSsHnkpKGa.nV*(E:#jbo
%3bt-c_u-6A/MdDF'JF[.pW&V@&7XK2?@[#+jr8#M7;i1R\b^9(7JfG7%0Z_nagS]m!jfkM;Zo^1-RhlUc\Z\:[AS33JmXJe#"L+t
%h!TUZX"R)5\4P-ueXL4Cgj;u9='Dc@JE+pO+\I-[8k((3lb2lOr/NIA_WHB_P7mCYj)BLpmLSaohr=VSh9Bd2nA8siGV9Pibr'Me
%#`BGWBQ*(f+-HAZbu5AG,nc,oA%s7Gq&0]:g=d4+Uf1coSoi\G%a$?2q^+gFP2PMAY4T)b5>p5u4CN/WW/2?MHf3[*O->oF?tu`T
%8ls?k3b=\P+EH=_aEsOPeN(@dl#EPE$I53Tc_mCaot4'U;Hs#FQtV7ogPruJl/e^\8F#Qto:+O)5eF8dG>o?hQPK2hs'SmWdsHth
%EJV&<9M?N:;!A=q=.oO]_/Z,*9A4.P$c482gRK)JGYrkE9Bu@]K%-!qd]$j#\NN"fbVQ6Ar8r)lh+a/m]ImD&a;&Snd:g:"mAFd[
%goY8#dk>E0nQJ`1\i4ok:[`[fF!9oH6c_$"H^tX"k]:$>#TB!9mkc;c%O[eJB"`KoUPB^^Ho6%:3`r]5U(M6TcB4*9PMVNKIM:MZ
%CuoWiKinm<T<d!F'P"FrZ?qR'^Xs\M'WBn8)dk9Z7*'<'G3L,+SuNouA%&:0i.!)D#^/#PrRAGtIcjXWHDd>']\g6#s*WXoK@R@j
%&OOJW:'Dr*ct-F(CAF*_HY4j<q^,$)!l.Z#oj29)krC()$GMBnQ2*>^EX"Rp_3NT1eJ2DB1RTbH^*+Yj"/u<OXJriNmI);q'CG+*
%#:\f\&kf.@UpY>m`ndVt06Hp:/+N]Clr8mZJJ'qE=f]2n;_^jj:WrqH"'lnN[6_][pD2&[]/GEgK#r[<n*&K2rW[E['$rK!NW],&
%Wi7]FiLKCe=A6h.Ou7TXCH&^E\2tVD*^rOs5LJ25n#Z?t'V$q=G:CR=<DMS=:HQh7nad'JNfV?=dtJD^HnV_O\P$Nr70IZI_"B9`
%$kP=Ld;I'6,au*n=jgIJ`+.qrP;ll0N):A2;GL[4BiT=t(4((:Fg'u3R/PGT,4e(!5:dhqZ:3JW/J:cC@`G5C"Lu[1gb>"u:Gq$4
%!Gl["1R!a`*)F?@fMCt!I_'s8hbtA0+B52qJh+n6rX:/k>j\[fN'k:=:801aITPc?*sMjYaKdU/)Mi,fJ*BlcI3R9AQMNmP)3Kb\
%Y#P*mY=N&m\$pbGb+LXcG;b>kI7t5(G.+X?OUC0P];7M.KE>SP'OBnY;kgjcib\&U#_mNU)!OSmW@)&XO^usfVe.Cu41du;^%Rc7
%l)(B,8Eo&L31YFVI&\!j`LZ$DA=N(+2=@cZ2':A5=$+%[A.\:0buDAU-1?*n?/?iN=,lB0:8`9^<Lc-MS9KWFD9(u[-S^$1J'XQ!
%cVqr3^k\I9Zokm7%IW0_@qk$/WU(scf5to0m6S#+NZt7aDCh@a7*EjA4]ScC?+D]l__0Kd[saOYM=R;7M0_kdg:6NT0D@lg""m_P
%\=;D;VYf;=e5lg_W#Hr]M[8:GmI8tis6pe!i]BKcoA?NDGV\C%hP,8*q5_Q,qQLe/:+tDH53A!MmVCKs#O\Y;el?ns.soquotgHN
%H#g;ZAilZ96rgSPNd4T!(!+]RNO#[TITel`>ak2)ETtFU`R$S(B(BQE)2B@JTnX$=C**q$7%QR)#)''k>0E#SKD#2PW/Kj(AFD8/
%[q-VeZRUSF7o&$nkiE3@:#r3RpfqDj#/[]25I6oUaT\pQg%f/+=SfmuEFkjRkXoV0_msVcA)2hn7m!0qS_nTb2@RT.A_V=>!:/:<
%_d9_G'R,O7L`gb4`H-14p$m2PC@i_4D&i$'-POI>WiighKXZE[VjkL2W.Si)CbtciD=;`,[[FB1,-3jQm-fE:7IYU9(qqp@h.FiV
%k\"1E3%=YjpQaVILlc<74uq?PbhXM69)HirBtO]oBhsJGD:PS;b8M;Um#d!Y[/$q<,JX!*bAh-4gG._HZ[_;oc^,_>jkuq_G:0+H
%&`4bn]G:$U5tf5,@GH?Y9dk5mK1/7X(tNl'?`Pc/@,R,;bZ*#dYT4Ipj6CaG`ReurKFc#'bp\Vi9V)JjXuSBj5-@hH__kToc;Q@`
%?K\`4oso+gok$!XrppmZCsso<J^O4n+QKd+X$t&bW/Iop>SmWf*aZ3GY:3]6f97G..>r'g:*]+46bTJ)?-(k?rlqP;c.[XN6/9A"
%GM$QG':YI?\BjNAd7+)%S!1PJBP!Elj<Ip:.Idn'pF<[uW!q*k.gGH3h9J(:2@,"Vl[]_0it)_RinEf+)VkK3[Sq0,iO'60gZ)AQ
%j^p?>c",)3g#/l42ZVX$F^jNi*+#]@;I)X^b63d"-.%^d;J]sW_"iB64M>oLFRT#-r-HjQ:sd30kVQme]$ZGf'&1\'IZK-8heMAt
%.6_o,-/Slgn*dZTbl=BFW>\UcD`)ap$u.0)H(EEb2XLibFlpr$m=M!k%Eq)ETUEm$A!_%df;8m@Z<tBC7<dA\TiPuJ>6XPD?*Y7L
%-0qaupNnN(%dNrUF`ri!OkhO6IsJ#Y,%S=IYJ)X2f^=.TK</jja2po+D%^s^>ag(8QJ.BA>b(b#?_-?F@87@/=6J^\k]&+i;^K"M
%9e8NU[S2SuMG_%eDZs(Q$PsV5b^YiGA7LduN%Wjfs*tn;RCIgS/GIVX+gg2K],ZoC/Ro1q54rVb.Q6ReUN#C+Zc5?sNT2:9:Det8
%6uA>hA.%CpOf_+gP)(Rj?IGL<Gb%@Z0V]:#U>,#.^4F"0cX,TOaH&i[4<:AQ!8:"`12?4LN%.scK:HYNVo,]bMTMq0CpLff"F=k(
%n^<0E9s"'.Yh4s&'Ml6IDWbOnN9?cHri*BOD0OL!4!M=WT?9=(-Xp&]38gTgo3p_[@nMP9Z`Rq(Y1eUf(hfnH>sTo?gKN3Rd)Cj=
%mSBG/HLqR8(nr!n/?kOiA/h%^BJW)Pk<jZ8#L@ih6r(m+m&&I@_Q'JZ7&f_"ZS239+g7t$_F*mePuu&NKtj()_h-^>3("`7(M\$e
%oT6am3'F*"c;ijQEeR>BJeG$Ka8!UcAH5?#!Q6Hud^+61%<+;GM@KaYe/$B8Mc4\MP97NUY_thYKepI65rJetQ$d`(UF-=`ZD/tX
%74f_(Zh:VVEA0M=U*S&SeZ.B[@BsA3T^P0go7>l8p#sJ3_HF'@mrDi^E$L&o]-4eK`PcJAZGoo@F(boKR9!.mr`nB3[`Pblf+ReY
%gB=B'b=h-.H49rBhZ<(HW4T<H"1Cg<>'%Jt_NiBO#"Ul?9'Bu;m>%BEij/ng5TCkkOVN8$%h+09b40?,8;q:V813HZ0EdNXp],3`
%b#;`pYVaM6-1VU>&J&'8W1Amp>UH`O"d\(s4o^$>CeIH56gl<b#`)8E#WW9[=nhu%5u,h1?;m:Q9$FI]nKlo36kT[?dQsh;aD0(#
%MF/HIX<$5imAsLD5_Tt-E(dGc'E_n9*?7'"_c:5eK4hR@DO$Pb`+6)J..r6+"[r<S#g!.>[?N]]c2$#FZ>NUbbmWiYm5qfp/g6M$
%!DhS5@)+fPS>rOVKCGj(U_eF\N&e+Gl9n4_eF_rYF=&t%-E"\d)>!LD6tF)&VZ*]KK/GL,&(*M/824'MM,$boA2Uh/3O5\=aEr1t
%1js5rnR@];h-6Kq),q-K6a^<)Se:mD=R^)TGCAbEQ1hPMAM$>,EnRU]l@Ta2mu#Tu9^O^Z62Hskk0ht'26n[AHZ;r:m)stL_P[.X
%q#PJIibI["Xi$?b-H@0Z`jGS?)TbJOIdj:t/pn`Z+_1l_Mg'_n<,HF-fiK3@'r;8@fs,.M<o&(GBZpMDFdIGBriY,m5g$/6CL-OG
%640guQ^YQie&/B>_lmh]C2j<tiV5'JN]nNld*5e.'n8\Z[>VK'C[Y9T>oFmKc8[4"A_RC*2RDp@S\&A!W@\D6_TS#&iMG48hHMS:
%i=<!$@>S6e)uZ(GrT-VC1.Z6+ENm,TFb^?JgIDVr>K,mfe6Qa*)3<p74d*g"Y?PYf=A#a.cVd>IRNDaDHTp@0?gjF2FPgroE*/]s
%hH0Q7TL"t$3t<)8OSl>9QVH8W0YXaiqSHMQ^q:W@TrEB`S'O+AMF/iS)#=7,gjAej@^j)cO4*D%dMSn?0`ja#7\.+iM3M>&BC1kt
%TcjFGgNT,icBBO]jQUN9C`/hr3%!5"hnQoB1D_E?5M9=?9D>]k8gGglpqZuYhd65AVULpG'g9>i%^S#6qW/=]M<Q"!aN%*u-Sr2W
%5!F__m&qJT4g(h+;2r/BqJ]#u\eE(4<mqS>rnn:<ekbs&qC*&"HI'jH\C@G**J1hj%r^j<H(lK&RK7bsju2,VWFj9]`uFiRPAYs0
%B!./l(OV=&RB,0HD_jFpAMcmdhskPJrU'Eh^EZje`9\q;F\mhLbs)$o>P?`gfk5N7cZI'qf8+)q5?C:De;(%KS5@PB3o0Z(d5X],
%"GZWLOZo9UnGCDd2KolSPYkB7J-0p"WoV,e4r@"L@j1/hAA1.q"U"P_TDi8*rpda/roJXD!s#\N#OEV96,BktUWsF,*O.fR\.go+
%1Mc$HH79/I3e+<AbH)E(UC[5-pV^>;KU_]S^lu&^o6Gc8d^bZ,!0d$e-;=OQR`DHL4P2doLasC&3\b6M1Z@\GKS]q7m=\ufBC\7+
%,tpaCa!h!"71\.g==>Rs$M+i8_P(aAFE!%e]CUt-+7L+,\CP:Z$ckEVZK>!27<$@!%)lun9B+-GnG>3%,OiY![Zc*/N_e\\0;o`+
%*;[&`2F]UEW51el!PI/+=18kjE73[FbLM<MSY:a2YI1kENl!X%ZjSY`i*fqNbfD%LNHQ<rNE51r2d!E@D;hnaB=P3UTtq4;(tF/&
%)Oe3(dHsF8'Y(e?h<i%51;B)Ki3,/-8(K5nnT9FX`s5MhCBjAk:;t5A<In:=-$>b:021t)TDIgSCZ%\PgV`KuY%(@u-'/#1_"mQ*
%5-<]#C3"du_'\=a,uK\%QtBnMOjDmGf\<KGT`tLEdNueJ/XDLkC'+pt,FQRZbV=f>"urnE>nmi\SqM2d2T0/c>YsYX;;&-fi)Ke>
%qWT7N&Lcr[If+5(;"lY`]Zo?m_sL*2V!Ks"83)_)CmCRkE4XAd-G/QCM.lP)WR&bF.-L?a0je_@KlK-U"Q4HnGRRB0Na'pHgqk0f
%i@;?>f-,+LR<%sI:[b]Ms3'qhW5ET/FOg$pYN^@fr>"pp3V_rn^0so;_QX%Wnch`+j+fruSe$&Ai<sH.;\Y,i4VT#YE!@nN)s=W,
%.!oB7qnXF]$Vs]B$jJT?l=C$>@.W+KRa'X5pWD`6d#&)H74$S_Z)]4)G]cL<&kU"'>?i6fDomaZg6>uRXu_1pm#_jbr5*O+TJ1UK
%3/\G;'h*:B_G`KC29J2f9$2fZ+QtrQHELD??nTm2f[6b"76r;2(9LA!13Z[)W3pSAR'*JJ8V;-.EG00GWp42pD:JuGY<O7n6*E/o
%@$W4^20/#5>AH]rTc*O/E"2_FX1s2O4>Ll:#rXFTm`Gd6;l^'c9DQ=,YF']2>;LOrjn6Ro?OQDYW9&r=%OPtD=01ErfVT(?Af[L-
%o#LKeap#>b;u,+nS'?4V&0]?Ajn@hg=,;_`2mS*)Zp>AajUe8(0ldXg,/Mug+KdCHd'sJ3)5_;^bj+k$d^]g1855g%31l)$'(YG"
%.@o/n'j)\fOMir79r]$4eG5qa,J1p>6uH'RZd<pI)?rE8_sYe/g=DYT2Wm+M8868+gl`(s-?MQDYV'&eW)Me`\X2bqpeXB):b$2D
%ZHCFb<6>!r"bj@rQb%iCGFa-3k_&BC4*^WDZO^-^(uD[i-9AE?HjpS`UCiAB$\KCSC9>V1X^B9(Xc+\rqd@d*__hTLfQ6!HFSY^T
%aV/f22tK-/jkut,<.3AZN/?<lfsp!5mi_6h:n,CLDuoAK-3p_TPp@O("Idn&?],1Ib]/lX8%N5IEg:4]!$&0g#$kI=@[kGQDqmbh
%rPQ=g[7B/Z8>-M]?Jua[Z1[9k!(h>6N^!=r)>Ni>a?XKaA_7H4@6nj%o]LQlZZjk5IM5MlU3NDO$&kKO]0X]4rN2,XBI)_2_r)t7
%Z86cY3h)(\n0R?8,RKr&b5W4#%hh!SiN*tRn"p(%dIbG[e2(+DV4cBcPVDn@BLWc%Y-iK>Le;kDYVg**2eQ+WJiq"VB[fn?C;(hb
%T)N'W*`poL5*^WnqL^8N^W/@5;p-L7UHfaC8&bs,VhUaSCYnZ!`nI(a#:)*d94VSWPf,@C+4\cC4t'9?9??6=*Sc"NF?%BVih_0n
%aB5X]Y;&<m1E?V=^fa&RJ5rm+76^.-6MU3IX:Q!UH-E#nN(H@l3D?/:pVpD4Qh@]QT>c;Se+NK'TaM!.`&T(-Sk?HY7t/,$X.8K0
%6b?\GWOC]`!D*=eG0LGEP3]8j,hWU*5S<RdG5it/#)q_&#W_466E-.d"18>8@[mL)gM"Z6dphf.TWR1jAPsdPX>+o9_d?r:6R7J:
%1KRC&X#GU$"e]!HS4Ms$d(kZ5m95u$s0agW-DFE-Z]B5GA(MW+D'(ZA>GU\CHUD,T,\F'sl"GJW?884Xi"JsmIG'_[$jCO^rFIj-
%o%91*.1%CRo6eXKmM>OVT8,Jd?[-:)<3IPT7#GN7)H64H=T)\S-[Uq/cc"\U58HlGf/`DIc(sA+\aJcUBZEJb?@2[u&pefRaG]q?
%IPRY,]?tr7<dW`[5!M5OVaMXukK3a*r!c9D8%24ea?;`!eQ&AG<kiO2a$\2?_4OE&B$/AjS5*FjSpHoeJV4ZGet@Kc%593gXR_3E
%M(Q5!2r;f_RqIhk+<a,GD1]IlPU83];\RHR$^p2/#K4jEcU`Rr0i`#^BE.$,ockk\@Hal[m@t_q)F0"t0Ks"&:3U"<TfPtX`H,-1
%FNod;LZq\F:JSq4&tQ^/7*7ZoFU<3_prRO,JrdEAdnfX::II)P^'1nsS>-<7S+m](r'QS3Ha"Ti_:/]NM<E2LJ9ZOK*VV+&5>^/+
%--Rlh.pCWGOU!</K*8==m1Pr*]*)7>bc(NLqDP*l8X<IIJnBSYf.?QiN(r^&l_H;<D*<],4Algt*tOqUVo`5eD-Lm;Zb(Hg:K1-d
%Bd[0c5_Mq&Ma&:j,j8N.]MDl&5JM/U3<#RH(%Ba1l_O%56K)1B\('?n0G=o),`_PMduiP`Qj^)'eh?F,%,9+BX#*W+dp"XF[-TuJ
%e[VsQSRAu"=g-e(o[-G2!8e:ON-[X^h2j\ba@Et,?'EHtm7^c,g^Vda7UH/DJVFj.jm0a_(s#R=CZ"Z0<*7Ip$br(SpDY`c&`<8J
%(qi*pR;7n<\sV,<0a9-74rrElmYo@-YrD(;VQ[I8@`jJ+qkc]*LY+!:/94"A=g1*OOY>D5O5AdXSJ["e4u!&Z&_Y9Y.R?AZC'!r?
%'s3'5'uGU]\Ni,5'@+UPr2=/4Je/YM!am"r&;_boN`>$Hplc'8>Ms;XQ3,Z9;JnaSj1'X/PoaM4L1K:m\2t4QQ9)GEJq#ke.EHLj
%9Z?!mNR@sCY,n3X.Q\^56[@iaVb9Eg+kgO"W@!Q3G#^<=&GH9d]ZN8_a#oGkEipr^5!H"':4[+X:c$l6n3d[hJM5*#a$F"6Mq0u>
%U$QE:He)>=>`"-66LcV*o%gB*`L>U@Wf:J*1Hk@/Fir=C7Z"qFbHnDInb\[Qg=@hSQ&pA97gr?FJKBR*r*]n5nLgmD?XgJeH]9*U
%Yo0n$6]N("pu8Q2V'6S6Q5ip/\S<a+hc#9uC5\-J,.LB#!'dJ7loMUs^Lng(267m'2G;,If)`gN9+iC\NlE/I!AUhcjGqOD,h-:m
%<:iaL]N3`S8tTdR1M076dB'mcDV+5PE*lk7;nr%<[1*Xa6P4=MM2Ne)+Jssn2Dlgpfg%oYUmtuY7mid$:XN"h0Phk4g\QSZTqL6T
%A;8d3S_A+WrNMN<5eI8.3E3!dj";RG3`KXL_M%?tT97]Z.3#L+Off#JUh4`L)[`BAD>9\+q4aHk>+deZcj-!VY,5$LWp^9gh\%e/
%.>gh"#n"2c^`P7(r:3Xr.R,8VU^id1CNg.u#>[>3TVKDAFA^JdT]QDU51r@1qBMJc%ZH3)k+lpC2M63e]>mL*3!+%u9Gmkd#c2+r
%9I)ZdZ928DJSSqdP['E9&dR)4.8!3%inKSUei?-3BUqd2"hfi%0NB"dK[MR%[T5.>f%,2Nl$t*5?)AF0Nn0dcplciO;WUFUoN[Om
%3Tph.RQ4^8O-Y\uYRbMbN&N!q[=]fA!MGc>C4OPFblT;*KibB08m`H)'[uY8*h*nu7"]ktX%hPX?*YLS6^mp#BRhK`r7YFcWK;ST
%+,bJ8';%6j?aRW4WB(&:BX3Ikb#nD^PTUjC"R6o]<<\M55%ZBQ7J.!9C,d.e"EPD:6=\FdJrto.-Sq=5^_Jafd>!dlgqpJZXQG,'
%;1*-)^4cTP'\*D59/qh,=3-D8YgoC9-puBf(^3Y=[8d^Wd`)t!7B:u(9&_5d[aYp?61k:-'gQ[#G%3Q@)LtP!eL\LLiXHh84Lo.0
%oK>BZ2%4fDeh$3CP/;h0dp&Vobm*b+2/UnJe^$63QnXWg.]MrKai&3)9+k*b_"cn5B\C=@As]:sY/hleH5H'$(t5)-E#X*5cnY\F
%[`DfGi$+GoJtg033L:+Jks:@@)i+n)-($;74rrST%GE`!<3L'cnT$E&//$XD(TZT$0!i6?5$#E/hQT:R?]82_96UiJJ=t!7(jh6H
%4m,;r!tBjS!jn*>^c_nO203-C4WFZ"ZZGmf$S[Lf)L)k(`9Y-p@3)^iR^5SC"S.XK1+Ah0#it#cFQZ]ki9bQ"!9L]Gk:H6fm*fEZ
%`:EZ5'LO53X[QWC0'3aJ7`^b#&>o[lRqRp0Xd\=fB,'EG0T2S?8caBiITfE_I"!jK;1q^0"k#6jUX%!Zg;oY\[T]mOPZkK%/G9C5
%8m?&_g-A"e[6OcT]bLWF^PRNVZ5@g1glAG\i1iOX1.u2,48iT$WRICViP/J1+%HB:bV=r<^,<[D$rI0LQOQPu$rM\pBaBHP05e9P
%blsDK0rbX"Qr&5ZeAb[S!)U:1a$[3Ma8Nce)$feMC]++!Xc`4%9gQqBNj+1B6qWQ40Q[l<r9QR[Fr(hGi'pGp8X2l^CluN8F@s=l
%:>QD)4/Dg5kg$[aaR"/6<`]<b>'C.3_58@-.QC-WJI<9EhROqYo5EgZe#VU_YKBS:$fo@D]S0OnBq)ZuX)o<ASISReEmVCMejZ\B
%&-0Ifk0WW2<AUBc_UF'Kk1>t;?o0Po<oDKph>3Qs$?/_ofHHedR[4j#,VblbKr6j_KV$6l?0.oZNrk?H!VnR8GrIEkOEd:.1/ACr
%_Us7&h+q\S`9T2j#G9'>1iH\mK-S9@'"O<c((fpF1P6K"mKEQNNhFp_4p=+Crjh@T/Kr[=dc_QYQC4ZXM=<?F!4s^Wd0+\ae.52Q
%a(DUS-oDl`/)_c-PL/'`iD1[#L'Pn%k>'n=g'[4!6mB4+Nu'Wl&#e;b+Nu4XB:GpEUnkGQe4@71]t&n$Mk\0I['iW8XX%rm]>)uK
%/2cc``7o9iUqF^dq:V)0oVsL,X*20<+5W.?PdG2iZloH\^+WMB9NA>gd5aR&,`rZU$,=7+99]Ub4t-[D3UA_7'c^nT*:73B#L3bj
%DZopB$Ht7H(Q)/l2,)c+V77*Hoh-:#6dq\4f-lbIO1@N%GYKUUs4_\6HrX1\KS"#K:.%^K1gehkhQR%:.[$E@qH*!ek&`mQ^D]qp
%VS;[,ePP\6;\Q\:0/7<2":d->X]cL#Y;6\"^/F*cX#nldWA3i8<a-HYBlO6-M?rO7CBJX[4L^';^>BhEG,UeQ\\8EX(1<9'_go(X
%f'ndjcdo9KQ(GP.q"%1+"GZ'`4],%`Y?;l;W4_U4WD3k`BJ7XhE'i:QWu*>uEaE9<`9.oUdq^OoVtZA%-R4J3%:`2'#hpbi:.^Od
%W1,WZ$K5knoJ>)"Z^2?VCDG'`9X:%'2n%hsX)(FXp+YUTKWYJW%A@Wb298#-q8T1CT+C:6asU^p#[KE%0h.%qkD#g_MsiDPT<9\n
%^=a*QPUd9$Gae$_S+a[:M[0=\GsMc#+aOR1Z'o_t2cB05&_X21F.=4gmMN.!Cc9I*?=L.A?I&:2Z*3cj;D>0;kSI#TGCJH4hOAtA
%@ngUdUA:Y^lp(MZC!0kYTP)d4^MBfqjal;B')JVcSc`r4n]O;q,?4;_]fOF=QLabT8l9SnThQL0#T-#2=1HG0':=:TK>iBbD.@6/
%-TXR#ML,U3?%U+1F;h7fAtBTXEB7"5TfoDIlI,X@O2X2BrL"N$N7,:f"MiS.ZrkEoC/LW"W5t':6l]9NP-MP66:LKcH74TSU67&o
%3+]cI^`iCS=N==gEDj-,/ds\<c<asrk"^;<2$Ii3Cr6'7="Mpqpl_<&BX!RtQU6\d#"4g/gp\+8o24pFUh7!G0]mKt8,`4N;(I+X
%\J(<IUJr=a]dVDE+([E,X8X:G%OcjP?o\&"n2FqeX@5!]VJ+b>AjR(7-LAXLkpI&-_t;%WrFZIsEdG*#mqY;!nHq))`6)"!ep&50
%)qLXE]_BHG<-TqI(#?T?&>mOp[ifWd`0ZB3Ac#YJ.U"4V"H32`]QD_f`!iX]&;/;,a0F@gcmB:?bc+S`WD)77JiZ.E@;nt`)oAW\
%GXcsBk^+.h1L6:Uh&;/0<4cm#4<FYQW'lF'8k)]n@@9p8*!9!iTLZ\'_&Sr=pn!NJ3VaQh5(Z]J`K(V10,Biq`?Z;Me6=YOXg#IS
%<(V.4QUo!#>W'pd<M36k%h4=V)X#[5l3Rr@V5,Z#Js5_PEkJqmoS6%'Od&-K(#Xf;/]*86SY##(]_L!ej5e[)*4NV1h7%,K98J$i
%l1+CDNUgFD;fV*%G>qO`bOV6^MKA%]k_dMe)9^XMAsH(N&D,.fUl@9H5M>&d8R@!Ek'bdHmj?[np7$p#+u0)M67Q`6(h.B4kh<KR
%(aQIW`E_KGUQ\2>G/8#YGbQaN*^H:5eN.Au(N+hP3IkT^?!ETK$;!dnqIUqjN:?C+L!!4>W8#B&-9[)lqffGRV41TnEcQDl!bude
%dfbb)B`!hW6E%Fc9.)Vb7<lm8ZCV5QnrRo2P#uNK`(Dbo'pYLoYg3U:e>GlP4iLeMZas&6h=GgBIssP;>04Kc''n=imb$A(X.A,Y
%mVk'P._s@o."SnE4p*P)6\$tY$jgrYVQd]"kVF.`0\SA<_M7hr'VW%-,T?<JfE0L'YhP3/B\Q%M9Bp[a4T3(eJUj9h[6NIB+?Oul
%<OfWV^LJ&!S,Bqo`bS-I?1up@R(&W"9B_rLjG[n$_\&7E]-Ld/]AqTei+Cl>bYEsCQr4MI=GIBX7"pQ-M+SaG$EEIpVUdjfV)ema
%;>m"%cd%9Md@KGfh?l^UOEttBC]WS0kF]Iq3!F?h6N&O8\.G+idnOmQ/=12o':NcWIC#nA5A_n;P%s6Ma#K:1C]_P*BeGbga<7L6
%GD)<1ZEuthFa9f'Q,#_DXbsHP^=<9:^Jl%UE(3<EjOFH"Qa>T4@$+b0>n]:,C!/dn8l`SA;;)Q-WsZlJ`>4IYJV`W^8a+dR#<s]4
%=.pOU*ubMaA:ZV=M&JMg9lRP)Wd-1\%.=#<3d)bt8%p2?r/BE6I`]"FV@'@OXc)/LH2pl*/@.J'%)m1Y.6!sen\Nhi#4NW(TFf@1
%:oZMX/_=)FZm#]TYhHn"\V@jh-.QPY1M\P:?7/,d*0ZGm_e<j_MfJ1oSuOJ5k*jn\(LeM>c8WsH7GG/%jB/<4eN\s"[K$OGM1EjH
%afCt#]BGeAr+&PuDrQrEoXVuB1VqLiF?$-#(I[^gXsMQi?GQSJK]QC^X3ZaK(Jqra_?EYL+R1qmFqYG_@&I;!3D1kFinnnO@.dju
%OqeeK`0u6Q>g!8r7N?UT=gQ1g_s[h0@U.'[RBK0/_`VPLBhWC#JN-3U'bp$Y)%[PX?D__8SCt2[MD^#+"`]Y+%lkaY!%16I7"^+Q
%&XW9?D=.DhRh_X<oW4k4b^s"ib)d`q0C;3*Irnl"r.Bu9gR0c`R:pI(T9aS,7g24Sq)ThSL_;>J)DWU$)d#c6@IC)`m9k?B-=Y=>
%0m4TBMKSJuc4`UsCO9Sm3ZSO^VbU\f98%eF=#';J7#:OT^ud9^g\<R-(KFNZZ#f].VfdpNS]E/ratQQgHj.q?m&)h2lj,_oOV^^m
%GT+%h*XcB/BGj$3peQh0J:._S[5lZI-j)jp0+Fca99SpXN3AEmX%Wm<(:bSR;jeB9*KT@^!H7.#^b?uUMg2[!BG&'sQ<4Gq2U?;?
%Tg.V"%,9C!6R#Or@7p:j^niVJ$AOU:SR=bZ;,k_M>SNfkk"VQ(W3M/bOqf?g]O]ukhp_02d,O:h4e"ioc2^$`\DQdK+-9HiaN_j-
%%\%[\UAL)NDU^HbF2j=%hCe.lQj9LuiaE0eg!^'];+>J\7.k_K+:P>c*XG-:?L6k=6!#`K3i"Ut9\:&XZ)Krt5).ebcfQhh*[,82
%Q+PlUXqniL6<MK]C8)b>FNYdS+:bNih7tQd3&n<1'u6#u"KG^,qG"n6#"gO2H]&7LmCA^mMY#T.1j]^1(QghBR,9pb83p[^b)G/T
%#39/-3PjFRB^&cgK4PD#,b-(JTn2+"\Z.f^42QNZ&>KiY/XZHGKG2ETZ!:6QVb3B_V_]fP.$HMlS$?q_m%dj)N0`nBAY)2YUn/rE
%=lsPWUm/#;e'cXgCrjDFbl5E%m[_0e$6V5p2%9E0<U$c7cO8%OmoFh`(ce%TM)eWD^Z[>:q%.*,jm4O)jt>`FP7@(n5"ijBQn8*,
%,JCc!o,g:TqUlOU]HKXl'Cs20>%o>LN\Me/a?![eNs^#!nT_NgHJSO$c"oE4PWKnl0aD7(@qq;\kab:')%+@9dWWuY8gIP<=V8rU
%bQ0dQ>&2<(L39>.YRtGC2$a8:+>e,9&Ifc3@(Q[o$;eg=D+T7_h7XZbIb-L&elUS+(4h2+Nd3VW5#p$5L8E^V_N7kTUm+s0PrPEM
%S+RS%Nl&q]'H+Ne@0dXai52f(qsgf1GC=,;27JnBLn<;S4c,-7^E06^cIt;)h>N&5D#B%D9d<!)Fuo<q`F_n9?7PI?Crjf^A[jt\
%b=6ibnoQYt&BimmPjrGh$CsCHF&#Q,1=Z"TN7d0`s1fYF_>Vh3gF&.o;KZ,eU_in)&S"kMrAaJAq\:3G%pT%.B/*_RIbP`lNUmP3
%$ReW7Wcsi253Bo?3A5\]+0<;/S1(hfP3o@e`or!2S;biW2I^<#B=Utu@&aB3Q2f#qq\Zit-O]S!#-I82"!fFuWnh1J^+f6"JU&se
%ek^8lXOn]JKh\F^.9=h%#>f;>.n+nB/rAC7_-V2J11fslR^A`\pLs<@A!fa/T9K>^q]G06k3;.NdnQ5E]?Yt4inbY/".1*mJe<qU
%An=Kpd..\ZO!R1V7;'$$l5]Vr`U8LE[cqnEduAkY6(Zl!Em#&nPkH0t'?L?Xo!K+?oAn&QA=d:AF'2"p[b=<g&!FI0RENh\/L'eU
%_f8?3.&ZG+Z$d%4fPLc7#'P'].X/OO"tqX,jO@m;L"9Ob-.^MojY#=ZA:b.[@afj@WR#e=Vr)[J^PQ7hkpOYiO(LaH=S'l7);9N&
%1`P[3a?,9PbsjH-mY@drAE?/&SE\`Dj0V3tJ2D,:.a'&DPW)B0+L2[[j9!O%&!AHI5X],a(o\BH]IOF<SPDM9A@o%jOkHDGH<CgL
%EY:VZ?gk/3k=GIIRj7/fF!M3>\I$1"#ioA`>@J!N<HKYl%U70(7Y^9RXB1)GN0Bh5f`$!ATVQ1eh<f"oBS;Qf^'))4S-Y<H%ZSgT
%"3`u19\frBACFQZWf<Z2RSafc>(k3=%-GI*aXuQ0%"%i"kAsVEGP>u2Wj82T1"RFp4"(b_03b\1M;g5$qH)*Wm>9Ik`G`&]'u5Oo
%l1n7`.pR"[UZoT.5%3`m;YjdfP)WlJ(f1JiADe:86bIB#$-K!e+nom$]H^C[Sg$h6HOS9f7S`ni,1eBh_\g27o>ReB2,po/h)N]C
%dbHg_?\OK43V!;00>*'%7\KCV,C>?E>Or'5G8Rh>=/Yj\I66R$jY"2!O;JPS.(;$E$WW&W+Pq&m$l;M/+Iqt4mSu`^,69]Q=\Rl9
%kf1X$\s&_D<"CEgS`CuK/p7o_5e:IF_flD3b_AY^+>CC+86D-p^-0uD<_4$m&Z:0n+."eHH&XP@<"C"[4$jRbFEg^N@$.!lOCL]5
%WM"pKbu>$LR;iY"k!5.dOLnqARVN%sQCn2&\:,"N*m:&3%^i$J:e(.\B;#UGSqTDDS(<$J)aD*[fuS^P"P!PD/I)Pk,mo&63KC.R
%lq6M-KObE?9J93H;[;p^$BnU12VU)]b\u2=#8^7M,%Qi&A1UNdKSEaAP8cFOoRa`U8EbT7Tp.]/O/*ALF+L=WF<u)bNMqn:]Hc&K
%-=)F`!rOUZ&rmB--J':;?W\d.7J"k0WepRs,3pn:?do\P6\7>%jjOUdC]\*V_WS8SZ%38LeQq()o%$+ETsGK:F-H&dG%BD//76=3
%M&sSEYp=79lVBbDs4"OW=7Hu@/&#ThR.SYfdu<q&40R"GE?;_4!@ET*\!>cmTWrNugFZ@ZU2P*;fJ+rqlJD]L*]LnG[0+#rhtdY>
%LUDNUXccP^o)X]9^6b$;aLsdol*[C3+P\Mmf.8a"F49nm71uV8kF\^L4:pEX!fRBY*,WR+aMW&Ve53X2>paE\AYB3P)91f)o';Yn
%GXNh$*HV1^Vc5l[4:7/8lG1>l&KCBc&C!(E1j!7OT"okJW+r;!W2(6.-\<Nh)84;CZpD03c*\/\&mteaPpV\fVb%d\6/n]%$=es`
%*L?T!&I'6rFd`LZ&t-K-V>>5?%?qPq\R(LZMRLjI/_>`KKs+Io3=YQ/,nL[LcNkaaM<^,LTF=p\J5WpYq;k_=*mt3=G"*&h)HMOm
%a._Z\=.d$S@R%oa^QpDZ$@"MGLWZh5$5824Uh4^pf$^?l1VCF;?*RkfR5Lpu'q#+!\9Yo7PUt'-='TEKAl:6`*!*`.k$d>e'^.Fg
%n(0![6'Tkm.SV2_KZoVD-k]A`VF<Z_laF1"RS:^aK[VXQk2.<^<ZQbq"1BL"U+,2,>%BAqKUS=1Ru0VURT4hTnYO:I*=%lt&);:]
%aSt/Lp-A!CZT5HG:&Yt)T3)Y$J$Mf3\YthKZtu-YJr6G"84Y$`W[IAgWi?Jl3Bn,?@L@N.gR\sg&8S3NDO;mgJ5d-bmKQ,gi=1o^
%Y^f>IBnC%)/\KqWH<)JmIh7;dd\;M\-roAH+q:f?">*aYP4#&0fnt0;l(R00=?2X;Id&^)0$85[R(cZX.\:.'X11f#r%o#TKH_i<
%#)!`o?Rt4T$R6VQ(8CRJ^&]MVJODiS)MrbTM+6'V0n^uci[)VQ-,DQoPE7MY@;rpnNh+n"(9>TF<Ra;ADDjR+>(%L.%+OEA.e8sb
%ih.tB?f4;GWtqp#K>\o2:9u0LqA@AUFdk(NI^k]Fo9h!M!j>qA.='kM`_9)VO9Q/!d7o?KPuj9>aq:Q5+<me$\5lRn@_q>Se9a/D
%OEHRZ`L;Eq5lEKe.MOB)PX(`qk-3W14:"gb,]ET5Eu5a6#tE+KLU;Y^0ntDuhmY:p+Xi*HDe=#kfaJ-6:D(_Z?BLUt8k?L+,C4I[
%2CA3=O;!H\8ng3LO\a369U;-[#fth]gLqGc2<;pp&"\qC=CtRo9?pm4;d,7tpu7a*4BSXSD>%BT_R-<S-3IB9N""Eo]"ISOO[:g_
%c,kRWX,W<J$r>-2;;.<:aDS.uE+1C`'/Ts:(('0*W,<p%kXoM0SO/U2<0("Sg6ops+W]++/aHWC8]03c(4sJD46iid.GuL/2W,?.
%`CORW8N&,lOjgE)l4Ya?`QhNN=S",.A<A[._MiPR'N_mo8GQs("Z$!efXskEEV?+:E>R5C0II_c;OI8:Q'@.4lC$=oc`$2/$5l>-
%L>_<_(ucX15*oghIOdk"alYrO4((nU3P'_f"$T/\&r@d,$aHC!i(t&hWkTFDgmY8g'[Mkqq26ss9!659->OGl(Vmn"5Qp8!P/1C#
%PetdW9Fc,/.#Gdc@^<L[BfndW;4+9#.cZYejts>&Pq.]$:i'P5Ek+79mlSb9/1K5nkMZ=Bq-UqOaZNVT)<86"i`#*M1JkndWi9`%
%).FR)lS;Ni^u1<0(\trVp]'_H0CfS:)q`o<X.=8@IeU#fs76al9XmgV(tc%pphG9BCsPs\]?j^g0:[>`Hr.uP94sjF1Vucqrq!o)
%l!OJhGCTDJ^]!7Yrop&\B0lG[J,8_k:]L./Rgb*cfDUc6aG*7CI+@]br0KYHEW&2T7D#^uB=Y7ECL59lH1<cO]j-rrff.S<hqR]!
%?+gQJ)V"Q)^4#n!3'T!Bf,MEk);dWgY2@=tQ;8AfVj$T4(k#&Gcb@L_-MkAB\XlD>)Ii4-E<LZ)+l`^<L+5RmT\*.]MZ*JJPA8^n
%WpCZ'2;VRYrSBY@7rW/$Re,'LmX%H&H;@>f?gGteolTZ3jMes/q'.9UQi!\p1)oY8]=fg/%bg!)SHJUl3\a:pb0F`U(S&a3:3ot/
%L5M&EX78jF`f,>qc0a'*\7no==[(D1WZ4"F4IG5aii_[%VjHe(6CLNjFl^EPClHm1S1\N2;[T6^An3)i*T5FO_h4J,/K;kgMK\$N
%?p`8NMF=F-)k?<f>p>!Z]?hL%1[s:5E8=m++[GZ.#$2?iYmO%bZ8K]8Gm$+F%-3O&l*)r#h9p@ADqXLHON:lT/kma1WOk$f#RTip
%7#QN//^gk?;F]\TPmWU@]+d4F1F[Di9o=D*.C+=/98<r&Xj*`!gSd@K_Q4(^:p_]a3E`C@Q&tl;HQO#=We\hkDBKdjl58nh90\["
%)Rel;i^0tX`Q(7@2'uJ1QlpD8.?^T)SEH[F:-,I.4ED-<?jgkHot`i8;7+?F3'CG4CkDY\1$ddR!hPuAMo"WA2Mu.f;;SH#6r;*@
%;;r_S8%H4Y,'/l9b:),%P`0i-8VSLW+kW569Wk0N%VJ[\D*Lb<>GOJ4e_qPqKL$+J;,#_sjQG"gBSZ7h<X'm@XjaDu2(+P8)iI7B
%Pi=!5*c@@><o5[+i8tjGRq8>Clbatb>W*e4$BQH7D55Ac0\7oZIOp\G?FC0f-:\Lj)4]9*EV(g*IKlK7(_SN:Ykmu\Z,gLEgHl&5
%GiIT)Y]ni^_Ws5OqnIa-pD,Z<E$Kk4J;tt!F9Kb..MB(f?]^`+<W)#M>A^,PI0oS<G^Zu[_lh`cV'bGqo@;ocd(Q2oMk?TB^PXo.
%\9doHXa3h@Yt9nsr=o7_l9Xl1#gh'!]DW"]d!JaaPY)SM:9c%nJ"VscE5a^IO@_VU==hQM%hjN\PW)Z&^UMM>6A_T#T<=2qh`Db(
%hW`/[X7^:9IJ!E]-:7X8Qc>)%+s:dtUFqOMUWF&W'kZ`D=4mDDZF;,#51(X;&Ea8V(OUK_SG872]E&BsL.,0BG=4Zi7*gVceVup=
%[\!]1Rh\^fct_Dc^mn3E*qu80cooKirN=U?hodu?i0]++CQaNoWoW5@qHV9F)7u@WJ%FVK)L3TWVUT7QoNF#N$8<%-=b@aP=kESh
%=FB>2NTa*pM%0sI1_`S/^*`<CJ4<CbWoq;ZN%LC^o>GWtge>b$m"I;c$mE_E:\XCL'n>)NADk"*a*HtJEO5!*H_ZsdN]-]qAR3#'
%:L5L9?F\`?eUV\439eJGFl*9[:.ft32M<J`4O[&E?!9d6(n4GXAV95Jn[]N$nsk_L\4_Lh`(ObM,A:bFa?5:!/AZEG,+blU0[<+l
%jZ<&XFT]fH-/4.MVCi]f;65"U,N3)&5W.oIXp0Tk@eMQaTbopPfE[Z1FU*b>[!bPX\UuV:Kh-Mgpc9d%[GGK9>@_P43uJ2_daa]Z
%GU4']^3A]']>Ngl-m_s@7QH\pd-W<sSti?%LN4athWq5Chj\91Ch)PK>s+@`IIB.dj0p#N*Jq=FY+DP<^Wl275IA6'Od3QPj4ZZ)
%5YB@AK7V;r:u!X,Ve3(GJ-uWBXE$o;:u?E,MR.Pj[6QSG4d[c9iY8=:j_daeQd]Y%WH<E[rX2*k!;hgpoj,t8#&)*:lWfn)0F(4.
%f#F/XBSs3sV+%GS%Bg\mX/"<-=Br`TfHS^!<8ha".8g?XB4]%$l&(c,3AXrCB[(dM+9kYAX9/K[[b@+aJq@AFa8iT05Ef.r+AlUt
%9pp#hVOkSd]At3'<u"9A!PsX'NLEi9IA4Nmj@b(,Rq\6GJQ+.B]h\]/&Yr?d9WicAjQ*c)1;HCXcu=TN9rF_1U(?c4*2&98P-&hO
%In\+m.o_]CMAST*R2*.X98`5p_1@W@$`ngu8]AW2RE5]*Gq"=%"2EhlmS@B!"h`/E%FKA^#3Ju]AgL/].9\e:lOOXEQ3jJoVAslP
%9Z=#s:i0%PU6"e\cD;6/eRe\BPMRa=IVHmr*U"OK+\+k"!_5eX9)p7Yk#+P!NlN3GnY%L6B):Bf`I,S+"O'P1Q=2eIK`[tJ@"*/*
%#RUbd57DH:ZAgM\C+k*8@6g'b4-=Q%isEaO1!7gD_(SCLIsaNCWOY(iXfatVMOc<]l_;4;^G4Kk;6]XDh1`INn\V9Q?%_['"L6k-
%KYt=+:=igOa;-"0(GFMn7KY*-aj@U$7@buR@a0/UjY=]['>uu![R%E@a)#+[$W5E(K21ujO^VCc*NX_Rre8=ULCpgk<.uNG)"=hj
%O+6$8YJ2o_(jfdeIf!NUoduM,:MgU"Z5Wd:;h/_8@f`?mLcdpnQiRt!NMG6A668R-.)Ji@KFJ(fd\B]4M=L]PKl8#YZ_cN!BQlns
%dr1uHQ(gp<6`<C)e?2kC7KEn?",Ir6CqAY)84aYROrpNgi0uF,.Aejs;]<0BT,'01/X_<(NZoO_LEVc1VoN`^"@R&2.G8Rk9T&QY
%P_5kf/;%bYcf`M698VgaQN04I5e.0CDtA/W-GK+#EJHU<(R!pWVTfr3A<bmUec*^JQD9]a$j\MoaB8PPo56sYCOTY\,A/WmQ)P>g
%O0=]koDu/S$::I@eQa'Hc\UiGS-4EcoP/28PL>e.`.i=D5Z*ISeNB?lI3?i/J1,NU-PDJdA/6p-gWWqg()92Y26t8!:^]ZjP8'9q
%)ou@d(&0"VS0$T_._V:aKu,9;IIE5CF1t%W@MYcN<1"4VB$tBe3I#"`(F\B_=#\K\YI:/'MJZK5ajcTHc%l%*'qA*s)b,LLPIU0d
%d0O]?oKDeg:t$g_Hh6N"(D)*a5\Z;s7j^J74IKs-J]5B$*J[Ptj4g,j*o-<TDb4,r$cCN.2Z%*'=B"Q0W<llVbI[dB]*<[h1W\ah
%g@-]E[VX'a[QlneD4tbiI?9QqRp2g4:]Bq#3WUcSe&7KcG%5V5p@@SD]chV+X?h0tTM$f>b#0(Feie!S!odEE[LqVGXH3s]gYe_j
%&Xm65#A#!N_b_Jqi)E5BB9XJ]4(Y%UOb]oBUt&jbiThTg!Amso6#3@(m<4a%9r^E+PoY?V]9KF)e="b]764ecH]R&K4**"BChNHR
%:%1*uHd:*cJ:!dF6/p2+oG`V"$jmfa"72=-1l>_'n$%>KK?>5*qN,CZKt<$RJi1%EN.Uu1+dcGj/aTMimKVkZ-#kN4*NduSUk5b+
%gX\5hCgcI,i0Tk&O+6$8+&29eVurLrQcN@m2O]G(K5X(326a.cp8'*UOha"7mn1Qshk]880,:)fmZV@@&2?so3j4k.N"S@=Opqrd
%-L+_%5TNA.oj[2i#;,B_oHYsK!Eo#B:9.Nk$th%`h:T#1CV>:ZPe,CuLnM*^Kd7=)<n=Laf'E-TjfZ5U&jT#:)AL8W?XI0/0roGm
%me"1hZ(P$[C9,$@[7*[ZbY1=<!Fj2U\Z@6J`3!"Y;!3^7&SH]d6#@i$dr?SC&m[A35_\.D!/d!l`HK@11JD:(_Ljo_e[pA@4*re4
%0;<R+[:84>!..#,C'biFKM9^!q\PO0n!+pK"H2"='01kRpE5JCZd#eX*s6;&+I'amcH=j;0j5b*1/_3.g7CY$aU`#=pJkT-=o*kQ
%!OZ9$)R=5i[("0-KW=5ihESSRVU@oI#Au+erGZNufZHKKd@)mhVsil?kfkZ:omO)5;&2"oF7P8D\?4Z&p:Ch#&OcDC:3_`S8CTqe
%D'%<uIC=it,>_<hJ'G"C7+BAVBnjjeWM2KUH%i=m=NuVQK]tHEb@"J:K)db8$OgZ1-./Hg+Rg?rI_f3&?;"m%N"-\+ATc]MK'GYe
%!gGSoSbTRH!fShD6!hVP-fs74j>8$F-g`kfG:4#);@aX;,$9PRcbs0kCuO6-[*f_KML0YXA8#P*dZ>uG-(uKP;/ug\5lFoQ28W&2
%PN4t_oh7o-#oU6J@-2b^CH\-UI5i3,a)nld+WSY8`4Or*9@H0('hitI1qCV(<H)>RVd3LC=Dgin@Jb^+64-p&DW417id`!T24lAa
%'gZ%-ZL+>oS&!s20uFQ].h<mL>nWJ\&qK[e;94ed2I)JqK>.24;Pp][AN1ALZB;PkO]m(`^>mV*iOZl]6l"<^*9a\8afO>#p7,[E
%YI_GABmA\7jka50FPq'JX<E9-o8e\mciJ:.f2,h9pU"rG\=`hi(Z]0\bVi-^fqctcKTSZ&^cGU[2N_C=J3J2s=LBhl\5b^IUGdeI
%PUt^_d!pT>6J4l"fGIR>!R@^b2@pcqFZ52r8\lM8$7(0&fuU8eJtn3?;flhuCY?3G]/K`^ccUKe3p-g>P6q=48+?'lB]o3Tr1[Z2
%/FfQ7jo!Am"3?('pT/+11`!6.c'"qd<K`5,(1gHE9#NFuV(E@A$$e>V8q)+<2?^+M@87c/qG@>-8]!J'2'UJ1IIN=k7T=&P,Q]C%
%+QYO<>FNA]<Np%7"JQ(8L?YP(EWQ;E.+C$(HGSdji%3Gm7d.uEq7X_>(!+=X[@ek&G*alt.[=9*j)T'GrelmDaL$B9aO?PhZng8r
%Jp%0\0(2CE6mctASW9cth/#3?Ec$HTY,`TjLiWpd>sTX#.,6`A,ejVL<$hMe)_m-4KoH`]%$q)>\Nobl5fmQ^EMf^lar2`?_^\k.
%A1iDF&k7h3j&$]O8CS)"KatO<Z"dkdR8*I*TJOqRBimi:j!4&_6M%K.0sW:nS^D`GnR#3W6tK[l(P9?<nOGW,&MBMP)F2B'U?G2h
%.+gYnQ"3/eGh($?W16B?KFDcb<G!ME,WHbGgQ=Z59'scLaJ)]]c=F/1=]sT!,VrVL#e!O['Es%bF(r]<"KuH,4'%@Br\*Qs%13Pn
%-no0S\5A>@]rV2kU;ZEf*`1X;OdHQ<n(j[_f>2qOAQfdl6Lllm]7Cr,V^%9:ZLe[DnHn8E+*i1=U<Sd0CBjq^#!PTlo2\m%YoTqs
%''^0c;d3^]OU[^YJ.o#8k,]+o(X\dq;<IF13Jk'`:o>UKr$^\*&:r"4B`SiV9O(5",-t%t&RQc?SogTu(Uk>gO-2E^*"7P$@C%3F
%DRdIHPq.msg#\nrNXC]m9#H9/KF)6u4'J(!/48iVaggVZM*Pk'i2*2W]pCOoTt42b2e3k_UOcpt#-6q/U-K%MNZO*>oM&D<f37:r
%i:L>'!Q_I%5k\3%q8,k!^L!iW-H/b!#"f-VghFDb^(ke"*];P[+8_fMo^8_"0APLL%i)Ggb!]mp$T&N_g@!#J5:F-r(b:X<BW?os
%ije$J0c^P6X*/G$+maKg/+Ou)G_GJKI]UpYH?l$)HCoW'47E/<J-m,`^(lt.8G]1_A(\EuYOB*_oQA@SBniemXXoD.LIEJ$p]f2D
%Z<M4BI/86>>\M;gp49b39i]p7.Oh?^n+HIWOn2ZRr-j&LbaE4bI.qJRNRe9hi7(I#kN2!+$,PemY'])d>(&nbO-@oYlZ[b@#&cqT
%@De/`P3!(U6b#@1IuX,RW%blen$mgql'AMX5I(+q<53MuI^T3+/Mn>,akVe^3*ID97Z>L#@s]'2l,3(-@"$4U>a\1j:N.'a*jgRS
%Rs]J;M,1"<S<h6APtNKUiuU[0<XkV5=P,&)=9AI(bpS#W9]Rc%4SB#gB!#6Q'+Q:)[,-Pc1%7L"T&nInr5R'ppiUpEQD$0-d"cY\
%XdQ)^$T#8A5SZhc\chX!B,k_S7qh.RAR4\^J0M/Pe[,X=5uaDpju3F>m;Y43=Y1R!acOSXl@mVBfE-btX!Pk0j/B]OKa^W71ZXPK
%r/kuZFAOJ(Y6Fic!:O>g`3.8qV\e7coTQf>r7"XoNmme1XE6RIF!db\:>$C/*`!_!?7n;W,)(Dng78^X@Rg(F((\[Y8)X)i.,oBA
%LsjT2BX;DU:m/jIJF,A].&(^M^Lc"fIV@d6!Xor'lZs&Q9ZHmgGIj]4s'L9Oko]m+Sb'V22UR0TGk;ijjI`F]c"]T;"UA)^7%ONE
%^9#O@=^bJ.o\K(8K0r\Cj"u@o>HlgV.X#Le7WlL=CH.uTJsYmT\b`6j!#R.ejjh0ch;DS2R=/3'$h!99%97=pZ=A/q$4Aig.9=G%
%S=clIji?5YI@Nms#HTa6L5&Em?FlWRE\HR)2tNEM-?)-c/j,9Slt@qj[Up;O[fc@Unc4\eplt,3;3mfoI(+(=Rhuc5Vce%khe4+d
%;tdJ=_=)@8nC```/cYXEJ!cRPr,7pOq4DH^rUY@NCcV+#IO7--3)>l<onfcqlX84JEbDSVH+CKXb<)g2;2@M+J2Y/E::%D]AIgI)
%A:kbb`O*PcaX9+LXGQPJ>06MegA7.j'X2kQJ5&_"'7eMA!</YnEJW)ZZV/n^6L9>"@3&oTC@Hu"o!mulXD/9OkBcP3O-Nes<7HRK
%e7nO:\APlAGfmQ3\JRl;64?ac''(QUT%3N'S_(o-LuaRm=rmZekLNO2]dBb2YT8RuS39^OVJWo7Y3-".IcFi(Ek(76+%@UpX80KI
%d;V5.BX;%?4a&3F^Wl^Wir4HeZM)-cr[?@eP.<Fd"c?("`&:Z8h?lE%i#>d>O"m2_XMf*n;ZMRb[s3$F;,:;KVd#bHm-+j]n)bq!
%@\9_]]5JRLM0JW/[4(OO46`X`YB&Fbq-1VYV?+,1p\BqM<uS>TpQOTCCX3"GP2=TX)%f-$n3SdX(jkD#.m<iABXLHUn'V4e+YEf#
%Y<oH24S=P=UnuU3ddhqX#2m!#X%>RY4Ff[U#sGQE(eO*&jEi-iCaP&gg+lfU*%jceE"f!)-nc$^9AU9#1^gRPh9`[tQ?gRrk="b=
%bQa7`'C=3g%[Eg,dg%*j^JIsUN?#A9i:hl*ONN.sbe:o/?W,<<&S:.^SUg5N%)?DHADn$&P*5S]-$6$CZcc0F*Rr]/6uoI9Z^q:4
%190Vb%j6/!>jXpr7D9Sj2Mkm.;8X<>QdSurS$dSC#uVBA!5hj6XJ7[=,W(8Zb6aHhf-WheCc$98b?@\DPCubd3Wr"6eL2NjQ+2@5
%8We^2:p-@g/p5Dd?o$*Y:oKo[%D`G>U=rFOXpLWeLaS=/4OFK@QY^1YGZ5+i1j\[\VO(IU\\eE;31DuV)$!p/N8,5\35'BGW<U%E
%3Ip?=^iJNU6)5`ED%u.IgQMpE;f/WEk-86t%SOnEL9(nY#7<Jt?kXkP0arC9*">5<7WR.WAJ92#RjuQ-!mlk_(L\^t:!?YNgm]un
%rrjm$.6B,9De<qQi1,SF9B]M2L.FZHLrSogBrFY_*/K-g%KX0G9O*%".0qNHh2V>iG:iHEUR<tBf1]s&h&;G4Tl[69R@h'$&)[c9
%/k8;fEK^S%(((@h+KL>EbSF`HTIjmKJphe\Z$@]"#He`9,#f7dj%'qrr=T!#paVWUN!/j;._"*L@UTJd6%m]h]o^c,HQ%LX'nCJ[
%[`iE#X'YD%,Po=U@)bY:HfL:S=nq#gFoZl9DrfgMgEKQIAZ99a"DVcrk*>d$$0FZmd[_Y<;`;h>TIYd0pA&gsL?Pb5HH2>b20Y\G
%_p>Drlnfu1af;[9PGQ&rKgA.!:1.b'3R`o>'"#Af[A79AYC:))Q^L8D/jcc"#!n+L:"igXq"Ho<g313<X`&%Es*\BejIJJacU>=L
%@I=smf2g8+L%LN/jn@6,q/pJJ4n7X2fF:D#?-H54_Zug1=ISooWAEs1<G]SqA:,f;]`_J;)Hn.M;ISg<U@F?sH&UK*<9,0E,!&e9
%k(JV*jtkcXM:XmLdI%ilpFJMre30r</0%l/3EXtki/.![Z#*c4Gg5nr#-MRLC2Oh3Wb=++*2P>C%4.s/2B;h.6N%38Xj9NBDdD.0
%DI_hq#M?Zi/P6q&C9gk#/X%_*OFPd2j.%Wq<[%JZYp-;B*tYhH6=si;U4];H'#5,u=:/m1<:Q=pgl*0^%d0,\SV$p[Rt,s.m@2aT
%=G)[ihTpQCMs+&pVn-]^mmu2\+"GB:+N3GM#70jQMip(mJ0n$Ihnpb=(kRWo"YY.5%>6Y_eZkZ?MI>-R@63o-c_):S(.[jDF,=4(
%"VHd'%),Ip=D:PRqOW6YSpjqK"%T`iVe@V;7NL-^MeKeE#l[a6JYmG:htBV%Thg%l>]5D2hG=LWrEu.fk`S6j0.([(HV=!@$tc.$
%<KK4>R9TmM,YOE*f3@NXfm.8\E$.H@$65.lZ^up7%[?eR?(fD]A9hmUmEeCD2o`.n"O@OUjLP):Qe5GH,^"uD*u4AT9Q`X<,UCl*
%jA6?kiio\H.;IMAN9QLmW0`CY6#1(6UfjX,'"E]o1^\s'HbZ`$Zo5OZ"n:O]k"skX<9?nSAK1!6C/n*n/e/&]"g]%M2g;*0&*#OH
%occMTJu,OZ%q@L,413P-67I1RE`IM0_.onX5UHdmcJ4H]diRHI_T.&F$'bpSh6g],_g]_/'"$f[Vu+AC_+k]X<IPLS6<tIGHkBsD
%,Zo,UeaG2?n;UN[$G\V'L3IC1BLZ;b\M1HV%1Kd_Z!,h%PUU(tm"Sd#@Kjl8d6&SO6'8ck3tkq_9u^X<i"rP^4,9Uj'$TJN*uU;J
%D%kPk$tDd:/E6E?KZ_4X?uu2:>[?F<W?N/b*"ippQPfm&^+X)YbaA7\"i5KIPAk=ul!Pm^r`'R7UCCp>J?n`/TueHAnGq3W)dQ<q
%4!X^gI;5n?/)[7W)J&;EOgFOkA1efOf2/638/0ClM@ZE[)*W:W4V1RaMOE+"N#*,f,1Vq]EYH5V^cD_MR\FE032/+g"$k.rE,2tG
%R*C1M\lr!73bId(^e0J)`Q[M'"j#PloWV6s#-njMAq6EO8k^F>>(_][b_)H[nAY=N@R,O</!E@@!Ps3HOFabW1g3st-m@7q'E;a;
%W*dCc0[KW<"Ra#hD'p6q?+$sqfNj;^!1Kf>Pu`EXNs]q?GZE^Aim/!&C#S(5$gmY`$B%D3ip)$VQTm_:e]U">fQI[NK.DhPlh_r6
%HuqggnZY0:Mr/@9jsT`5'K/hiR&?)M=EQ;!VHGsY'mD`si`q.fh@tq5#hSP's'!#>ntD[og,>"%3U/Vs)Ei]OjlU+)YNoLGo#)Ai
%I)(f7-%/L-VM*UrTK)Q6c,mP^Hf%2T70:#g+IOdm"6,2l=a0gUENjGa`IR[0]Z_@p^^@O9fP6L"1\6`HgRD8bs6M69f=UZ0A%3Jm
%JMd59Ymeh<3m)4#2E'3]AM6u>/U$P3SUH"Uksu;1L:h?b_k]NaR->d\0g%>iN0CU?BMZ8.C#.6"G\=9i[/D,c\NcYBds$VE*CEd2
%;@6t!8H[8l/)/7BbiA1!_*uO^d&%n-30$f]'Y2/$U7`Jf4>YYiN@Hk]L*Tr8WJ=/E!UgDr@`!7teXhP%H9C;iW>3/_'E?ouijoCm
%bgq"G%eT1fpc((]&;h0s?RQ"O#^NkDRfa`D0JJmM+gX3ek.+4.0PI7+2&MWl#>>STJ:VdPXU2-60\I-BF(\<tP]Je+FS-kE=R?CY
%iJE&2A>5NoX37jGic^0k=[?J7b^r>#Ti8'h1^"kFIlIKIml:)`i$[d]UQUD`j9W+H'>GTja_2cfR!cgX$og1u5.SfFdSs'="p"'k
%a#ghe>BXq\)jq\tT`=7u(.H-EGN]/*6m,T"p%+ohMNOSd2:,'J#'its(9L0UPP-u"/Y'U2B4hZ%g]cl;P?RV30F#*<B_l?L>"^hF
%fmA6"G,oIg0-lWi$?uOk"l(toO^!k=!MrP*<:g7<H%0=LVu#c3Ko&fM)<.Ku@X/*pcr*^aCP3khRr2'[=22pt^?(iR8u^=;S%r5P
%X_Bnt*\NBFdL]_T3=sN`p]h`LQ3%:1ElP_cK'q8UWte.S&JccN_Um+A`P:0&C78d'7T_L;qdb<%I9@F;KYh3j\>lPol]PLONrf`S
%":E2uBFtD*Y`raV:h4\Nq-bLqP%mNg4FFhl:rW%5$lHndU6V6O:GEF:*[/_Yi>.9LL[^g^*`T5<K4pq##t2jt0LJ:V=Vl9RU8S:_
%[=s`G/2qWY,ADBn#0ZNG64Phk`_Y>\>7oQqnsfcW@iDddS^BI9b[<BPb.6W0;-CkE/C"os8V;c9I&meqe(DIiVF5n'5%)?nP6J/7
%3S%U=1oUgUL-j+M,5,VV1gY[*I^:;CXet$P&@GXobAktF0nmNqlqc=.Wg'E:,a.P)&'9D?bD*m#/D;C[b1iO`G6,b-oK,eTJ3K`I
%U:Z_RQ7Q5X]hth&/i(\E"`$Pg71U!WH,BT1@@7*deZg2eSOjX"q0Y@9`re+$Q`Q6@b.c+)Z0!Bqc\A]Gd'WE!?)#VY)[hoVKi2gV
%poJY,4I0Fm52X:>]Xm*t\]/:7BfBQ%AXhc`),'Z(Bq\m)`KBE`[P&NeppdLhpA*H(G3;ePGjeEC&X:gUR4^(mH(;mCMA+[mKKEEs
%gS4fVkKaLU5^pHY%:9OukhX6L4`UXX@T)iXPB,XYUKj]')8)8e_QB(4<jb$*45Z[V%<FY_7/'8<<Et"*%Z7YZ@(bl!i5S%kb&%]<
%?OFF:-^Mnii->qX`nh1R2Kk1!n=>[!;7(dE:[W0&YD4m^3NF\aJp\fD.Wf4'qhQY$4<`!k4j8[PT5=]s:-<L\Jd^;0(\9b^n_Oum
%G9q]q7X9U!1.@J.iEA^4Ykct;/#78OH`$pAcKLFu46SSGb1jEtLk$Ojf[jhSnGfCP4kq7=b1pt'mUoe@SI(8t.B5Q<>a-f$`RGJ=
%A_H]KI#6;jF9qg1qC*L&Huq>O]5(rI28\WHi"A8^&Q.4dZQNb*W09Mo6YAe?^:$)JJ=E]Y,O`lniDIG\"F*DE>/hGL)I#Iq"Z"A4
%a+I,N*gh_IB**cCp^;>gk&&a=Mf,pdUH[?D')"ts00?rUS4mn35ictR+RB3iXp=N$IIXWEgI[nGR!NI-KU*dV:>(_Znj4UURMf@6
%=\)cc(1Z1];-&R/n-":Gq%0)m?<U[he$KJ"RZnCm?bV.-gB/(@gF?\'d&I^f#rkt-n911)\1CXg8oB=8LWUE6n:2\pIggWZWk0h6
%k247K<YR9:l2)X+_0Q4!*r.cuc7f:KQ]cj!/lei^s$HD`#V#%CGnc:B$KI#A#(5ed,srTP?Uq7`NfUhCg+f!TKtmrnP%M2"bOcnm
%L1:V>R:-Z%.bV,0W2(PbNCYt]JgLQs9t%jc^g=qR!^i&bO1ZU)KuI.l,h"M4EBr20TbJ'-L_`]hP)n`DR^#H%SlrL%O8R-4\7<&-
%ZL0'f./3en!TA?pMBSIl:=0=/fZWY5qYac:(:dWX8AHWm@\K\)oF!LOf!t?%=HEmkoDI[u7[4Ms&QBcgi(TA%9LDr=$03<GnpG:;
%6gtUS1h-+e+SYI3J;$]9In^Xn3Q"X1WKCkq"?Zu)F=L*(5gjHoN6L3mL1":sZG[Y0;YW2<\b._DRH(&A&a6b6(dl9f!?36&"^jl\
%'R]lr3-o&\3JD/ng/!U?C?$*R\?ral7h?*dQ/ib3IaLqQm6FblqSZo2=Z(C@BlO&-,li&'q@u^skl<FnY.d.CK>a.P2Re'kp<,]Y
%`gRL7SS^W_FU%uBZ;&IPh@1TUEYZBdS%"7J<P1l?m*6$2Cl"DA69]u32?L7Feq"*V>2^apoZd-SC6PD.fB_?+5RY%Yi&o,L^#jjZ
%-RMe\if#`RM@-ZBd0p-gqIS)"K;a^n.=k9H/q$"[f1I8p6DDH.(>*2A=aqEY3KP>@@q7mfb?R*f0VHhA,Kb_V6`NAY\Y]^6;`b$n
%b+Ju8CS2-\#(BoF_BP@UKO.9tQ-6rL%:oEoZNgnGQTNC5`VqA#J-;4c(fsiGMN"\K6>n(!RG.f6?rKjX7lj1B-'e(mHJYNP]WAr`
%2pFe1?b3+/<8;(XBsgGd'V_H^/RkN.&]&]Eol*$^B?0$:_<]8q6_N;C`\?0j,nhjO*lo;LjN*n4heT3[5jc&_OlFPp2Nr.9OIVpb
%-N_r1SoL4(>npU`Q]R64MAHKdkmcQ&:2`?M6UN(j3$toM0)*rA>/6tiOZ)idjMnQr8`-L=hb=8rNXL1&06o;QEK+!R#Wo;7:\Sos
%Q"*e*f@NS6#($U9iZ?t^MAEl>D*'&ln\tp#>ZC%/0N?F`?rF4G)B.o914'MRWY*t,4RlPmZi&j3pWB$#jd8$?ep*(X=_@>o^JL)]
%FqkHo\PkV!F7tLn1-1[A5(;X=Z:ha5/qGl[b=9LL,YF;]@R;ea(aJ>XRE7%E<L0XB8\iMSFi/TA22MSggX5Q5b\=s@;tg"JDE]"C
%"]2+H^6Sg(k$'knIar6Zer$O;5a44!1YhIIgSm&un]NC,[XWo98g2gkec/\4\EES13SNeqMU=\-9.P&3+leai;)mV<MF=9f9+DO`
%_V*;$]m.7s0E.@g&4I`Z]7tQYdXmifZ5(10iF)k7_eM$5<f%@FKbRd*Y:&3MLl;q*XDYX9[WSnN6KT8nXc'B*\#tR=/=!Bg/qY1T
%35(D^`YR8K!CuIc.d2hs0\G*Pl7*3C'GR#fks<]"kUL8!Jnem!/B`9J$t9;Q[Hu<U:q'\7J<J:^XN>ibL@PNUZRgibC183'^aXLQ
%`tTK[<&d$M@O"5HQl-[MeJ4XfcCAa].C`@[#7m'SlPOHN=]303%e?AfZs[P*`0Cqjn<C>LLOpAFgJa-E@b4_f!B>+bV[cQ[!iS,m
%gqZXX7^Ho'XMHg*%d%K>0@F=T?,rmWJL9qSFE;doAlMf2=S!,C"(f/HST9/6VKMR]1cWklInTEd[dpCW8rXH3N2JAO-%bHk6hq2p
%#AXoQ`!p46NeE2kPp.uimNfOJl]PLjf:FY\2cl9@*hLZ'puhD"_kWH3Jl/J2)3CrBb_*lg?ZBgFi;nP<1aSl)ieh.<9@GfD/t]NE
%VnXaaSMfr1AUgps7cb%Njdphg,4h_0PiM,FKQ4JRcHLfs&HB]R<%ndl*d?Q$c5P8@=X1tP_&*P2cqDsq>W;*C*gn)*oefg+RQeY.
%qc<V2mXVF`<:A@(`2q"jQB$`*"(XO`.?8g'r3f:[BWYo*J=L.*&gG"1B+mn$N]o#</gYH=4iEDuq%<^mQX<[fgS580>bk"=JQ>Z\
%TJF9dT/$QqJJkk%l=$p6J6o,u8VA],!k?ot]9fTJnh)6pq`<PKZC\/&Kcd26AJ6e9r2&["%5Il2e!Q60$WK?s5`fhab2rFCPnW+H
%n,Z59eSDNp/;'4OYc2?ZX>0-iBs=7,KG&lN`!*Dh_[?Kr&J2KJo5]`7[qdHHTuM=.(B`1\D1]W4jdMT8#'l<G!"[?DClNo=.pJcE
%YU1c')X"ukZ_ng4Ai-;k%XPoG4Z@!?A#i*%1S7M]LdFL*;*rL@pA,$Wi;Uf<e>bfEJ5Utq_R*"6[CZXR<6[j+`DqCq/L>Yhn<8&M
%Mc_'Gl#='9-):jR;D<RR3L]Tj5C8Rm&(3p"L?S_nA;X5.]t?ef;8(sU=:LCc5l";@IPu,:hC4l%9gJpapT_5RR>AHT]]lG5WpS"&
%WO:HZT\66"LNK'fEiEfQ$libZQW^X2/M^Y-.W>CISPg.sK^k_1B-%;VH*-k=F=;M'_b[qRoHVTbD`.d>.!-7=*R-\#Y<cl4#A[(.
%_u"!s9;[,IC,8nN/;%C0Y-u!+&th4F&W9m@Z%?_SY>^DplS>P^4B:",^tZF@WV2_tE:ib^HRUC8F]sQ*+ePqVf(.Qc))E^-6(Hf)
%4e?L!0EA.001_4PjP38hHlSjPBHaN:Li9R4_"g/WLmHYG7TkTmWJ)a\i^OU'Ua@r'6@BCa<FR1JL2MoW'?H6b21V]B9;e!+X33[,
%eddASW?F87o@15@CL,IiM->.X_X"(sl?-]Xnk,5#TE;a.>[K&a#=l\SmWf_/;l*\.Q["39]W2W_89sEcld,1mKt<`cW@1?m4p\;O
%NQ"6.7YPpH>(!ajK5LAbp@rp'+XbfND(X3P:l4lI%(;1Kqh=N&l>T1P\XF)2VV3okmSjXG>qs?coghIP(lZ7MTg'.!@Kmg6fMoeh
%1RlAK'?WhHf4V\j[$F+6@2VGKSe&1JeI9rU8X:r"N1`IM+K:3a)[Q-G.[FI=iK==A:YD1-Cfh(Hpn6Ri.6\DF?`G"V5Jh-"*ef8@
%Zh8t16.7EZnelTZ&GclB">s`7:p<&Yim[@/DNTh;%bl=;^C%K&j[tN#.BDZ!YJ+ou:O(Q]g^5jcEcrtAK2Aol!Uh((qdK^IdEZ2<
%-*fdsWJ$C<jg,is%ak9V;"EMe%#%#bk=[bISVh*E<R^<Mr90KIcthd-l/+lAYBC;BB;;*#M'3%s_!T9O6bYTaD1e_0P^\X`80L#m
%&Bcn)rPt@#Y6H0N*QL,]OBIDS+sa/7q?$\,Kn^N\*;!_TC,"u>;*-If$>@$s"X\d7V=I#Z$jVP1>IuOJ^CsnMQGB$ka62k!8"0oC
%?.i)T_bWml.(E?WL'$qc`nG&$*j\)RJjOFnZoY!AY5rIdE%%"VpXF@')%g#./<n[e_8$sF"<L<Rq@XBhL%W)j[MLSQ,BW@#FjBB?
%L+`Tp*ES0cDc':f(AT^;)RB1UKPUun.$uhkJ-iEVB2;8NO:EQ-$37&beEc6iNISgG_lKV8LEp,3WM(09S]2kfX/3E8Ti.#;p@BC;
%6NtkKEs(cE]7d,uPgX!H"R2*%B/</WFGgP=(^f">ALZUKors&*HkbE?,WZaGAW1AtUhE]<D#)'FdTT.+W@JmkUr`Df'gV/sK.<EO
%FUXN:@r%Yjos_?2:sak6HWJ5FZ$)EjF,FfKW&b27)&!FdZ^apq@^ZA*C"<UUAT=_Fe&MO_Y(9IQ(91kbf&_'t\`dtt&cs\Y>7MP]
%W23I\/=)X]$VdpK^^s7PlB835f:(^^^V6QNpYK$\r4lf'H\N)]`NZf(NpLP(<b]+BfKnT'pjdH\E-&h3Dmd2T=92<%SJ_bt7b<L)
%mc:5elW''I/#sYg<]"pWo]JX@@qL>aUa"9Y[.eOB&jS;eRFb?@&=JVH,eTI*]><+2[To,3apK_C`+@GoY4capH(ENgXe:1%4ehL>
%#XM?S(COKNf24jt_OQ.@i'TsU\Tm!a3&0d7)3blHM8Df3FS=F%qeANB2(W=c@Egc:p^(AqZY-fhNC%)$A7O2kPN0q?3o0LC4<?/B
%c&lWDlNHX]dqspi4?]:V1ba)3Fc,&B\Ac^^IXE(fG\`$Rr/j#3!(q.ek]oZ2]hW4e$ho#`MdEOMDh/Z$*?]G0>JVJ[(_8Fk8b53J
%]*ZAHSeg[//4L>RJ=YWd_NpmQ:PctW5baLLc$^;[*?MLh;B8(?e0$Kg.aG&c)!01)5[I,FK$,fBO3Z3M!qY;M2"kc5ZXC+CHe8,f
%d/k#<gBjMh/U1eICdb$(<_\Ae&."f&TM1!IDXV$U_G(["Ra!Y2.ti$F^83MKeZ-NIZNMg#c:)V9<l1[M5E:[E`+FSUU9o`,LC7kU
%ca`R45(0n8*>L=1itD&3IF9ET\gjI_)9tMQ#I\(gG_.\:1gt^*JP'bfQ\#_W=k`2<J_EsuYm@).)Qt+YE<6+^m77<[^CR52T18e]
%e0=WrUtTO-:nVqV.40_!#D+*D_?L&!TFFL/R/?#'2,NTU,n^>`L3WhO%n?Wm_ru(d_P!R?ji^J@dL;0-4W&WSPFV(Ek;Dha=:2/u
%c<F7hNUAhk%06$g2=EN]]5(4j$;/<jRK5MtaVG9/@,:o4booV>'Hp9nhL2r<p>1Vp:XomV$O>*K5F[.]7F=l6812u!-4hZkOnqg&
%&-uL7S69g`@uZ?cd+8![oe@;!b=D(uHZ-u8@Mrp7-_=)GA^^=Gcn]_<g3lCQn$.A\*rMGa.jVe5?Y4&6`@E4XX(Gc37k?^8!mC3G
%$drMlXkmLkeNiIcM?WT%7@"4>b]Bcf<e/&:e,r:YJ1tukX$r6RpH_(+EI=Ud06Hi/^1jEO+kR((HUqJb+OVfEP!eJ;@,I[.JCk7Y
%0u<n>6',Z7SkCgiiPAlYNp3VkY(<mY:!(<r>Q>+tEQMmVMQRY?`0n-DOJsD9A!W*&;3+8uM"5cmL.ZBm<6.qtqsG9t-*if`2C/D+
%QL*ZlC(LApj5hc1Tl:%m_rb9r*9e<:O7.eE&W@&?fer8!jB68W87iI'&s]ln[10]N`\h)'%RH?1g!]MW)K)40eQ%/7&:q%6ZE"^c
%ojMZoNNDYb9&-[iAoWoGGCZ,g]Dj)1CH!bEJ?JDP#4bfG)or8\B!;]R;P&gb6HQN@*DgH2:_E9!f3mt>'ND"UXGUQprMno2\>gu:
%OTDZO!"RU6dE'r@T?MYa'dhMAWZ@]A1dYQ0?XF6KYg*:+5fS^+pVMV,diungWW().B66B=7.ah\hb0YkIP9'eQ/6@Fen3\oI:`C$
%'S$&Wl>MQ$ZCLX-O;6G\"Y7_/..c!;!]Y6h[:aPO$3UiR\t2VZ*.HQ/',mVlYL\koPu@EOoJgLD]F5Z,)F3[:Ql2pK=91o-E(87!
%U%3B__oS4q+s4%X&'F+Ulm/2h7%pjX`hYGIkcEi7(J,eYdfXi0$Q/Y9S1Tr1;GqZaW^>cCcYN+$FH,)@[r-f:g+>$M/j;H3=[HEO
%RR/N.Vg1V98RsIn'ntDjlI5^jqt+c.5<;]fhG'j'L+L(d?Y4^-$.tP[aKgf6F2BIG;&m(lAB73D\#).G^b<-M"4]\4V92Se[4"%H
%I*kq"Vu`=)Tj:_5@M,)Om%t;U0FN:-=snHJ/o;Bn("7he2<hP'Frp^!d_d3^,ef`@O\1T>bHFs]Y#\mf`sDj(#L8XkS$"hdhW!H1
%<bXmDWG"D/e+BY,g&MY/Br5rm\@S>lX)hcaN^erm@_.!C(h\5pQMjktr_^Pf]!]P!5PaW1?fZR>Rr:(RC*H0#l#Jf]&Q7Y>9"(hG
%9]Z2,'SQUCl:=ZL3s$q_VrK0_7P"4=YgM/<@WYVkO-kl_a?fMUL$nTFfMSmjC%\BR3f^:Sq_%7.nU>EKJ:qrSi;`4P5Q9gf@+@KB
%Mq5%(Lcmii?gd^t:1mj43GU:=F`qEYqU,KGr9o.3f73hV+9)%RJ,,.TqPW[dKE(\ls8Mg)T5GVQcS#):?f=+<IaS2o^]*9>TDnDR
%[sj(\A\\-6?iK]<o`nb>h:GQQ$ba1CSp]Q[`-\Y^o@Z(JU[RVorkAAbf8OEkD<K>_Sef'/NF)::r7X*`SND,X:++rnaaK(KCu=:o
%rF53qP!Ps'.m?cU7k=a>cg%>URB)?]`aF*ERg@"iZNbT**t-+`EMsX6q56Wb[D7I7S^-t?B(,7hb:u6S$n^[5)YQS2-JdH5>s4JI
%\E_bFUW*+Z^*he)Aj"p"U3$,W&`$9(i4VO#%c8P+3sY"g?VGtHHi/2aqV1o>[j8,krN1M^fe89Mmno(>E0J)UI,7A4*@2sW`kbRD
%Zr9Mu,K_ae>jWCd.;5OHY;-0>X*#D9N;'+?Oa54IC;:)@hGHc4q8rQ8olFJgo_Zm*DZ$1QI*7Oscf!YQ[sMCcDta(+r]hX?Q;])L
%De]U@2:A4cmB#uCI8RB=$p)AuWYfJ%fKi^[&B,$j3V[=VE<4jW8Z&"&6JB&gl/hu<8cWSR9*CA^5Eil/64/C:\`5m\>9INB:-0gO
%9kcb@"`k;AoIt%C&8#`1_^Y:9jY]IMi2BY8hX0=+r.Eqt>YIbUYUbT.BWOFSBd5.Da0OGnYDQW($MKE:4k2$*#AEW7_oeWR9pBSi
%N$]qjncbHd+mOqpbWfCdqg]Dl'n,;.9RgJBN+QHik?gF:>;nY:;T+qm?`%d!d>t5MJf2+'!u%a)[[GoJG,,19G(^FHVrK2qlJjLA
%++$<]`\/))Ln%.3PN8Y'R@Y=o]@`7-]QTMSXRmb'ftIi@ID"Il,iO^XQ`^$MQ^mNB9E&Pks(:^!B(#[I\t_>gA#[DXXSjjW;5Rq.
%pSCEL[GM)84807T>_c-$h=>^!TeR/Y?r%n;]:U4(fi]Nq-<"$+KVQ#*>bsQC-=SrUX,FB@$)N.V,!3,6,/[6?n1t46dgptZI:<e#
%KC902fFcdlINn!uO(:=:\3#jP(?TcOMho]a.SI!mBOG`#7>37hQp=hI#=ad-)=8QZhgBk>`76dWin>I-d;7%gp9@%!EdW.L6hK^Y
%5D5GD!u=Cg8t_njq3T3jV#NAP:JLZ\Mut@1,66%s$4#;dEk_:OYBV4*3"=,]'A^#gb><U!7`)*np#Ltb?hQM$0i#k@;'\n/*RFGK
%Hne=6VFMnpiXY>9'7hZoa?!VbGGp8P0jojZ&el<^>dqq'3Lsd6.2InT!BU%05u`Oj1>PpN(gt(<T*g2>8TS35[rUWYG6"0PZ&<a#
%JLkbE(cRF&-DIb1&YbdQUBs:br(-%Y)K!%\.p0maoScR0-A7hfCdD%a*pTs-S>LYe;468[E`^h:aoW>,L<-eO16":f5MaZTTOtBA
%9U,ld9=$%p[&MH'nK'A8]#5pck>6HOd?^&Q&>1;(M^SY*,\q-JD/1TK9PJ1be7osX0,g3u,X(I7&,q-%S][1!+%N?CPXGLq#/X7'
%V\%Pa`"<;lh/O:_\&b6#X^FT!Tb>4JJ0n=j9!FuJe0<'SRQ9's%c'.,_G6g-R:isYOQXM5+^O<!@.K[&2GAu.j!n0l7>mLam01sd
%^<)Dp*6u_-Bm85:(R0MFY.1\E%,N@;,)cFIX"56g$4m8)3HQumS^pO?)p)Ub#0>f`8DkJ258E"P%uq#_HRS35dhDWr]OeEjPX5G!
%Q[Wu5\l^1Vg(mps4G$KWZ4eoI]6\2ec<WF_E86OW5%1F]-IP!:S3:ALrOX6cIc:I[Ykt9iIqm'qrD3<34ij24c2?NM&rWMPB8N:]
%@$C"n"@0hJ7?K]Jan[aPaN#.c+q`O:qf0M!^1eg[MUi:`aP1E;l83e=o\9u/_$M1?EZ'@O"./Pa7+tlEgTpAHfh7ll<W'Y,H"EM1
%dlocP+n1iY"lN(%5-\F?b/Oe&20:/D0@?g^NA+=p\QOsi<e\]![PPej!rDW.Bp!>tgqMWp`2=CU3-Kd=OdYWZ%Oj-ESl4no"dh4>
%1+$>b*@DjX'%?QZ'.n9PiT:A_?:$U?Z^gHXVg2Y;p?Lu#)_5;M//L)TLNi-i`^q![gi!`cY!M]TBP0Q.Uj"gE.['>shY+8tjduId
%p<KL)Y,od_F!U`P9M0n&>3Gi$2CX`L/9MJ:@"p5UWc#o^W!XF4n(HT%-di/9j_'IV\s]D(,N@R,mQUO7k?8*iF0;uUEHQTZ>LFj]
%eai#IhH@B=jm+E6A[uhK]tSnJ=!dbAM1J&i]5ttCDEF7Z:gAmn-31[*G:a`s?(qT:'qTgVVR="`Ll6.l;Kl>9D7&%KE'id.eIXIA
%!lDo[+LAn=oD812?b_N.'cRb9[s]rKlUNebDfsIZ.rPg\Tr$+pM`T#=g5tX+.n'#M))JU&oU,&c^J!&=!4[p<T[Y!PB04YE\CNY&
%OnF%C'5C2/P1cChCi&ip_7UR6CJGT+&E??*L/Zlp(6#"YJ?T2#Z7McufPNqfgOk`Xh&oj@@kfa!G%@9cj[$>/aLf8Ukb:h'kB@3X
%-KSl\1ehT3!Ai.XUo@ON<.%j[kl>pS+k,9*V\V7sKG>hc(NRor23^-!gp,;(0=N6"*H^O*BJuNO1Xi,V>XO9Y.ioniPW0o[1upr,
%Fd+ppQ#&d)9*E)!*\jU_[C[7](BH6V..,k\/n](7Wt,^Ve"$?`$0Rnm<JG.aHgK_]8H;ABeAPl<E>O"V>lsVj0`@DuP_sF;]O\MH
%4RJf:JV-aMRn^9>+3;s5po.BBeBC=UM+'/m/_66@)5`TR^@`LSTk/R1HtK<22sa$Cld,rEfs=\*QKdJhL-u6^Tk;!5?X&OJKUtc.
%/dlh)(^>P!.&*#4<6F4pUepSbMD4'U?`Ln:KqB<E>h=UmB:0>C-Ip)GaB8TTD?g,VMtU<2h./sCnSg3!9i&g60u-*XPQ:8*Z6e!6
%?j6#GWnp#pM*q;@?q0.,LXZW@gC4JjAdc3S[R^V19+4SrAcp7]qZ2(1#dL8&Z\C9:[jC0?eeGcg$d?#!mu_^)e<*2pa@1e:),H'e
%2MN8@TLKuLCY#)8L;D_^T!'1>>1$RU8qWoq*chR6_PTmCm%c+=0!4G]T82iY&/&-l_QLdH>Wd="b,A8?:cu0on&ifQm#GR0hX^Yb
%*pcZucJ>dFfN6^Fnc?n\3>hGq'L`W+9"(,P_@j"=Jd)*1]q[?E"^K2t`3"/$aE5#W6afQ1gp3%9T4]<Sg-YLEeh2]b>EOIVmQAHR
%Q2st<@fq#VDZff()T^gqR1Y$])mk'u%%RE1]eMtk3&W1K6DGU3m7pG@jFU%8$%\5X8e2C*O6Vq9M:XS"GX!5.b4$q)l02A2#MIi7
%ZU[&okrX&4-@Y=_CMn)u2i5.[Eqa.)fM9[:C1+,:-Pr,Z&'k]$k_"F=$]DN\^CEjM+pcVpmjW?d*pbi`:1qEdVMW7u"2n$$1PUE^
%,^9E?^km>7!u)7KBJ_<dRj8>jUo(kT4MqF::Dem,cOdL7hA1VZb@h*"K4-OV=Y;BB.44)6B?_cX,9=g)>0b3P81/`i7Z\g,:r^I?
%I&I+Y=HCG+eeh9=)`;iqoS+-9FF_l@V"5A'KBF4%/7P?V?=:"W6:qS#gX_orcjPaeZT"K@SPJcH0="^8"l[Jbf$*P^kJWc%k/IR)
%38bMjN*f"a`0P6ZH'YSHC%T0XM&7JG.>M&DlYP\hO;+LqPI:[W7#o(@!(Z5gln=]#::K7%/<TWl^fQ3Hp@oF'p;Dj^fkG+:,eF8"
%(;M(lau9;n&L%!'FG5CJ@+Mn?]_&!\_%1SY,'=E2;Sg(u_d^+s2YdJ::\?$1lB\R1K/N&Ek(Njkd\5q6E5Qmi-VCfWcoa>!n)/H*
%o%a`e`cI_\*"*RNdWCMp!?bS`011ju)@03-Y3!UG@WXjA#*aLEYi5`16lgQn3RT@d/.a0_>%7U:Usfa8pSe7XP1sHQNY=?_?%TSC
%Mr>Gic5D_G!h=*Ak8g%qMc1SArC3ldP=>K;"LQ',j\<jUURI[5k?\rOhJ)&dr\NJ=gH&/&E8p8.<]*W=&=$(uEfF&'Ogh(:QO7Kf
%2M#.r\2+dmphMGCe^u:g9O7(</hrQ060@0o@'q3.#4.^3SJ'8]'T+"+loAIW*QPY'k,34b(E;ZM"NF4's&];oHB3Gsra?S>Nq(bU
%27ZtKRR3ddY$bBKK34MXU<,SREum[@fHAKsJf-3VJ#TK2HA]>J8cQ\N!-emh/!r"s$__mV:.%+H$&nr8C53?.((.X\O>;q<$9'`3
%f0&r3ik-M)U7oOG2E$H44Q@`)7726a_JADK,]oMTd:s^L)WVM8Rsn5DUUI)<!R`"h\:MK;!g$lgRCf&]USTmc+KtRMZXo2&hcS!E
%^?n]fV:6b9=j2s]e=B4"f/C)/LM*5$SUD>>:hZ_4(Vi1UIgmqnmGUt*2Yo.Wo$F[*]odtj"dGE[afo?<!,3;UD[;D6lVLd`LJQd)
%eGMi$;-s"JRj1D"gs/GuUP+[PK%q,:D\tn+bR8LM)pGMTp]Y2u"IT``<*^l"_SC\b01`Kc"Qu7F>bZ1j!C>#`[j+eHU[RJRU"9s,
%="JLq!n/;<bm'kqAE&=DY7YLDp)*=qR^!4q`1fL!_-LtV9,M[,G*UWF<0kpu=2s0gCD6t6T-FKMXe!W8&9u%3>tXPMb04<J_SA(5
%pNM.Nn<$5peW8;fjK[pBqSd7(#ggI>iFq2^6f9</"q_&H$mO)A,HVH!m<%tq3]!62@L6o/U&Xa^qqN%X<<01p82bePOEQ`-jo7&L
%$DYN!2ui#sXmBM3"68,#jF,t_N+NQ.W5N7b.3PS!E4C)6>8hT)AIU.]jucRO'Bp2W#PUB.2PbL0,R8*H0\\ONoD[Xi=oEsbDYE@d
%]IV<:mK0NID!-^Jn^O/QopeTT:bT9o?M-+&:6\+MA[OK<oikQZW_&AMfMOsbdcrDSXnmZ=nH:CuIKBR4h$?2k[V*(f[@l$4&mL!2
%%s8_L`Ka[\+c7;)oY."G`WOdRM_1TR-;kB`<[A>YF<e"T8b>QuIa$^\j/[HH4^8)pi>ZQM7(V]#lRm</U78K&i2s^RVFRMQ,QV3c
%a7kl)\T-VuqiY$TVeTilqbdq@S;LMl:+iPgnE0'SQ*s4oOhrBBT3hFb(_m)#NE^kc'g2H=O&)s2=f]Spp3\Col9Tl$b1<NFZ&+o7
%d!3Tf5QSQ5q7LiMbWX10_NZ8KZXm\dU[q@=5mg/WUqM\\*Xk6.iZ>fI#\lf%#t8B6W>?BC'X/S9%Nrp7[)Cc,63UL9'<29NlN=oP
%krQTLXRBD)0q%\p5MS2*NKkn-lM">5W!^OqoPW8e>o:CHb*j<1*11^E'2;HAkmQ)Eae$K_fn>!`bePY"39$%L[Z<t9";8m.dHH.[
%OFl%bM>4Z9'jlhD>H`@XLe(A.5TJt-g+_[F-3m&$6digK4Jf5.'F[BnZKeUE&sl!GiFGtV.],gdFYBNHZG67H^B)63Eou1R$d^B4
%;W&(I$"<opk`k9?H`(ibeo"EUL](tQX6C/D2O&VqX.=oR0?9&SbtOT^<g2R$4O4e*9#RI^$Q1UD&1(EHj[!SO>bJ`bZ5Abu;<m+8
%+HVp]*8mWT@t+@$^GK#BLFmopO*$RcrPm95p97)OXFq0"2_TA!+n\qjn,L/gjh:Kd`]@;6-id'q;NL"4Tjs"G;ZWk9YA`Wg2&[`L
%-*H>tiEo\t7jpKj0U*>i]37IRX`jY\D^ldd]MX^9NKegJ7(XgrG8>NDWm.)fM9`AD+1=qn'86B/%m#+"'^t<2=EHDpfmW;/$oJIG
%q;AV`/H"C:X1J\hDeRgbkm=:.B@fp>!2"/-F/$YAD@8]KlQNF!B$'7`RC%\E?7e@=BfDh:@Z"+iF&K#9&ZSV5<X:3QQ-:fSeSX!0
%/?4VHc?5$p$)BTPp*%e`oXVf=ZVLnt+7K$=9:/YV`94]5`lq65Icm)r$Naril]JHQ1oe^S.6c`WUS\Ko/>jmAWpQ&7_@>K1[?UM"
%&UYB-PZ3o1Y(HLQYC=Gj;p0;FN."Ak+h8p%:TR'S2Ukl\QmD?.151D_Rj)ROM5Xt.O/G*+"2+0.n+-]t*?UD#q)FG#i)9E\#]ebq
%W76'mcC?iiL)4Y/_SP#Z=p19G,+bKj4;(e.3tI9cg3PjBn:B8LK)qnL,f(80R8\iEG*iK6"*$$"?,ID>_FfR_$eV+U5:DIjb.ouK
%d.`Xe,cBdaXsO2tW_$k^,,;"SR*LOH"puG:m<b-_gqC#MmtSN*enid/VQ0(iN8AU.gF0`7MYZ#+-F"qh_(Fu.JV?=*%QC4UB)VF/
%IPJaMO8D_eq,-uambJ5uQ:rZ+<%9@#Hp^"0(qm27,8IpBHaODo)b1V^3sA$qARUKufl[a(k2INib#MY\f,Afo?uVW+K,RU'_DpaM
%j`7/6OTmA*$eWq`nQnu=dX'jFDP";:ja7B5*+%VjKt^<K-:ZBLrUUrb5BYhJbQ`3$EZuGaU;iBIqpfZcm)'o+d1U:&VZfE;F!kTZ
%olkP8Up+ZhhNBbfEBl=47BLg?JMKPO2YnhD%*JE0&d];ZEY8ki<?qq5WoIOmVg&hA$qgZ$+V8;Bj2/$&7"322TG:L@Vu3^Ss/cNN
%l:T>lSPrK:N/7i)l7PP<,Ma.dVG<8"3[[mB1E@n"PN.Ti;<V1qG>7$nc2nTujCn+9ct(L_KZclt`pU-/o='9gR-Emj^D+'d`28_P
%-4?d_lAEj-_].39%qI0/I87)*F4JedO]9?(WpEe#RtVE7hdnZ[B[c??id6R+;k$>`Ng%%(`u[8)Bs^krBc$i0`fK8UXISO$kNhcH
%/@Qf`@E;pkGZ@&mAl3^PPR'nNBhlN?ACi1V@,@Yc`B1&?LlfiO(Go&HiD"o<dC\`1ZnnYc3eRUH;<l)mIP31Pm]DASGUBda%ct6S
%Bb+:nlL&+[PFn`crK]M3:"Q%"I^/BG<,groV2IJHNXOJ+Bcf3;>spWu^q'u:'i47O8U:nj`d9]r%gPJjEg0(71DDu]`H757R[VY6
%L8Las/I6BNpmfm@)?su^c/"ci7oZtDTeO`aKE.*X(bCND@Ma@6Oi)$Ng4f]=\D)t'C(,_&ja?p*`\PU2QI]5&f<d-L@BRkU$j\p"
%"U%As2X_MMG8"X@>7%D[FDbWIDsb+`[K<(3>skacp.C#s`a3UVJc&dD[Om8OL%EfbVkGK*3OQk,qJF67o`N$$`l>nT8/Lkt&R3:/
%[d3K9@/n;72h<HVRbb%9dZogQYuLSH#2=@4<c8i\p[AC?kLsTT48=mH12=':V^0:2ienln:SC3s2M6c)Am9U74C;Q9HbVCYM;(C>
%RX%UbAL/45RQ38rl6>3O+u<tr>dIUG%Ted6dJa@ERJ7UpHg.El!>cZ1)FU,QQ(OKI]]PDR*XqJ!jGGYHG<Hp/*7jnibB[n5GKGR'
%Q=Xh)*b?I_d%jn^Sf)AiC0o4Eh6AO:02Xc<Id3_lJp/L]nTu5r#,O\\oMq^D[EC/pH0SYNB@CL.\3YrsYle].Jju"WY]5UgDt*l@
%'t4i1562*ABA.NTLc,bkDePp!AY54_U`#-ZQq_2?[07JL#7TKi8ackQ?8>^Ni*o;)L&+NTs4#+7c2pCdhSIUH7kNEK-mC?0Cn\G'
%`R4265_"r3J98TS_2,$9W=^SeH:H^X>#b?kC5=>$fA*V8oq'#`#c`&lc]X_!I9F!R=&K%)70a]Y!4,e*j0'G8'[8o/Ud-%3[#Zdg
%-"eB8ePIV,4MLAg`CNWR.ZA7IBOu3"M):]EUgg7[r=D%sL=16k$?^NLG\bboPE0DPWhO328&e"SNL,eiS:@nK4B@@6\[n;-l\!`2
%?sPT'X7G9B";3A2X1ObC>(If$ms;&"6'@<.@$\IA[B-`i8us\l0</q][DP]076!M1.Dnn%[5L16M6BJ>Xa'p0([I0RN2jN;fIX%d
%.:)@8elqL9=GM-XDGttM(FRs-m:L%(BKWsiFe3R?Zuqo7%9kj`>@l]\4XI=/;OJTdm+e'YW*'*]"g'g!fB3]_PCo*.;-fPUm81[1
%SM[GECi6?Fe%S9\R^rHtVcABR<D02sX/#@A*7_5869PHgs'Illn(f9'\uJu\Cr*VS9mQTnfn;XqZR:C<\W;r"Fc+P<joD*FSdQSd
%[GqtK_FMed`hn]7A>P`!J:Qqs]caJ">ghP1<)eaI*7iRXLY;VBF-o)j:j8<PU[/FfUs^Th%Mn%Pdm;`p1+a-:NCGZ4U29-.]eAZ8
%`(*BmOUr8G+qp#k=tQlHgt5/LSCL@WT[0Z=NQni,7[0%$7(<nacLk9ONOhii"im^n`g`5hR3H.%V-A&llg1:>D:EeB7*SjI!k<+7
%,o5A&`$:)-9qubCVb,-Pb,[4TpZQ&CQe.3F@&9bl/e1mYe+fTs@bS;JY5U;h`MZB[f(nB@7GK0`#enZmidZ_A?@MV>bO9rTJ6hdr
%!E?+(6XkX5aVlX-3i*_`J:Z,"q@q5=XDAXA?te3;YI`fMWlF>i3klujJC]m5X!R^<^3oBZkBk1t2_GLt'6&V1eFu':heK`Mmpcm4
%/Si5?_p$^hqdarV8V^MP&MWm7OUa':m-cEsM#MS]]$VIH&<?rmX:/qZ)n.O4n/j7l2q)RmYo7K/[jVQChqHFN\D\6G(rB>E0`)@E
%]qGpR86]<[mEZ*`!MYX`^NU8RV&=K:kk+Y:@!-KS/1gVT-\1MM:\"*b6?S13?GG3s8."fiN3t<P$h`3BF7"9rP@T4RdQAt.H,*Qr
%*dYSG0ZUjcnSU=+-)2#m5'6=b&_nt'#3bSX&Eauqg!BN*D3H,uca6Ab*m3SEj>]",6l`HP+r[_t)]I6r[Z+h?ail#3pC$OO*/5I7
%d76B%nmS8ZCt<7T;r$CE1Y(Sp?f]B>mBEM^r"lUYs5V`0%q.\o^\HQaDt!*\nC<$%q"iNZ^4#OdZ(lgFPHV`Jn`JB``?5,9=afu+
%pohlmhnJsT07Wile`FFCq9r]5n>1mnI.c#Cs79;VrQ3pt0bnMn~>
%AI9_PrivateDataEnd
